//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1434
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Threading;
using System.Web.Services;
using System.Web.Services.Description;
using System.Web.Services.Protocols;
using System.Xml;
using System.Xml.Schema;
using System.Xml.Serialization;


	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[WebServiceBinding(Name = "ExchangeServiceBinding",
		Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	[XmlInclude(typeof(AttendeeConflictData))]
	[XmlInclude(typeof(BaseResponseMessageType))]
	[XmlInclude(typeof(BaseSubscriptionRequestType))]
	[XmlInclude(typeof(BaseGroupByType))]
	[XmlInclude(typeof(RecurrenceRangeBaseType))]
	[XmlInclude(typeof(RecurrencePatternBaseType))]
	[XmlInclude(typeof(AttachmentType))]
	[XmlInclude(typeof(ChangeDescriptionType))]
	[XmlInclude(typeof(BasePagingType))]
	[XmlInclude(typeof(BasePermissionType))]
	[XmlInclude(typeof(BaseFolderType))]
	[XmlInclude(typeof(BaseItemIdType))]
	[XmlInclude(typeof(BaseEmailAddressType))]
	[XmlInclude(typeof(BaseFolderIdType))]
	[XmlInclude(typeof(BaseRequestType))]
	public partial class ExchangeServiceBinding : SoapHttpClientProtocol
	{
		private ExchangeImpersonationType exchangeImpersonationField;

		private SerializedSecurityContextType serializedSecurityContextField;

		private language mailboxCultureField;

		private RequestServerVersion requestServerVersionValueField;

		private ServerVersionInfo serverVersionInfoValueField;

		private SendOrPostCallback ResolveNamesOperationCompleted;

		private SendOrPostCallback ExpandDLOperationCompleted;

		private SendOrPostCallback FindFolderOperationCompleted;

		private SendOrPostCallback FindItemOperationCompleted;

		private SendOrPostCallback GetFolderOperationCompleted;

		private SendOrPostCallback ConvertIdOperationCompleted;

		private SendOrPostCallback CreateFolderOperationCompleted;

		private SendOrPostCallback DeleteFolderOperationCompleted;

		private SendOrPostCallback UpdateFolderOperationCompleted;

		private SendOrPostCallback MoveFolderOperationCompleted;

		private SendOrPostCallback CopyFolderOperationCompleted;

		private SendOrPostCallback SubscribeOperationCompleted;

		private SendOrPostCallback UnsubscribeOperationCompleted;

		private SendOrPostCallback GetEventsOperationCompleted;

		private SendOrPostCallback SyncFolderHierarchyOperationCompleted;

		private SendOrPostCallback SyncFolderItemsOperationCompleted;

		private SendOrPostCallback CreateManagedFolderOperationCompleted;

		private SendOrPostCallback GetItemOperationCompleted;

		private SendOrPostCallback CreateItemOperationCompleted;

		private SendOrPostCallback DeleteItemOperationCompleted;

		private SendOrPostCallback UpdateItemOperationCompleted;

		private SendOrPostCallback SendItemOperationCompleted;

		private SendOrPostCallback MoveItemOperationCompleted;

		private SendOrPostCallback CopyItemOperationCompleted;

		private SendOrPostCallback CreateAttachmentOperationCompleted;

		private SendOrPostCallback DeleteAttachmentOperationCompleted;

		private SendOrPostCallback GetAttachmentOperationCompleted;

		private SendOrPostCallback GetDelegateOperationCompleted;

		private SendOrPostCallback AddDelegateOperationCompleted;

		private SendOrPostCallback RemoveDelegateOperationCompleted;

		private SendOrPostCallback UpdateDelegateOperationCompleted;

		private AvailabilityProxyRequestType proxyRequestTypeHeaderField;

		private SendOrPostCallback GetUserAvailabilityOperationCompleted;

		private SendOrPostCallback GetUserOofSettingsOperationCompleted;

		private SendOrPostCallback SetUserOofSettingsOperationCompleted;

		/// <remarks/>
		public ExchangeServiceBinding()
		{
		}

		public ExchangeImpersonationType ExchangeImpersonation
		{
			get { return exchangeImpersonationField; }
			set { exchangeImpersonationField = value; }
		}

		public SerializedSecurityContextType SerializedSecurityContext
		{
			get { return serializedSecurityContextField; }
			set { serializedSecurityContextField = value; }
		}

		public language MailboxCulture
		{
			get { return mailboxCultureField; }
			set { mailboxCultureField = value; }
		}

		public RequestServerVersion RequestServerVersionValue
		{
			get { return requestServerVersionValueField; }
			set { requestServerVersionValueField = value; }
		}

		public ServerVersionInfo ServerVersionInfoValue
		{
			get { return serverVersionInfoValueField; }
			set { serverVersionInfoValueField = value; }
		}

		public AvailabilityProxyRequestType ProxyRequestTypeHeader
		{
			get { return proxyRequestTypeHeaderField; }
			set { proxyRequestTypeHeaderField = value; }
		}

		/// <remarks/>
		public event ResolveNamesCompletedEventHandler ResolveNamesCompleted;

		/// <remarks/>
		public event ExpandDLCompletedEventHandler ExpandDLCompleted;

		/// <remarks/>
		public event FindFolderCompletedEventHandler FindFolderCompleted;

		/// <remarks/>
		public event FindItemCompletedEventHandler FindItemCompleted;

		/// <remarks/>
		public event GetFolderCompletedEventHandler GetFolderCompleted;

		/// <remarks/>
		public event ConvertIdCompletedEventHandler ConvertIdCompleted;

		/// <remarks/>
		public event CreateFolderCompletedEventHandler CreateFolderCompleted;

		/// <remarks/>
		public event DeleteFolderCompletedEventHandler DeleteFolderCompleted;

		/// <remarks/>
		public event UpdateFolderCompletedEventHandler UpdateFolderCompleted;

		/// <remarks/>
		public event MoveFolderCompletedEventHandler MoveFolderCompleted;

		/// <remarks/>
		public event CopyFolderCompletedEventHandler CopyFolderCompleted;

		/// <remarks/>
		public event SubscribeCompletedEventHandler SubscribeCompleted;

		/// <remarks/>
		public event UnsubscribeCompletedEventHandler UnsubscribeCompleted;

		/// <remarks/>
		public event GetEventsCompletedEventHandler GetEventsCompleted;

		/// <remarks/>
		public event SyncFolderHierarchyCompletedEventHandler SyncFolderHierarchyCompleted;

		/// <remarks/>
		public event SyncFolderItemsCompletedEventHandler SyncFolderItemsCompleted;

		/// <remarks/>
		public event CreateManagedFolderCompletedEventHandler CreateManagedFolderCompleted;

		/// <remarks/>
		public event GetItemCompletedEventHandler GetItemCompleted;

		/// <remarks/>
		public event CreateItemCompletedEventHandler CreateItemCompleted;

		/// <remarks/>
		public event DeleteItemCompletedEventHandler DeleteItemCompleted;

		/// <remarks/>
		public event UpdateItemCompletedEventHandler UpdateItemCompleted;

		/// <remarks/>
		public event SendItemCompletedEventHandler SendItemCompleted;

		/// <remarks/>
		public event MoveItemCompletedEventHandler MoveItemCompleted;

		/// <remarks/>
		public event CopyItemCompletedEventHandler CopyItemCompleted;

		/// <remarks/>
		public event CreateAttachmentCompletedEventHandler CreateAttachmentCompleted;

		/// <remarks/>
		public event DeleteAttachmentCompletedEventHandler DeleteAttachmentCompleted;

		/// <remarks/>
		public event GetAttachmentCompletedEventHandler GetAttachmentCompleted;

		/// <remarks/>
		public event GetDelegateCompletedEventHandler GetDelegateCompleted;

		/// <remarks/>
		public event AddDelegateCompletedEventHandler AddDelegateCompleted;

		/// <remarks/>
		public event RemoveDelegateCompletedEventHandler RemoveDelegateCompleted;

		/// <remarks/>
		public event UpdateDelegateCompletedEventHandler UpdateDelegateCompleted;

		/// <remarks/>
		public event GetUserAvailabilityCompletedEventHandler GetUserAvailabilityCompleted;

		/// <remarks/>
		public event GetUserOofSettingsCompletedEventHandler GetUserOofSettingsCompleted;

		/// <remarks/>
		public event SetUserOofSettingsCompletedEventHandler SetUserOofSettingsCompleted;

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("MailboxCulture")]
		[SoapHeader("SerializedSecurityContext")]
		[SoapHeader("ExchangeImpersonation")]
		[SoapHeader("RequestServerVersionValue")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/ResolveNames",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return: XmlElement("ResolveNamesResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")
		]
		public ResolveNamesResponseType ResolveNames(
			[XmlElement("ResolveNames", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] ResolveNamesType ResolveNames1)
		{
			object[] results = Invoke("ResolveNames", new object[]
			                                          	{
			                                          		ResolveNames1
			                                          	});
			return ((ResolveNamesResponseType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginResolveNames(ResolveNamesType ResolveNames1, AsyncCallback callback, object asyncState)
		{
			return BeginInvoke("ResolveNames", new object[]
			                                   	{
			                                   		ResolveNames1
			                                   	}, callback, asyncState);
		}

		/// <remarks/>
		public ResolveNamesResponseType EndResolveNames(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((ResolveNamesResponseType) (results[0]));
		}

		/// <remarks/>
		public void ResolveNamesAsync(ResolveNamesType ResolveNames1)
		{
			ResolveNamesAsync(ResolveNames1, null);
		}

		/// <remarks/>
		public void ResolveNamesAsync(ResolveNamesType ResolveNames1, object userState)
		{
			if ((ResolveNamesOperationCompleted == null))
			{
				ResolveNamesOperationCompleted = new SendOrPostCallback(OnResolveNamesOperationCompleted);
			}
			InvokeAsync("ResolveNames", new object[]
			                            	{
			                            		ResolveNames1
			                            	}, ResolveNamesOperationCompleted, userState);
		}

		private void OnResolveNamesOperationCompleted(object arg)
		{
			if ((ResolveNamesCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				ResolveNamesCompleted(this,
									  new ResolveNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled,
																		 invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("MailboxCulture")]
		[SoapHeader("SerializedSecurityContext")]
		[SoapHeader("ExchangeImpersonation")]
		[SoapHeader("RequestServerVersionValue")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/ExpandDL",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return: XmlElement("ExpandDLResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
		public ExpandDLResponseType ExpandDL(
			[XmlElement("ExpandDL", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] ExpandDLType
				ExpandDL1)
		{
			object[] results = Invoke("ExpandDL", new object[]
			                                      	{
			                                      		ExpandDL1
			                                      	});
			return ((ExpandDLResponseType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginExpandDL(ExpandDLType ExpandDL1, AsyncCallback callback, object asyncState)
		{
			return BeginInvoke("ExpandDL", new object[]
			                               	{
			                               		ExpandDL1
			                               	}, callback, asyncState);
		}

		/// <remarks/>
		public ExpandDLResponseType EndExpandDL(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((ExpandDLResponseType) (results[0]));
		}

		/// <remarks/>
		public void ExpandDLAsync(ExpandDLType ExpandDL1)
		{
			ExpandDLAsync(ExpandDL1, null);
		}

		/// <remarks/>
		public void ExpandDLAsync(ExpandDLType ExpandDL1, object userState)
		{
			if ((ExpandDLOperationCompleted == null))
			{
				ExpandDLOperationCompleted = new SendOrPostCallback(OnExpandDLOperationCompleted);
			}
			InvokeAsync("ExpandDL", new object[]
			                        	{
			                        		ExpandDL1
			                        	}, ExpandDLOperationCompleted, userState);
		}

		private void OnExpandDLOperationCompleted(object arg)
		{
			if ((ExpandDLCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				ExpandDLCompleted(this,
								  new ExpandDLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled,
																 invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("MailboxCulture")]
		[SoapHeader("SerializedSecurityContext")]
		[SoapHeader("ExchangeImpersonation")]
		[SoapHeader("RequestServerVersionValue")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/FindFolder",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return: XmlElement("FindFolderResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
		public FindFolderResponseType FindFolder(
			[XmlElement("FindFolder", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] FindFolderType
				FindFolder1)
		{
			object[] results = Invoke("FindFolder", new object[]
			                                        	{
			                                        		FindFolder1
			                                        	});
			return ((FindFolderResponseType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginFindFolder(FindFolderType FindFolder1, AsyncCallback callback, object asyncState)
		{
			return BeginInvoke("FindFolder", new object[]
			                                 	{
			                                 		FindFolder1
			                                 	}, callback, asyncState);
		}

		/// <remarks/>
		public FindFolderResponseType EndFindFolder(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((FindFolderResponseType) (results[0]));
		}

		/// <remarks/>
		public void FindFolderAsync(FindFolderType FindFolder1)
		{
			FindFolderAsync(FindFolder1, null);
		}

		/// <remarks/>
		public void FindFolderAsync(FindFolderType FindFolder1, object userState)
		{
			if ((FindFolderOperationCompleted == null))
			{
				FindFolderOperationCompleted = new SendOrPostCallback(OnFindFolderOperationCompleted);
			}
			InvokeAsync("FindFolder", new object[]
			                          	{
			                          		FindFolder1
			                          	}, FindFolderOperationCompleted, userState);
		}

		private void OnFindFolderOperationCompleted(object arg)
		{
			if ((FindFolderCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				FindFolderCompleted(this,
									new FindFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled,
																	 invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("MailboxCulture")]
		[SoapHeader("SerializedSecurityContext")]
		[SoapHeader("ExchangeImpersonation")]
		[SoapHeader("RequestServerVersionValue")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/FindItem",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return: XmlElement("FindItemResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
		public FindItemResponseType FindItem(
			[XmlElement("FindItem", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] FindItemType
				FindItem1)
		{
			object[] results = Invoke("FindItem", new object[]
			                                      	{
			                                      		FindItem1
			                                      	});
			return ((FindItemResponseType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginFindItem(FindItemType FindItem1, AsyncCallback callback, object asyncState)
		{
			return BeginInvoke("FindItem", new object[]
			                               	{
			                               		FindItem1
			                               	}, callback, asyncState);
		}

		/// <remarks/>
		public FindItemResponseType EndFindItem(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((FindItemResponseType) (results[0]));
		}

		/// <remarks/>
		public void FindItemAsync(FindItemType FindItem1)
		{
			FindItemAsync(FindItem1, null);
		}

		/// <remarks/>
		public void FindItemAsync(FindItemType FindItem1, object userState)
		{
			if ((FindItemOperationCompleted == null))
			{
				FindItemOperationCompleted = new SendOrPostCallback(OnFindItemOperationCompleted);
			}
			InvokeAsync("FindItem", new object[]
			                        	{
			                        		FindItem1
			                        	}, FindItemOperationCompleted, userState);
		}

		private void OnFindItemOperationCompleted(object arg)
		{
			if ((FindItemCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				FindItemCompleted(this,
								  new FindItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled,
																 invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("MailboxCulture")]
		[SoapHeader("SerializedSecurityContext")]
		[SoapHeader("ExchangeImpersonation")]
		[SoapHeader("RequestServerVersionValue")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/GetFolder",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return: XmlElement("GetFolderResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
		public GetFolderResponseType GetFolder(
			[XmlElement("GetFolder", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] GetFolderType
				GetFolder1)
		{
			object[] results = Invoke("GetFolder", new object[]
			                                       	{
			                                       		GetFolder1
			                                       	});
			return ((GetFolderResponseType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginGetFolder(GetFolderType GetFolder1, AsyncCallback callback, object asyncState)
		{
			return BeginInvoke("GetFolder", new object[]
			                                	{
			                                		GetFolder1
			                                	}, callback, asyncState);
		}

		/// <remarks/>
		public GetFolderResponseType EndGetFolder(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((GetFolderResponseType) (results[0]));
		}

		/// <remarks/>
		public void GetFolderAsync(GetFolderType GetFolder1)
		{
			GetFolderAsync(GetFolder1, null);
		}

		/// <remarks/>
		public void GetFolderAsync(GetFolderType GetFolder1, object userState)
		{
			if ((GetFolderOperationCompleted == null))
			{
				GetFolderOperationCompleted = new SendOrPostCallback(OnGetFolderOperationCompleted);
			}
			InvokeAsync("GetFolder", new object[]
			                         	{
			                         		GetFolder1
			                         	}, GetFolderOperationCompleted, userState);
		}

		private void OnGetFolderOperationCompleted(object arg)
		{
			if ((GetFolderCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				GetFolderCompleted(this,
								   new GetFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled,
																   invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("RequestServerVersionValue")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/ConvertId",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return: XmlElement("ConvertIdResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
		public ConvertIdResponseType ConvertId(
			[XmlElement("ConvertId", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] ConvertIdType
				ConvertId1)
		{
			object[] results = Invoke("ConvertId", new object[]
			                                       	{
			                                       		ConvertId1
			                                       	});
			return ((ConvertIdResponseType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginConvertId(ConvertIdType ConvertId1, AsyncCallback callback, object asyncState)
		{
			return BeginInvoke("ConvertId", new object[]
			                                	{
			                                		ConvertId1
			                                	}, callback, asyncState);
		}

		/// <remarks/>
		public ConvertIdResponseType EndConvertId(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((ConvertIdResponseType) (results[0]));
		}

		/// <remarks/>
		public void ConvertIdAsync(ConvertIdType ConvertId1)
		{
			ConvertIdAsync(ConvertId1, null);
		}

		/// <remarks/>
		public void ConvertIdAsync(ConvertIdType ConvertId1, object userState)
		{
			if ((ConvertIdOperationCompleted == null))
			{
				ConvertIdOperationCompleted = new SendOrPostCallback(OnConvertIdOperationCompleted);
			}
			InvokeAsync("ConvertId", new object[]
			                         	{
			                         		ConvertId1
			                         	}, ConvertIdOperationCompleted, userState);
		}

		private void OnConvertIdOperationCompleted(object arg)
		{
			if ((ConvertIdCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				ConvertIdCompleted(this,
								   new ConvertIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled,
																   invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("MailboxCulture")]
		[SoapHeader("SerializedSecurityContext")]
		[SoapHeader("ExchangeImpersonation")]
		[SoapHeader("RequestServerVersionValue")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/CreateFolder",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return: XmlElement("CreateFolderResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")
		]
		public CreateFolderResponseType CreateFolder(
			[XmlElement("CreateFolder", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] CreateFolderType CreateFolder1)
		{
			object[] results = Invoke("CreateFolder", new object[]
			                                          	{
			                                          		CreateFolder1
			                                          	});
			return ((CreateFolderResponseType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginCreateFolder(CreateFolderType CreateFolder1, AsyncCallback callback, object asyncState)
		{
			return BeginInvoke("CreateFolder", new object[]
			                                   	{
			                                   		CreateFolder1
			                                   	}, callback, asyncState);
		}

		/// <remarks/>
		public CreateFolderResponseType EndCreateFolder(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((CreateFolderResponseType) (results[0]));
		}

		/// <remarks/>
		public void CreateFolderAsync(CreateFolderType CreateFolder1)
		{
			CreateFolderAsync(CreateFolder1, null);
		}

		/// <remarks/>
		public void CreateFolderAsync(CreateFolderType CreateFolder1, object userState)
		{
			if ((CreateFolderOperationCompleted == null))
			{
				CreateFolderOperationCompleted = new SendOrPostCallback(OnCreateFolderOperationCompleted);
			}
			InvokeAsync("CreateFolder", new object[]
			                            	{
			                            		CreateFolder1
			                            	}, CreateFolderOperationCompleted, userState);
		}

		private void OnCreateFolderOperationCompleted(object arg)
		{
			if ((CreateFolderCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				CreateFolderCompleted(this,
									  new CreateFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled,
																		 invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("MailboxCulture")]
		[SoapHeader("SerializedSecurityContext")]
		[SoapHeader("ExchangeImpersonation")]
		[SoapHeader("RequestServerVersionValue")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/DeleteFolder",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return: XmlElement("DeleteFolderResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")
		]
		public DeleteFolderResponseType DeleteFolder(
			[XmlElement("DeleteFolder", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] DeleteFolderType DeleteFolder1)
		{
			object[] results = Invoke("DeleteFolder", new object[]
			                                          	{
			                                          		DeleteFolder1
			                                          	});
			return ((DeleteFolderResponseType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginDeleteFolder(DeleteFolderType DeleteFolder1, AsyncCallback callback, object asyncState)
		{
			return BeginInvoke("DeleteFolder", new object[]
			                                   	{
			                                   		DeleteFolder1
			                                   	}, callback, asyncState);
		}

		/// <remarks/>
		public DeleteFolderResponseType EndDeleteFolder(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((DeleteFolderResponseType) (results[0]));
		}

		/// <remarks/>
		public void DeleteFolderAsync(DeleteFolderType DeleteFolder1)
		{
			DeleteFolderAsync(DeleteFolder1, null);
		}

		/// <remarks/>
		public void DeleteFolderAsync(DeleteFolderType DeleteFolder1, object userState)
		{
			if ((DeleteFolderOperationCompleted == null))
			{
				DeleteFolderOperationCompleted = new SendOrPostCallback(OnDeleteFolderOperationCompleted);
			}
			InvokeAsync("DeleteFolder", new object[]
			                            	{
			                            		DeleteFolder1
			                            	}, DeleteFolderOperationCompleted, userState);
		}

		private void OnDeleteFolderOperationCompleted(object arg)
		{
			if ((DeleteFolderCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				DeleteFolderCompleted(this,
									  new DeleteFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled,
																		 invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("MailboxCulture")]
		[SoapHeader("SerializedSecurityContext")]
		[SoapHeader("ExchangeImpersonation")]
		[SoapHeader("RequestServerVersionValue")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/UpdateFolder",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return: XmlElement("UpdateFolderResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")
		]
		public UpdateFolderResponseType UpdateFolder(
			[XmlElement("UpdateFolder", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] UpdateFolderType UpdateFolder1)
		{
			object[] results = Invoke("UpdateFolder", new object[]
			                                          	{
			                                          		UpdateFolder1
			                                          	});
			return ((UpdateFolderResponseType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginUpdateFolder(UpdateFolderType UpdateFolder1, AsyncCallback callback, object asyncState)
		{
			return BeginInvoke("UpdateFolder", new object[]
			                                   	{
			                                   		UpdateFolder1
			                                   	}, callback, asyncState);
		}

		/// <remarks/>
		public UpdateFolderResponseType EndUpdateFolder(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((UpdateFolderResponseType) (results[0]));
		}

		/// <remarks/>
		public void UpdateFolderAsync(UpdateFolderType UpdateFolder1)
		{
			UpdateFolderAsync(UpdateFolder1, null);
		}

		/// <remarks/>
		public void UpdateFolderAsync(UpdateFolderType UpdateFolder1, object userState)
		{
			if ((UpdateFolderOperationCompleted == null))
			{
				UpdateFolderOperationCompleted = new SendOrPostCallback(OnUpdateFolderOperationCompleted);
			}
			InvokeAsync("UpdateFolder", new object[]
			                            	{
			                            		UpdateFolder1
			                            	}, UpdateFolderOperationCompleted, userState);
		}

		private void OnUpdateFolderOperationCompleted(object arg)
		{
			if ((UpdateFolderCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				UpdateFolderCompleted(this,
									  new UpdateFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled,
																		 invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("MailboxCulture")]
		[SoapHeader("SerializedSecurityContext")]
		[SoapHeader("ExchangeImpersonation")]
		[SoapHeader("RequestServerVersionValue")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/MoveFolder",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return: XmlElement("MoveFolderResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
		public MoveFolderResponseType MoveFolder(
			[XmlElement("MoveFolder", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] MoveFolderType
				MoveFolder1)
		{
			object[] results = Invoke("MoveFolder", new object[]
			                                        	{
			                                        		MoveFolder1
			                                        	});
			return ((MoveFolderResponseType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginMoveFolder(MoveFolderType MoveFolder1, AsyncCallback callback, object asyncState)
		{
			return BeginInvoke("MoveFolder", new object[]
			                                 	{
			                                 		MoveFolder1
			                                 	}, callback, asyncState);
		}

		/// <remarks/>
		public MoveFolderResponseType EndMoveFolder(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((MoveFolderResponseType) (results[0]));
		}

		/// <remarks/>
		public void MoveFolderAsync(MoveFolderType MoveFolder1)
		{
			MoveFolderAsync(MoveFolder1, null);
		}

		/// <remarks/>
		public void MoveFolderAsync(MoveFolderType MoveFolder1, object userState)
		{
			if ((MoveFolderOperationCompleted == null))
			{
				MoveFolderOperationCompleted = new SendOrPostCallback(OnMoveFolderOperationCompleted);
			}
			InvokeAsync("MoveFolder", new object[]
			                          	{
			                          		MoveFolder1
			                          	}, MoveFolderOperationCompleted, userState);
		}

		private void OnMoveFolderOperationCompleted(object arg)
		{
			if ((MoveFolderCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				MoveFolderCompleted(this,
									new MoveFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled,
																	 invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("MailboxCulture")]
		[SoapHeader("SerializedSecurityContext")]
		[SoapHeader("ExchangeImpersonation")]
		[SoapHeader("RequestServerVersionValue")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/CopyFolder",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return: XmlElement("CopyFolderResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
		public CopyFolderResponseType CopyFolder(
			[XmlElement("CopyFolder", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] CopyFolderType
				CopyFolder1)
		{
			object[] results = Invoke("CopyFolder", new object[]
			                                        	{
			                                        		CopyFolder1
			                                        	});
			return ((CopyFolderResponseType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginCopyFolder(CopyFolderType CopyFolder1, AsyncCallback callback, object asyncState)
		{
			return BeginInvoke("CopyFolder", new object[]
			                                 	{
			                                 		CopyFolder1
			                                 	}, callback, asyncState);
		}

		/// <remarks/>
		public CopyFolderResponseType EndCopyFolder(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((CopyFolderResponseType) (results[0]));
		}

		/// <remarks/>
		public void CopyFolderAsync(CopyFolderType CopyFolder1)
		{
			CopyFolderAsync(CopyFolder1, null);
		}

		/// <remarks/>
		public void CopyFolderAsync(CopyFolderType CopyFolder1, object userState)
		{
			if ((CopyFolderOperationCompleted == null))
			{
				CopyFolderOperationCompleted = new SendOrPostCallback(OnCopyFolderOperationCompleted);
			}
			InvokeAsync("CopyFolder", new object[]
			                          	{
			                          		CopyFolder1
			                          	}, CopyFolderOperationCompleted, userState);
		}

		private void OnCopyFolderOperationCompleted(object arg)
		{
			if ((CopyFolderCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				CopyFolderCompleted(this,
									new CopyFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled,
																	 invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("MailboxCulture")]
		[SoapHeader("SerializedSecurityContext")]
		[SoapHeader("ExchangeImpersonation")]
		[SoapHeader("RequestServerVersionValue")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/Subscribe",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return: XmlElement("SubscribeResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
		public SubscribeResponseType Subscribe(
			[XmlElement("Subscribe", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] SubscribeType
				Subscribe1)
		{
			object[] results = Invoke("Subscribe", new object[]
			                                       	{
			                                       		Subscribe1
			                                       	});
			return ((SubscribeResponseType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginSubscribe(SubscribeType Subscribe1, AsyncCallback callback, object asyncState)
		{
			return BeginInvoke("Subscribe", new object[]
			                                	{
			                                		Subscribe1
			                                	}, callback, asyncState);
		}

		/// <remarks/>
		public SubscribeResponseType EndSubscribe(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((SubscribeResponseType) (results[0]));
		}

		/// <remarks/>
		public void SubscribeAsync(SubscribeType Subscribe1)
		{
			SubscribeAsync(Subscribe1, null);
		}

		/// <remarks/>
		public void SubscribeAsync(SubscribeType Subscribe1, object userState)
		{
			if ((SubscribeOperationCompleted == null))
			{
				SubscribeOperationCompleted = new SendOrPostCallback(OnSubscribeOperationCompleted);
			}
			InvokeAsync("Subscribe", new object[]
			                         	{
			                         		Subscribe1
			                         	}, SubscribeOperationCompleted, userState);
		}

		private void OnSubscribeOperationCompleted(object arg)
		{
			if ((SubscribeCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				SubscribeCompleted(this,
								   new SubscribeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled,
																   invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("MailboxCulture")]
		[SoapHeader("SerializedSecurityContext")]
		[SoapHeader("ExchangeImpersonation")]
		[SoapHeader("RequestServerVersionValue")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/Unsubscribe",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return: XmlElement("UnsubscribeResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
		public UnsubscribeResponseType Unsubscribe(
			[XmlElement("Unsubscribe", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] UnsubscribeType
				Unsubscribe1)
		{
			object[] results = Invoke("Unsubscribe", new object[]
			                                         	{
			                                         		Unsubscribe1
			                                         	});
			return ((UnsubscribeResponseType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginUnsubscribe(UnsubscribeType Unsubscribe1, AsyncCallback callback, object asyncState)
		{
			return BeginInvoke("Unsubscribe", new object[]
			                                  	{
			                                  		Unsubscribe1
			                                  	}, callback, asyncState);
		}

		/// <remarks/>
		public UnsubscribeResponseType EndUnsubscribe(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((UnsubscribeResponseType) (results[0]));
		}

		/// <remarks/>
		public void UnsubscribeAsync(UnsubscribeType Unsubscribe1)
		{
			UnsubscribeAsync(Unsubscribe1, null);
		}

		/// <remarks/>
		public void UnsubscribeAsync(UnsubscribeType Unsubscribe1, object userState)
		{
			if ((UnsubscribeOperationCompleted == null))
			{
				UnsubscribeOperationCompleted = new SendOrPostCallback(OnUnsubscribeOperationCompleted);
			}
			InvokeAsync("Unsubscribe", new object[]
			                           	{
			                           		Unsubscribe1
			                           	}, UnsubscribeOperationCompleted, userState);
		}

		private void OnUnsubscribeOperationCompleted(object arg)
		{
			if ((UnsubscribeCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				UnsubscribeCompleted(this,
									 new UnsubscribeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled,
																	   invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("MailboxCulture")]
		[SoapHeader("SerializedSecurityContext")]
		[SoapHeader("ExchangeImpersonation")]
		[SoapHeader("RequestServerVersionValue")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/GetEvents",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return: XmlElement("GetEventsResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
		public GetEventsResponseType GetEvents(
			[XmlElement("GetEvents", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] GetEventsType
				GetEvents1)
		{
			object[] results = Invoke("GetEvents", new object[]
			                                       	{
			                                       		GetEvents1
			                                       	});
			return ((GetEventsResponseType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginGetEvents(GetEventsType GetEvents1, AsyncCallback callback, object asyncState)
		{
			return BeginInvoke("GetEvents", new object[]
			                                	{
			                                		GetEvents1
			                                	}, callback, asyncState);
		}

		/// <remarks/>
		public GetEventsResponseType EndGetEvents(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((GetEventsResponseType) (results[0]));
		}

		/// <remarks/>
		public void GetEventsAsync(GetEventsType GetEvents1)
		{
			GetEventsAsync(GetEvents1, null);
		}

		/// <remarks/>
		public void GetEventsAsync(GetEventsType GetEvents1, object userState)
		{
			if ((GetEventsOperationCompleted == null))
			{
				GetEventsOperationCompleted = new SendOrPostCallback(OnGetEventsOperationCompleted);
			}
			InvokeAsync("GetEvents", new object[]
			                         	{
			                         		GetEvents1
			                         	}, GetEventsOperationCompleted, userState);
		}

		private void OnGetEventsOperationCompleted(object arg)
		{
			if ((GetEventsCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				GetEventsCompleted(this,
								   new GetEventsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled,
																   invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("MailboxCulture")]
		[SoapHeader("SerializedSecurityContext")]
		[SoapHeader("ExchangeImpersonation")]
		[SoapHeader("RequestServerVersionValue")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/SyncFolderHierarchy",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return:
			XmlElement("SyncFolderHierarchyResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
		public SyncFolderHierarchyResponseType SyncFolderHierarchy(
			[XmlElement("SyncFolderHierarchy", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] SyncFolderHierarchyType SyncFolderHierarchy1)
		{
			object[] results = Invoke("SyncFolderHierarchy", new object[]
			                                                 	{
			                                                 		SyncFolderHierarchy1
			                                                 	});
			return ((SyncFolderHierarchyResponseType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginSyncFolderHierarchy(SyncFolderHierarchyType SyncFolderHierarchy1, AsyncCallback callback,
													 object asyncState)
		{
			return BeginInvoke("SyncFolderHierarchy", new object[]
			                                          	{
			                                          		SyncFolderHierarchy1
			                                          	}, callback, asyncState);
		}

		/// <remarks/>
		public SyncFolderHierarchyResponseType EndSyncFolderHierarchy(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((SyncFolderHierarchyResponseType) (results[0]));
		}

		/// <remarks/>
		public void SyncFolderHierarchyAsync(SyncFolderHierarchyType SyncFolderHierarchy1)
		{
			SyncFolderHierarchyAsync(SyncFolderHierarchy1, null);
		}

		/// <remarks/>
		public void SyncFolderHierarchyAsync(SyncFolderHierarchyType SyncFolderHierarchy1, object userState)
		{
			if ((SyncFolderHierarchyOperationCompleted == null))
			{
				SyncFolderHierarchyOperationCompleted = new SendOrPostCallback(OnSyncFolderHierarchyOperationCompleted);
			}
			InvokeAsync("SyncFolderHierarchy", new object[]
			                                   	{
			                                   		SyncFolderHierarchy1
			                                   	}, SyncFolderHierarchyOperationCompleted, userState);
		}

		private void OnSyncFolderHierarchyOperationCompleted(object arg)
		{
			if ((SyncFolderHierarchyCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				SyncFolderHierarchyCompleted(this,
											 new SyncFolderHierarchyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error,
																					   invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("MailboxCulture")]
		[SoapHeader("SerializedSecurityContext")]
		[SoapHeader("ExchangeImpersonation")]
		[SoapHeader("RequestServerVersionValue")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/SyncFolderItems",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return:
			XmlElement("SyncFolderItemsResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
		public SyncFolderItemsResponseType SyncFolderItems(
			[XmlElement("SyncFolderItems", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] SyncFolderItemsType SyncFolderItems1)
		{
			object[] results = Invoke("SyncFolderItems", new object[]
			                                             	{
			                                             		SyncFolderItems1
			                                             	});
			return ((SyncFolderItemsResponseType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginSyncFolderItems(SyncFolderItemsType SyncFolderItems1, AsyncCallback callback,
												 object asyncState)
		{
			return BeginInvoke("SyncFolderItems", new object[]
			                                      	{
			                                      		SyncFolderItems1
			                                      	}, callback, asyncState);
		}

		/// <remarks/>
		public SyncFolderItemsResponseType EndSyncFolderItems(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((SyncFolderItemsResponseType) (results[0]));
		}

		/// <remarks/>
		public void SyncFolderItemsAsync(SyncFolderItemsType SyncFolderItems1)
		{
			SyncFolderItemsAsync(SyncFolderItems1, null);
		}

		/// <remarks/>
		public void SyncFolderItemsAsync(SyncFolderItemsType SyncFolderItems1, object userState)
		{
			if ((SyncFolderItemsOperationCompleted == null))
			{
				SyncFolderItemsOperationCompleted = new SendOrPostCallback(OnSyncFolderItemsOperationCompleted);
			}
			InvokeAsync("SyncFolderItems", new object[]
			                               	{
			                               		SyncFolderItems1
			                               	}, SyncFolderItemsOperationCompleted, userState);
		}

		private void OnSyncFolderItemsOperationCompleted(object arg)
		{
			if ((SyncFolderItemsCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				SyncFolderItemsCompleted(this,
										 new SyncFolderItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error,
																			   invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("MailboxCulture")]
		[SoapHeader("SerializedSecurityContext")]
		[SoapHeader("ExchangeImpersonation")]
		[SoapHeader("RequestServerVersionValue")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/CreateManagedFolder",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return:
			XmlElement("CreateManagedFolderResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
		public CreateManagedFolderResponseType CreateManagedFolder(
			[XmlElement("CreateManagedFolder", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] CreateManagedFolderRequestType CreateManagedFolder1)
		{
			object[] results = Invoke("CreateManagedFolder", new object[]
			                                                 	{
			                                                 		CreateManagedFolder1
			                                                 	});
			return ((CreateManagedFolderResponseType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginCreateManagedFolder(CreateManagedFolderRequestType CreateManagedFolder1,
													 AsyncCallback callback, object asyncState)
		{
			return BeginInvoke("CreateManagedFolder", new object[]
			                                          	{
			                                          		CreateManagedFolder1
			                                          	}, callback, asyncState);
		}

		/// <remarks/>
		public CreateManagedFolderResponseType EndCreateManagedFolder(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((CreateManagedFolderResponseType) (results[0]));
		}

		/// <remarks/>
		public void CreateManagedFolderAsync(CreateManagedFolderRequestType CreateManagedFolder1)
		{
			CreateManagedFolderAsync(CreateManagedFolder1, null);
		}

		/// <remarks/>
		public void CreateManagedFolderAsync(CreateManagedFolderRequestType CreateManagedFolder1, object userState)
		{
			if ((CreateManagedFolderOperationCompleted == null))
			{
				CreateManagedFolderOperationCompleted = new SendOrPostCallback(OnCreateManagedFolderOperationCompleted);
			}
			InvokeAsync("CreateManagedFolder", new object[]
			                                   	{
			                                   		CreateManagedFolder1
			                                   	}, CreateManagedFolderOperationCompleted, userState);
		}

		private void OnCreateManagedFolderOperationCompleted(object arg)
		{
			if ((CreateManagedFolderCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				CreateManagedFolderCompleted(this,
											 new CreateManagedFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error,
																					   invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("MailboxCulture")]
		[SoapHeader("SerializedSecurityContext")]
		[SoapHeader("ExchangeImpersonation")]
		[SoapHeader("RequestServerVersionValue")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/GetItem", Use = SoapBindingUse.Literal
			, ParameterStyle = SoapParameterStyle.Bare)]
		[return: XmlElement("GetItemResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
		public GetItemResponseType GetItem(
			[XmlElement("GetItem", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] GetItemType
				GetItem1)
		{
			object[] results = Invoke("GetItem", new object[]
			                                     	{
			                                     		GetItem1
			                                     	});
			return ((GetItemResponseType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginGetItem(GetItemType GetItem1, AsyncCallback callback, object asyncState)
		{
			return BeginInvoke("GetItem", new object[]
			                              	{
			                              		GetItem1
			                              	}, callback, asyncState);
		}

		/// <remarks/>
		public GetItemResponseType EndGetItem(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((GetItemResponseType) (results[0]));
		}

		/// <remarks/>
		public void GetItemAsync(GetItemType GetItem1)
		{
			GetItemAsync(GetItem1, null);
		}

		/// <remarks/>
		public void GetItemAsync(GetItemType GetItem1, object userState)
		{
			if ((GetItemOperationCompleted == null))
			{
				GetItemOperationCompleted = new SendOrPostCallback(OnGetItemOperationCompleted);
			}
			InvokeAsync("GetItem", new object[]
			                       	{
			                       		GetItem1
			                       	}, GetItemOperationCompleted, userState);
		}

		private void OnGetItemOperationCompleted(object arg)
		{
			if ((GetItemCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				GetItemCompleted(this,
								 new GetItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled,
															   invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("MailboxCulture")]
		[SoapHeader("SerializedSecurityContext")]
		[SoapHeader("ExchangeImpersonation")]
		[SoapHeader("RequestServerVersionValue")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/CreateItem",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return: XmlElement("CreateItemResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
		public CreateItemResponseType CreateItem(
			[XmlElement("CreateItem", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] CreateItemType
				CreateItem1)
		{
			object[] results = Invoke("CreateItem", new object[]
			                                        	{
			                                        		CreateItem1
			                                        	});
			return ((CreateItemResponseType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginCreateItem(CreateItemType CreateItem1, AsyncCallback callback, object asyncState)
		{
			return BeginInvoke("CreateItem", new object[]
			                                 	{
			                                 		CreateItem1
			                                 	}, callback, asyncState);
		}

		/// <remarks/>
		public CreateItemResponseType EndCreateItem(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((CreateItemResponseType) (results[0]));
		}

		/// <remarks/>
		public void CreateItemAsync(CreateItemType CreateItem1)
		{
			CreateItemAsync(CreateItem1, null);
		}

		/// <remarks/>
		public void CreateItemAsync(CreateItemType CreateItem1, object userState)
		{
			if ((CreateItemOperationCompleted == null))
			{
				CreateItemOperationCompleted = new SendOrPostCallback(OnCreateItemOperationCompleted);
			}
			InvokeAsync("CreateItem", new object[]
			                          	{
			                          		CreateItem1
			                          	}, CreateItemOperationCompleted, userState);
		}

		private void OnCreateItemOperationCompleted(object arg)
		{
			if ((CreateItemCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				CreateItemCompleted(this,
									new CreateItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled,
																	 invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("MailboxCulture")]
		[SoapHeader("SerializedSecurityContext")]
		[SoapHeader("ExchangeImpersonation")]
		[SoapHeader("RequestServerVersionValue")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/DeleteItem",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return: XmlElement("DeleteItemResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
		public DeleteItemResponseType DeleteItem(
			[XmlElement("DeleteItem", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] DeleteItemType
				DeleteItem1)
		{
			object[] results = Invoke("DeleteItem", new object[]
			                                        	{
			                                        		DeleteItem1
			                                        	});
			return ((DeleteItemResponseType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginDeleteItem(DeleteItemType DeleteItem1, AsyncCallback callback, object asyncState)
		{
			return BeginInvoke("DeleteItem", new object[]
			                                 	{
			                                 		DeleteItem1
			                                 	}, callback, asyncState);
		}

		/// <remarks/>
		public DeleteItemResponseType EndDeleteItem(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((DeleteItemResponseType) (results[0]));
		}

		/// <remarks/>
		public void DeleteItemAsync(DeleteItemType DeleteItem1)
		{
			DeleteItemAsync(DeleteItem1, null);
		}

		/// <remarks/>
		public void DeleteItemAsync(DeleteItemType DeleteItem1, object userState)
		{
			if ((DeleteItemOperationCompleted == null))
			{
				DeleteItemOperationCompleted = new SendOrPostCallback(OnDeleteItemOperationCompleted);
			}
			InvokeAsync("DeleteItem", new object[]
			                          	{
			                          		DeleteItem1
			                          	}, DeleteItemOperationCompleted, userState);
		}

		private void OnDeleteItemOperationCompleted(object arg)
		{
			if ((DeleteItemCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				DeleteItemCompleted(this,
									new DeleteItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled,
																	 invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("MailboxCulture")]
		[SoapHeader("SerializedSecurityContext")]
		[SoapHeader("ExchangeImpersonation")]
		[SoapHeader("RequestServerVersionValue")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/UpdateItem",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return: XmlElement("UpdateItemResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
		public UpdateItemResponseType UpdateItem(
			[XmlElement("UpdateItem", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] UpdateItemType
				UpdateItem1)
		{
			object[] results = Invoke("UpdateItem", new object[]
			                                        	{
			                                        		UpdateItem1
			                                        	});
			return ((UpdateItemResponseType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginUpdateItem(UpdateItemType UpdateItem1, AsyncCallback callback, object asyncState)
		{
			return BeginInvoke("UpdateItem", new object[]
			                                 	{
			                                 		UpdateItem1
			                                 	}, callback, asyncState);
		}

		/// <remarks/>
		public UpdateItemResponseType EndUpdateItem(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((UpdateItemResponseType) (results[0]));
		}

		/// <remarks/>
		public void UpdateItemAsync(UpdateItemType UpdateItem1)
		{
			UpdateItemAsync(UpdateItem1, null);
		}

		/// <remarks/>
		public void UpdateItemAsync(UpdateItemType UpdateItem1, object userState)
		{
			if ((UpdateItemOperationCompleted == null))
			{
				UpdateItemOperationCompleted = new SendOrPostCallback(OnUpdateItemOperationCompleted);
			}
			InvokeAsync("UpdateItem", new object[]
			                          	{
			                          		UpdateItem1
			                          	}, UpdateItemOperationCompleted, userState);
		}

		private void OnUpdateItemOperationCompleted(object arg)
		{
			if ((UpdateItemCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				UpdateItemCompleted(this,
									new UpdateItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled,
																	 invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("MailboxCulture")]
		[SoapHeader("SerializedSecurityContext")]
		[SoapHeader("ExchangeImpersonation")]
		[SoapHeader("RequestServerVersionValue")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/SendItem",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return: XmlElement("SendItemResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
		public SendItemResponseType SendItem(
			[XmlElement("SendItem", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] SendItemType
				SendItem1)
		{
			object[] results = Invoke("SendItem", new object[]
			                                      	{
			                                      		SendItem1
			                                      	});
			return ((SendItemResponseType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginSendItem(SendItemType SendItem1, AsyncCallback callback, object asyncState)
		{
			return BeginInvoke("SendItem", new object[]
			                               	{
			                               		SendItem1
			                               	}, callback, asyncState);
		}

		/// <remarks/>
		public SendItemResponseType EndSendItem(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((SendItemResponseType) (results[0]));
		}

		/// <remarks/>
		public void SendItemAsync(SendItemType SendItem1)
		{
			SendItemAsync(SendItem1, null);
		}

		/// <remarks/>
		public void SendItemAsync(SendItemType SendItem1, object userState)
		{
			if ((SendItemOperationCompleted == null))
			{
				SendItemOperationCompleted = new SendOrPostCallback(OnSendItemOperationCompleted);
			}
			InvokeAsync("SendItem", new object[]
			                        	{
			                        		SendItem1
			                        	}, SendItemOperationCompleted, userState);
		}

		private void OnSendItemOperationCompleted(object arg)
		{
			if ((SendItemCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				SendItemCompleted(this,
								  new SendItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled,
																 invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("MailboxCulture")]
		[SoapHeader("SerializedSecurityContext")]
		[SoapHeader("ExchangeImpersonation")]
		[SoapHeader("RequestServerVersionValue")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/MoveItem",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return: XmlElement("MoveItemResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
		public MoveItemResponseType MoveItem(
			[XmlElement("MoveItem", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] MoveItemType
				MoveItem1)
		{
			object[] results = Invoke("MoveItem", new object[]
			                                      	{
			                                      		MoveItem1
			                                      	});
			return ((MoveItemResponseType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginMoveItem(MoveItemType MoveItem1, AsyncCallback callback, object asyncState)
		{
			return BeginInvoke("MoveItem", new object[]
			                               	{
			                               		MoveItem1
			                               	}, callback, asyncState);
		}

		/// <remarks/>
		public MoveItemResponseType EndMoveItem(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((MoveItemResponseType) (results[0]));
		}

		/// <remarks/>
		public void MoveItemAsync(MoveItemType MoveItem1)
		{
			MoveItemAsync(MoveItem1, null);
		}

		/// <remarks/>
		public void MoveItemAsync(MoveItemType MoveItem1, object userState)
		{
			if ((MoveItemOperationCompleted == null))
			{
				MoveItemOperationCompleted = new SendOrPostCallback(OnMoveItemOperationCompleted);
			}
			InvokeAsync("MoveItem", new object[]
			                        	{
			                        		MoveItem1
			                        	}, MoveItemOperationCompleted, userState);
		}

		private void OnMoveItemOperationCompleted(object arg)
		{
			if ((MoveItemCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				MoveItemCompleted(this,
								  new MoveItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled,
																 invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("MailboxCulture")]
		[SoapHeader("SerializedSecurityContext")]
		[SoapHeader("ExchangeImpersonation")]
		[SoapHeader("RequestServerVersionValue")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/CopyItem",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return: XmlElement("CopyItemResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
		public CopyItemResponseType CopyItem(
			[XmlElement("CopyItem", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] CopyItemType
				CopyItem1)
		{
			object[] results = Invoke("CopyItem", new object[]
			                                      	{
			                                      		CopyItem1
			                                      	});
			return ((CopyItemResponseType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginCopyItem(CopyItemType CopyItem1, AsyncCallback callback, object asyncState)
		{
			return BeginInvoke("CopyItem", new object[]
			                               	{
			                               		CopyItem1
			                               	}, callback, asyncState);
		}

		/// <remarks/>
		public CopyItemResponseType EndCopyItem(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((CopyItemResponseType) (results[0]));
		}

		/// <remarks/>
		public void CopyItemAsync(CopyItemType CopyItem1)
		{
			CopyItemAsync(CopyItem1, null);
		}

		/// <remarks/>
		public void CopyItemAsync(CopyItemType CopyItem1, object userState)
		{
			if ((CopyItemOperationCompleted == null))
			{
				CopyItemOperationCompleted = new SendOrPostCallback(OnCopyItemOperationCompleted);
			}
			InvokeAsync("CopyItem", new object[]
			                        	{
			                        		CopyItem1
			                        	}, CopyItemOperationCompleted, userState);
		}

		private void OnCopyItemOperationCompleted(object arg)
		{
			if ((CopyItemCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				CopyItemCompleted(this,
								  new CopyItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled,
																 invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("MailboxCulture")]
		[SoapHeader("SerializedSecurityContext")]
		[SoapHeader("ExchangeImpersonation")]
		[SoapHeader("RequestServerVersionValue")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/CreateAttachment",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return:
			XmlElement("CreateAttachmentResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
		public CreateAttachmentResponseType CreateAttachment(
			[XmlElement("CreateAttachment", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] CreateAttachmentType CreateAttachment1)
		{
			object[] results = Invoke("CreateAttachment", new object[]
			                                              	{
			                                              		CreateAttachment1
			                                              	});
			return ((CreateAttachmentResponseType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginCreateAttachment(CreateAttachmentType CreateAttachment1, AsyncCallback callback,
												  object asyncState)
		{
			return BeginInvoke("CreateAttachment", new object[]
			                                       	{
			                                       		CreateAttachment1
			                                       	}, callback, asyncState);
		}

		/// <remarks/>
		public CreateAttachmentResponseType EndCreateAttachment(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((CreateAttachmentResponseType) (results[0]));
		}

		/// <remarks/>
		public void CreateAttachmentAsync(CreateAttachmentType CreateAttachment1)
		{
			CreateAttachmentAsync(CreateAttachment1, null);
		}

		/// <remarks/>
		public void CreateAttachmentAsync(CreateAttachmentType CreateAttachment1, object userState)
		{
			if ((CreateAttachmentOperationCompleted == null))
			{
				CreateAttachmentOperationCompleted = new SendOrPostCallback(OnCreateAttachmentOperationCompleted);
			}
			InvokeAsync("CreateAttachment", new object[]
			                                	{
			                                		CreateAttachment1
			                                	}, CreateAttachmentOperationCompleted, userState);
		}

		private void OnCreateAttachmentOperationCompleted(object arg)
		{
			if ((CreateAttachmentCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				CreateAttachmentCompleted(this,
										  new CreateAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error,
																				 invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("MailboxCulture")]
		[SoapHeader("SerializedSecurityContext")]
		[SoapHeader("ExchangeImpersonation")]
		[SoapHeader("RequestServerVersionValue")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/DeleteAttachment",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return:
			XmlElement("DeleteAttachmentResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
		public DeleteAttachmentResponseType DeleteAttachment(
			[XmlElement("DeleteAttachment", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] DeleteAttachmentType DeleteAttachment1)
		{
			object[] results = Invoke("DeleteAttachment", new object[]
			                                              	{
			                                              		DeleteAttachment1
			                                              	});
			return ((DeleteAttachmentResponseType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginDeleteAttachment(DeleteAttachmentType DeleteAttachment1, AsyncCallback callback,
												  object asyncState)
		{
			return BeginInvoke("DeleteAttachment", new object[]
			                                       	{
			                                       		DeleteAttachment1
			                                       	}, callback, asyncState);
		}

		/// <remarks/>
		public DeleteAttachmentResponseType EndDeleteAttachment(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((DeleteAttachmentResponseType) (results[0]));
		}

		/// <remarks/>
		public void DeleteAttachmentAsync(DeleteAttachmentType DeleteAttachment1)
		{
			DeleteAttachmentAsync(DeleteAttachment1, null);
		}

		/// <remarks/>
		public void DeleteAttachmentAsync(DeleteAttachmentType DeleteAttachment1, object userState)
		{
			if ((DeleteAttachmentOperationCompleted == null))
			{
				DeleteAttachmentOperationCompleted = new SendOrPostCallback(OnDeleteAttachmentOperationCompleted);
			}
			InvokeAsync("DeleteAttachment", new object[]
			                                	{
			                                		DeleteAttachment1
			                                	}, DeleteAttachmentOperationCompleted, userState);
		}

		private void OnDeleteAttachmentOperationCompleted(object arg)
		{
			if ((DeleteAttachmentCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				DeleteAttachmentCompleted(this,
										  new DeleteAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error,
																				 invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("MailboxCulture")]
		[SoapHeader("SerializedSecurityContext")]
		[SoapHeader("ExchangeImpersonation")]
		[SoapHeader("RequestServerVersionValue")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/GetAttachment",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return:
			XmlElement("GetAttachmentResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
		public GetAttachmentResponseType GetAttachment(
			[XmlElement("GetAttachment", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] GetAttachmentType GetAttachment1)
		{
			object[] results = Invoke("GetAttachment", new object[]
			                                           	{
			                                           		GetAttachment1
			                                           	});
			return ((GetAttachmentResponseType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginGetAttachment(GetAttachmentType GetAttachment1, AsyncCallback callback, object asyncState)
		{
			return BeginInvoke("GetAttachment", new object[]
			                                    	{
			                                    		GetAttachment1
			                                    	}, callback, asyncState);
		}

		/// <remarks/>
		public GetAttachmentResponseType EndGetAttachment(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((GetAttachmentResponseType) (results[0]));
		}

		/// <remarks/>
		public void GetAttachmentAsync(GetAttachmentType GetAttachment1)
		{
			GetAttachmentAsync(GetAttachment1, null);
		}

		/// <remarks/>
		public void GetAttachmentAsync(GetAttachmentType GetAttachment1, object userState)
		{
			if ((GetAttachmentOperationCompleted == null))
			{
				GetAttachmentOperationCompleted = new SendOrPostCallback(OnGetAttachmentOperationCompleted);
			}
			InvokeAsync("GetAttachment", new object[]
			                             	{
			                             		GetAttachment1
			                             	}, GetAttachmentOperationCompleted, userState);
		}

		private void OnGetAttachmentOperationCompleted(object arg)
		{
			if ((GetAttachmentCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				GetAttachmentCompleted(this,
									   new GetAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error,
																		   invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("MailboxCulture")]
		[SoapHeader("SerializedSecurityContext")]
		[SoapHeader("ExchangeImpersonation")]
		[SoapHeader("RequestServerVersionValue")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/GetDelegate",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return: XmlElement("GetDelegateResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
		public GetDelegateResponseMessageType GetDelegate(
			[XmlElement("GetDelegate", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] GetDelegateType
				GetDelegate1)
		{
			object[] results = Invoke("GetDelegate", new object[]
			                                         	{
			                                         		GetDelegate1
			                                         	});
			return ((GetDelegateResponseMessageType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginGetDelegate(GetDelegateType GetDelegate1, AsyncCallback callback, object asyncState)
		{
			return BeginInvoke("GetDelegate", new object[]
			                                  	{
			                                  		GetDelegate1
			                                  	}, callback, asyncState);
		}

		/// <remarks/>
		public GetDelegateResponseMessageType EndGetDelegate(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((GetDelegateResponseMessageType) (results[0]));
		}

		/// <remarks/>
		public void GetDelegateAsync(GetDelegateType GetDelegate1)
		{
			GetDelegateAsync(GetDelegate1, null);
		}

		/// <remarks/>
		public void GetDelegateAsync(GetDelegateType GetDelegate1, object userState)
		{
			if ((GetDelegateOperationCompleted == null))
			{
				GetDelegateOperationCompleted = new SendOrPostCallback(OnGetDelegateOperationCompleted);
			}
			InvokeAsync("GetDelegate", new object[]
			                           	{
			                           		GetDelegate1
			                           	}, GetDelegateOperationCompleted, userState);
		}

		private void OnGetDelegateOperationCompleted(object arg)
		{
			if ((GetDelegateCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				GetDelegateCompleted(this,
									 new GetDelegateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled,
																	   invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("MailboxCulture")]
		[SoapHeader("SerializedSecurityContext")]
		[SoapHeader("ExchangeImpersonation")]
		[SoapHeader("RequestServerVersionValue")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/AddDelegate",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return: XmlElement("AddDelegateResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
		public AddDelegateResponseMessageType AddDelegate(
			[XmlElement("AddDelegate", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] AddDelegateType
				AddDelegate1)
		{
			object[] results = Invoke("AddDelegate", new object[]
			                                         	{
			                                         		AddDelegate1
			                                         	});
			return ((AddDelegateResponseMessageType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginAddDelegate(AddDelegateType AddDelegate1, AsyncCallback callback, object asyncState)
		{
			return BeginInvoke("AddDelegate", new object[]
			                                  	{
			                                  		AddDelegate1
			                                  	}, callback, asyncState);
		}

		/// <remarks/>
		public AddDelegateResponseMessageType EndAddDelegate(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((AddDelegateResponseMessageType) (results[0]));
		}

		/// <remarks/>
		public void AddDelegateAsync(AddDelegateType AddDelegate1)
		{
			AddDelegateAsync(AddDelegate1, null);
		}

		/// <remarks/>
		public void AddDelegateAsync(AddDelegateType AddDelegate1, object userState)
		{
			if ((AddDelegateOperationCompleted == null))
			{
				AddDelegateOperationCompleted = new SendOrPostCallback(OnAddDelegateOperationCompleted);
			}
			InvokeAsync("AddDelegate", new object[]
			                           	{
			                           		AddDelegate1
			                           	}, AddDelegateOperationCompleted, userState);
		}

		private void OnAddDelegateOperationCompleted(object arg)
		{
			if ((AddDelegateCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				AddDelegateCompleted(this,
									 new AddDelegateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled,
																	   invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("MailboxCulture")]
		[SoapHeader("SerializedSecurityContext")]
		[SoapHeader("ExchangeImpersonation")]
		[SoapHeader("RequestServerVersionValue")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/RemoveDelegate",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return:
			XmlElement("RemoveDelegateResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
		public RemoveDelegateResponseMessageType RemoveDelegate(
			[XmlElement("RemoveDelegate", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] RemoveDelegateType RemoveDelegate1)
		{
			object[] results = Invoke("RemoveDelegate", new object[]
			                                            	{
			                                            		RemoveDelegate1
			                                            	});
			return ((RemoveDelegateResponseMessageType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginRemoveDelegate(RemoveDelegateType RemoveDelegate1, AsyncCallback callback, object asyncState)
		{
			return BeginInvoke("RemoveDelegate", new object[]
			                                     	{
			                                     		RemoveDelegate1
			                                     	}, callback, asyncState);
		}

		/// <remarks/>
		public RemoveDelegateResponseMessageType EndRemoveDelegate(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((RemoveDelegateResponseMessageType) (results[0]));
		}

		/// <remarks/>
		public void RemoveDelegateAsync(RemoveDelegateType RemoveDelegate1)
		{
			RemoveDelegateAsync(RemoveDelegate1, null);
		}

		/// <remarks/>
		public void RemoveDelegateAsync(RemoveDelegateType RemoveDelegate1, object userState)
		{
			if ((RemoveDelegateOperationCompleted == null))
			{
				RemoveDelegateOperationCompleted = new SendOrPostCallback(OnRemoveDelegateOperationCompleted);
			}
			InvokeAsync("RemoveDelegate", new object[]
			                              	{
			                              		RemoveDelegate1
			                              	}, RemoveDelegateOperationCompleted, userState);
		}

		private void OnRemoveDelegateOperationCompleted(object arg)
		{
			if ((RemoveDelegateCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				RemoveDelegateCompleted(this,
										new RemoveDelegateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error,
																			 invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("MailboxCulture")]
		[SoapHeader("SerializedSecurityContext")]
		[SoapHeader("ExchangeImpersonation")]
		[SoapHeader("RequestServerVersionValue")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/UpdateDelegate",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return:
			XmlElement("UpdateDelegateResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
		public UpdateDelegateResponseMessageType UpdateDelegate(
			[XmlElement("UpdateDelegate", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] UpdateDelegateType UpdateDelegate1)
		{
			object[] results = Invoke("UpdateDelegate", new object[]
			                                            	{
			                                            		UpdateDelegate1
			                                            	});
			return ((UpdateDelegateResponseMessageType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginUpdateDelegate(UpdateDelegateType UpdateDelegate1, AsyncCallback callback, object asyncState)
		{
			return BeginInvoke("UpdateDelegate", new object[]
			                                     	{
			                                     		UpdateDelegate1
			                                     	}, callback, asyncState);
		}

		/// <remarks/>
		public UpdateDelegateResponseMessageType EndUpdateDelegate(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((UpdateDelegateResponseMessageType) (results[0]));
		}

		/// <remarks/>
		public void UpdateDelegateAsync(UpdateDelegateType UpdateDelegate1)
		{
			UpdateDelegateAsync(UpdateDelegate1, null);
		}

		/// <remarks/>
		public void UpdateDelegateAsync(UpdateDelegateType UpdateDelegate1, object userState)
		{
			if ((UpdateDelegateOperationCompleted == null))
			{
				UpdateDelegateOperationCompleted = new SendOrPostCallback(OnUpdateDelegateOperationCompleted);
			}
			InvokeAsync("UpdateDelegate", new object[]
			                              	{
			                              		UpdateDelegate1
			                              	}, UpdateDelegateOperationCompleted, userState);
		}

		private void OnUpdateDelegateOperationCompleted(object arg)
		{
			if ((UpdateDelegateCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				UpdateDelegateCompleted(this,
										new UpdateDelegateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error,
																			 invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapHeader("SerializedSecurityContext")]
		[SoapHeader("ProxyRequestTypeHeader")]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/GetUserAvailability",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return:
			XmlElement("GetUserAvailabilityResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
		public GetUserAvailabilityResponseType GetUserAvailability(
			[XmlElement(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] GetUserAvailabilityRequestType
				GetUserAvailabilityRequest)
		{
			object[] results = Invoke("GetUserAvailability", new object[]
			                                                 	{
			                                                 		GetUserAvailabilityRequest
			                                                 	});
			return ((GetUserAvailabilityResponseType) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginGetUserAvailability(GetUserAvailabilityRequestType GetUserAvailabilityRequest,
													 AsyncCallback callback, object asyncState)
		{
			return BeginInvoke("GetUserAvailability", new object[]
			                                          	{
			                                          		GetUserAvailabilityRequest
			                                          	}, callback, asyncState);
		}

		/// <remarks/>
		public GetUserAvailabilityResponseType EndGetUserAvailability(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((GetUserAvailabilityResponseType) (results[0]));
		}

		/// <remarks/>
		public void GetUserAvailabilityAsync(GetUserAvailabilityRequestType GetUserAvailabilityRequest)
		{
			GetUserAvailabilityAsync(GetUserAvailabilityRequest, null);
		}

		/// <remarks/>
		public void GetUserAvailabilityAsync(GetUserAvailabilityRequestType GetUserAvailabilityRequest, object userState)
		{
			if ((GetUserAvailabilityOperationCompleted == null))
			{
				GetUserAvailabilityOperationCompleted = new SendOrPostCallback(OnGetUserAvailabilityOperationCompleted);
			}
			InvokeAsync("GetUserAvailability", new object[]
			                                   	{
			                                   		GetUserAvailabilityRequest
			                                   	}, GetUserAvailabilityOperationCompleted, userState);
		}

		private void OnGetUserAvailabilityOperationCompleted(object arg)
		{
			if ((GetUserAvailabilityCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				GetUserAvailabilityCompleted(this,
											 new GetUserAvailabilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error,
																					   invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/GetUserOofSettings",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return:
			XmlElement("GetUserOofSettingsResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
		public GetUserOofSettingsResponse GetUserOofSettings(
			[XmlElement(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] GetUserOofSettingsRequest
				GetUserOofSettingsRequest)
		{
			object[] results = Invoke("GetUserOofSettings", new object[]
			                                                	{
			                                                		GetUserOofSettingsRequest
			                                                	});
			return ((GetUserOofSettingsResponse) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginGetUserOofSettings(GetUserOofSettingsRequest GetUserOofSettingsRequest,
													AsyncCallback callback, object asyncState)
		{
			return BeginInvoke("GetUserOofSettings", new object[]
			                                         	{
			                                         		GetUserOofSettingsRequest
			                                         	}, callback, asyncState);
		}

		/// <remarks/>
		public GetUserOofSettingsResponse EndGetUserOofSettings(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((GetUserOofSettingsResponse) (results[0]));
		}

		/// <remarks/>
		public void GetUserOofSettingsAsync(GetUserOofSettingsRequest GetUserOofSettingsRequest)
		{
			GetUserOofSettingsAsync(GetUserOofSettingsRequest, null);
		}

		/// <remarks/>
		public void GetUserOofSettingsAsync(GetUserOofSettingsRequest GetUserOofSettingsRequest, object userState)
		{
			if ((GetUserOofSettingsOperationCompleted == null))
			{
				GetUserOofSettingsOperationCompleted = new SendOrPostCallback(OnGetUserOofSettingsOperationCompleted);
			}
			InvokeAsync("GetUserOofSettings", new object[]
			                                  	{
			                                  		GetUserOofSettingsRequest
			                                  	}, GetUserOofSettingsOperationCompleted, userState);
		}

		private void OnGetUserOofSettingsOperationCompleted(object arg)
		{
			if ((GetUserOofSettingsCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				GetUserOofSettingsCompleted(this,
											new GetUserOofSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error,
																					 invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[SoapHeader("ServerVersionInfoValue", Direction = SoapHeaderDirection.Out)]
		[SoapDocumentMethod("http://schemas.microsoft.com/exchange/services/2006/messages/SetUserOofSettings",
			Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Bare)]
		[return:
			XmlElement("SetUserOofSettingsResponse", Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
		public SetUserOofSettingsResponse SetUserOofSettings(
			[XmlElement(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")] SetUserOofSettingsRequest
				SetUserOofSettingsRequest)
		{
			object[] results = Invoke("SetUserOofSettings", new object[]
			                                                	{
			                                                		SetUserOofSettingsRequest
			                                                	});
			return ((SetUserOofSettingsResponse) (results[0]));
		}

		/// <remarks/>
		public IAsyncResult BeginSetUserOofSettings(SetUserOofSettingsRequest SetUserOofSettingsRequest,
													AsyncCallback callback, object asyncState)
		{
			return BeginInvoke("SetUserOofSettings", new object[]
			                                         	{
			                                         		SetUserOofSettingsRequest
			                                         	}, callback, asyncState);
		}

		/// <remarks/>
		public SetUserOofSettingsResponse EndSetUserOofSettings(IAsyncResult asyncResult)
		{
			object[] results = EndInvoke(asyncResult);
			return ((SetUserOofSettingsResponse) (results[0]));
		}

		/// <remarks/>
		public void SetUserOofSettingsAsync(SetUserOofSettingsRequest SetUserOofSettingsRequest)
		{
			SetUserOofSettingsAsync(SetUserOofSettingsRequest, null);
		}

		/// <remarks/>
		public void SetUserOofSettingsAsync(SetUserOofSettingsRequest SetUserOofSettingsRequest, object userState)
		{
			if ((SetUserOofSettingsOperationCompleted == null))
			{
				SetUserOofSettingsOperationCompleted = new SendOrPostCallback(OnSetUserOofSettingsOperationCompleted);
			}
			InvokeAsync("SetUserOofSettings", new object[]
			                                  	{
			                                  		SetUserOofSettingsRequest
			                                  	}, SetUserOofSettingsOperationCompleted, userState);
		}

		private void OnSetUserOofSettingsOperationCompleted(object arg)
		{
			if ((SetUserOofSettingsCompleted != null))
			{
				InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs) (arg));
				SetUserOofSettingsCompleted(this,
											new SetUserOofSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error,
																					 invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		public new void CancelAsync(object userState)
		{
			base.CancelAsync(userState);
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(AnonymousType = true, Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	[XmlRoot(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
	public partial class ServerVersionInfo : SoapHeader
	{
		private int majorVersionField;

		private bool majorVersionFieldSpecified;

		private int minorVersionField;

		private bool minorVersionFieldSpecified;

		private int majorBuildNumberField;

		private bool majorBuildNumberFieldSpecified;

		private int minorBuildNumberField;

		private bool minorBuildNumberFieldSpecified;

		private string versionField;

		/// <remarks/>
		[XmlAttribute()]
		public int MajorVersion
		{
			get { return majorVersionField; }
			set { majorVersionField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool MajorVersionSpecified
		{
			get { return majorVersionFieldSpecified; }
			set { majorVersionFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public int MinorVersion
		{
			get { return minorVersionField; }
			set { minorVersionField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool MinorVersionSpecified
		{
			get { return minorVersionFieldSpecified; }
			set { minorVersionFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public int MajorBuildNumber
		{
			get { return majorBuildNumberField; }
			set { majorBuildNumberField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool MajorBuildNumberSpecified
		{
			get { return majorBuildNumberFieldSpecified; }
			set { majorBuildNumberFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public int MinorBuildNumber
		{
			get { return minorBuildNumberField; }
			set { minorBuildNumberField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool MinorBuildNumberSpecified
		{
			get { return minorBuildNumberFieldSpecified; }
			set { minorBuildNumberFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public string Version
		{
			get { return versionField; }
			set { versionField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class SetUserOofSettingsResponse
	{
		private ResponseMessageType responseMessageField;

		/// <remarks/>
		public ResponseMessageType ResponseMessage
		{
			get { return responseMessageField; }
			set { responseMessageField = value; }
		}
	}

	/// <remarks/>
	[XmlInclude(typeof(BaseDelegateResponseMessageType))]
	[XmlInclude(typeof(UpdateDelegateResponseMessageType))]
	[XmlInclude(typeof(RemoveDelegateResponseMessageType))]
	[XmlInclude(typeof(AddDelegateResponseMessageType))]
	[XmlInclude(typeof(GetDelegateResponseMessageType))]
	[XmlInclude(typeof(DelegateUserResponseMessageType))]
	[XmlInclude(typeof(ConvertIdResponseMessageType))]
	[XmlInclude(typeof(SyncFolderItemsResponseMessageType))]
	[XmlInclude(typeof(SyncFolderHierarchyResponseMessageType))]
	[XmlInclude(typeof(SendNotificationResponseMessageType))]
	[XmlInclude(typeof(GetEventsResponseMessageType))]
	[XmlInclude(typeof(SubscribeResponseMessageType))]
	[XmlInclude(typeof(ExpandDLResponseMessageType))]
	[XmlInclude(typeof(ResolveNamesResponseMessageType))]
	[XmlInclude(typeof(FindItemResponseMessageType))]
	[XmlInclude(typeof(DeleteAttachmentResponseMessageType))]
	[XmlInclude(typeof(AttachmentInfoResponseMessageType))]
	[XmlInclude(typeof(ItemInfoResponseMessageType))]
	[XmlInclude(typeof(UpdateItemResponseMessageType))]
	[XmlInclude(typeof(FindFolderResponseMessageType))]
	[XmlInclude(typeof(FolderInfoResponseMessageType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class ResponseMessageType
	{
		private string messageTextField;

		private ResponseCodeType responseCodeField;

		private bool responseCodeFieldSpecified;

		private int descriptiveLinkKeyField;

		private bool descriptiveLinkKeyFieldSpecified;

		private ResponseMessageTypeMessageXml messageXmlField;

		private ResponseClassType responseClassField;

		/// <remarks/>
		public string MessageText
		{
			get { return messageTextField; }
			set { messageTextField = value; }
		}

		/// <remarks/>
		public ResponseCodeType ResponseCode
		{
			get { return responseCodeField; }
			set { responseCodeField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool ResponseCodeSpecified
		{
			get { return responseCodeFieldSpecified; }
			set { responseCodeFieldSpecified = value; }
		}

		/// <remarks/>
		public int DescriptiveLinkKey
		{
			get { return descriptiveLinkKeyField; }
			set { descriptiveLinkKeyField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool DescriptiveLinkKeySpecified
		{
			get { return descriptiveLinkKeyFieldSpecified; }
			set { descriptiveLinkKeyFieldSpecified = value; }
		}

		/// <remarks/>
		public ResponseMessageTypeMessageXml MessageXml
		{
			get { return messageXmlField; }
			set { messageXmlField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public ResponseClassType ResponseClass
		{
			get { return responseClassField; }
			set { responseClassField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public enum ResponseCodeType
	{
		/// <remarks/>
		NoError,

		/// <remarks/>
		ErrorAccessDenied,

		/// <remarks/>
		ErrorAccountDisabled,

		/// <remarks/>
		ErrorAddDelegatesFailed,

		/// <remarks/>
		ErrorAddressSpaceNotFound,

		/// <remarks/>
		ErrorADOperation,

		/// <remarks/>
		ErrorADSessionFilter,

		/// <remarks/>
		ErrorADUnavailable,

		/// <remarks/>
		ErrorAutoDiscoverFailed,

		/// <remarks/>
		ErrorAffectedTaskOccurrencesRequired,

		/// <remarks/>
		ErrorAttachmentSizeLimitExceeded,

		/// <remarks/>
		ErrorAvailabilityConfigNotFound,

		/// <remarks/>
		ErrorBatchProcessingStopped,

		/// <remarks/>
		ErrorCalendarCannotMoveOrCopyOccurrence,

		/// <remarks/>
		ErrorCalendarCannotUpdateDeletedItem,

		/// <remarks/>
		ErrorCalendarCannotUseIdForOccurrenceId,

		/// <remarks/>
		ErrorCalendarCannotUseIdForRecurringMasterId,

		/// <remarks/>
		ErrorCalendarDurationIsTooLong,

		/// <remarks/>
		ErrorCalendarEndDateIsEarlierThanStartDate,

		/// <remarks/>
		ErrorCalendarFolderIsInvalidForCalendarView,

		/// <remarks/>
		ErrorCalendarInvalidAttributeValue,

		/// <remarks/>
		ErrorCalendarInvalidDayForTimeChangePattern,

		/// <remarks/>
		ErrorCalendarInvalidDayForWeeklyRecurrence,

		/// <remarks/>
		ErrorCalendarInvalidPropertyState,

		/// <remarks/>
		ErrorCalendarInvalidPropertyValue,

		/// <remarks/>
		ErrorCalendarInvalidRecurrence,

		/// <remarks/>
		ErrorCalendarInvalidTimeZone,

		/// <remarks/>
		ErrorCalendarIsDelegatedForAccept,

		/// <remarks/>
		ErrorCalendarIsDelegatedForDecline,

		/// <remarks/>
		ErrorCalendarIsDelegatedForRemove,

		/// <remarks/>
		ErrorCalendarIsDelegatedForTentative,

		/// <remarks/>
		ErrorCalendarIsNotOrganizer,

		/// <remarks/>
		ErrorCalendarIsOrganizerForAccept,

		/// <remarks/>
		ErrorCalendarIsOrganizerForDecline,

		/// <remarks/>
		ErrorCalendarIsOrganizerForRemove,

		/// <remarks/>
		ErrorCalendarIsOrganizerForTentative,

		/// <remarks/>
		ErrorCalendarOccurrenceIndexIsOutOfRecurrenceRange,

		/// <remarks/>
		ErrorCalendarOccurrenceIsDeletedFromRecurrence,

		/// <remarks/>
		ErrorCalendarOutOfRange,

		/// <remarks/>
		ErrorCalendarMeetingRequestIsOutOfDate,

		/// <remarks/>
		ErrorCalendarViewRangeTooBig,

		/// <remarks/>
		ErrorCannotCreateCalendarItemInNonCalendarFolder,

		/// <remarks/>
		ErrorCannotCreateContactInNonContactFolder,

		/// <remarks/>
		ErrorCannotCreatePostItemInNonMailFolder,

		/// <remarks/>
		ErrorCannotCreateTaskInNonTaskFolder,

		/// <remarks/>
		ErrorCannotDeleteObject,

		/// <remarks/>
		ErrorCannotOpenFileAttachment,

		/// <remarks/>
		ErrorCannotDeleteTaskOccurrence,

		/// <remarks/>
		ErrorCannotSetCalendarPermissionOnNonCalendarFolder,

		/// <remarks/>
		ErrorCannotSetNonCalendarPermissionOnCalendarFolder,

		/// <remarks/>
		ErrorCannotSetPermissionUnknownEntries,

		/// <remarks/>
		ErrorCannotUseFolderIdForItemId,

		/// <remarks/>
		ErrorCannotUseItemIdForFolderId,

		/// <remarks/>
		ErrorChangeKeyRequired,

		/// <remarks/>
		ErrorChangeKeyRequiredForWriteOperations,

		/// <remarks/>
		ErrorConnectionFailed,

		/// <remarks/>
		ErrorContentConversionFailed,

		/// <remarks/>
		ErrorCorruptData,

		/// <remarks/>
		ErrorCreateItemAccessDenied,

		/// <remarks/>
		ErrorCreateManagedFolderPartialCompletion,

		/// <remarks/>
		ErrorCreateSubfolderAccessDenied,

		/// <remarks/>
		ErrorCrossMailboxMoveCopy,

		/// <remarks/>
		ErrorDataSizeLimitExceeded,

		/// <remarks/>
		ErrorDataSourceOperation,

		/// <remarks/>
		ErrorDelegateAlreadyExists,

		/// <remarks/>
		ErrorDelegateCannotAddOwner,

		/// <remarks/>
		ErrorDelegateMissingConfiguration,

		/// <remarks/>
		ErrorDelegateNoUser,

		/// <remarks/>
		ErrorDelegateValidationFailed,

		/// <remarks/>
		ErrorDeleteDistinguishedFolder,

		/// <remarks/>
		ErrorDeleteItemsFailed,

		/// <remarks/>
		ErrorDistinguishedUserNotSupported,

		/// <remarks/>
		ErrorDuplicateInputFolderNames,

		/// <remarks/>
		ErrorDuplicateUserIdsSpecified,

		/// <remarks/>
		ErrorEmailAddressMismatch,

		/// <remarks/>
		ErrorEventNotFound,

		/// <remarks/>
		ErrorExpiredSubscription,

		/// <remarks/>
		ErrorFolderCorrupt,

		/// <remarks/>
		ErrorFolderNotFound,

		/// <remarks/>
		ErrorFolderPropertRequestFailed,

		/// <remarks/>
		ErrorFolderSave,

		/// <remarks/>
		ErrorFolderSaveFailed,

		/// <remarks/>
		ErrorFolderSavePropertyError,

		/// <remarks/>
		ErrorFolderExists,

		/// <remarks/>
		ErrorFreeBusyGenerationFailed,

		/// <remarks/>
		ErrorGetServerSecurityDescriptorFailed,

		/// <remarks/>
		ErrorImpersonateUserDenied,

		/// <remarks/>
		ErrorImpersonationDenied,

		/// <remarks/>
		ErrorImpersonationFailed,

		/// <remarks/>
		ErrorIncorrectSchemaVersion,

		/// <remarks/>
		ErrorIncorrectUpdatePropertyCount,

		/// <remarks/>
		ErrorIndividualMailboxLimitReached,

		/// <remarks/>
		ErrorInsufficientResources,

		/// <remarks/>
		ErrorInternalServerError,

		/// <remarks/>
		ErrorInternalServerTransientError,

		/// <remarks/>
		ErrorInvalidAccessLevel,

		/// <remarks/>
		ErrorInvalidAttachmentId,

		/// <remarks/>
		ErrorInvalidAttachmentSubfilter,

		/// <remarks/>
		ErrorInvalidAttachmentSubfilterTextFilter,

		/// <remarks/>
		ErrorInvalidAuthorizationContext,

		/// <remarks/>
		ErrorInvalidChangeKey,

		/// <remarks/>
		ErrorInvalidClientSecurityContext,

		/// <remarks/>
		ErrorInvalidCompleteDate,

		/// <remarks/>
		ErrorInvalidCrossForestCredentials,

		/// <remarks/>
		ErrorInvalidDelegatePermission,

		/// <remarks/>
		ErrorInvalidDelegateUserId,

		/// <remarks/>
		ErrorInvalidExcludesRestriction,

		/// <remarks/>
		ErrorInvalidExpressionTypeForSubFilter,

		/// <remarks/>
		ErrorInvalidExtendedProperty,

		/// <remarks/>
		ErrorInvalidExtendedPropertyValue,

		/// <remarks/>
		ErrorInvalidFolderId,

		/// <remarks/>
		ErrorInvalidFolderTypeForOperation,

		/// <remarks/>
		ErrorInvalidFractionalPagingParameters,

		/// <remarks/>
		ErrorInvalidFreeBusyViewType,

		/// <remarks/>
		ErrorInvalidId,

		/// <remarks/>
		ErrorInvalidIdEmpty,

		/// <remarks/>
		ErrorInvalidIdMalformed,

		/// <remarks/>
		ErrorInvalidIdMalformedEwsLegacyIdFormat,

		/// <remarks/>
		ErrorInvalidIdMonikerTooLong,

		/// <remarks/>
		ErrorInvalidIdNotAnItemAttachmentId,

		/// <remarks/>
		ErrorInvalidIdReturnedByResolveNames,

		/// <remarks/>
		ErrorInvalidIdStoreObjectIdTooLong,

		/// <remarks/>
		ErrorInvalidIdTooManyAttachmentLevels,

		/// <remarks/>
		ErrorInvalidIdXml,

		/// <remarks/>
		ErrorInvalidIndexedPagingParameters,

		/// <remarks/>
		ErrorInvalidInternetHeaderChildNodes,

		/// <remarks/>
		ErrorInvalidItemForOperationCreateItemAttachment,

		/// <remarks/>
		ErrorInvalidItemForOperationCreateItem,

		/// <remarks/>
		ErrorInvalidItemForOperationAcceptItem,

		/// <remarks/>
		ErrorInvalidItemForOperationDeclineItem,

		/// <remarks/>
		ErrorInvalidItemForOperationCancelItem,

		/// <remarks/>
		ErrorInvalidItemForOperationExpandDL,

		/// <remarks/>
		ErrorInvalidItemForOperationRemoveItem,

		/// <remarks/>
		ErrorInvalidItemForOperationSendItem,

		/// <remarks/>
		ErrorInvalidItemForOperationTentative,

		/// <remarks/>
		ErrorInvalidManagedFolderProperty,

		/// <remarks/>
		ErrorInvalidManagedFolderQuota,

		/// <remarks/>
		ErrorInvalidManagedFolderSize,

		/// <remarks/>
		ErrorInvalidMergedFreeBusyInterval,

		/// <remarks/>
		ErrorInvalidNameForNameResolution,

		/// <remarks/>
		ErrorInvalidOperation,

		/// <remarks/>
		ErrorInvalidNetworkServiceContext,

		/// <remarks/>
		ErrorInvalidOofParameter,

		/// <remarks/>
		ErrorInvalidPagingMaxRows,

		/// <remarks/>
		ErrorInvalidParentFolder,

		/// <remarks/>
		ErrorInvalidPercentCompleteValue,

		/// <remarks/>
		ErrorInvalidPermissionSettings,

		/// <remarks/>
		ErrorInvalidUserInfo,

		/// <remarks/>
		ErrorInvalidPropertyAppend,

		/// <remarks/>
		ErrorInvalidPropertyDelete,

		/// <remarks/>
		ErrorInvalidPropertyForExists,

		/// <remarks/>
		ErrorInvalidPropertyForOperation,

		/// <remarks/>
		ErrorInvalidPropertyRequest,

		/// <remarks/>
		ErrorInvalidPropertySet,

		/// <remarks/>
		ErrorInvalidPropertyUpdateSentMessage,

		/// <remarks/>
		ErrorInvalidProxySecurityContext,

		/// <remarks/>
		ErrorInvalidPullSubscriptionId,

		/// <remarks/>
		ErrorInvalidPushSubscriptionUrl,

		/// <remarks/>
		ErrorInvalidRecipients,

		/// <remarks/>
		ErrorInvalidRecipientSubfilter,

		/// <remarks/>
		ErrorInvalidRecipientSubfilterComparison,

		/// <remarks/>
		ErrorInvalidRecipientSubfilterOrder,

		/// <remarks/>
		ErrorInvalidRecipientSubfilterTextFilter,

		/// <remarks/>
		ErrorInvalidReferenceItem,

		/// <remarks/>
		ErrorInvalidRequest,

		/// <remarks/>
		ErrorInvalidRestriction,

		/// <remarks/>
		ErrorInvalidRoutingType,

		/// <remarks/>
		ErrorInvalidScheduledOofDuration,

		/// <remarks/>
		ErrorInvalidSecurityDescriptor,

		/// <remarks/>
		ErrorInvalidSendItemSaveSettings,

		/// <remarks/>
		ErrorInvalidSerializedAccessToken,

		/// <remarks/>
		ErrorInvalidServerVersion,

		/// <remarks/>
		ErrorInvalidSid,

		/// <remarks/>
		ErrorInvalidSmtpAddress,

		/// <remarks/>
		ErrorInvalidSubfilterType,

		/// <remarks/>
		ErrorInvalidSubfilterTypeNotAttendeeType,

		/// <remarks/>
		ErrorInvalidSubfilterTypeNotRecipientType,

		/// <remarks/>
		ErrorInvalidSubscription,

		/// <remarks/>
		ErrorInvalidSubscriptionRequest,

		/// <remarks/>
		ErrorInvalidSyncStateData,

		/// <remarks/>
		ErrorInvalidTimeInterval,

		/// <remarks/>
		ErrorInvalidUserOofSettings,

		/// <remarks/>
		ErrorInvalidUserPrincipalName,

		/// <remarks/>
		ErrorInvalidUserSid,

		/// <remarks/>
		ErrorInvalidUserSidMissingUPN,

		/// <remarks/>
		ErrorInvalidValueForProperty,

		/// <remarks/>
		ErrorInvalidWatermark,

		/// <remarks/>
		ErrorIrresolvableConflict,

		/// <remarks/>
		ErrorItemCorrupt,

		/// <remarks/>
		ErrorItemNotFound,

		/// <remarks/>
		ErrorItemPropertyRequestFailed,

		/// <remarks/>
		ErrorItemSave,

		/// <remarks/>
		ErrorItemSavePropertyError,

		/// <remarks/>
		ErrorLegacyMailboxFreeBusyViewTypeNotMerged,

		/// <remarks/>
		ErrorLocalServerObjectNotFound,

		/// <remarks/>
		ErrorLogonAsNetworkServiceFailed,

		/// <remarks/>
		ErrorMailboxConfiguration,

		/// <remarks/>
		ErrorMailboxDataArrayEmpty,

		/// <remarks/>
		ErrorMailboxDataArrayTooBig,

		/// <remarks/>
		ErrorMailboxLogonFailed,

		/// <remarks/>
		ErrorMailboxMoveInProgress,

		/// <remarks/>
		ErrorMailboxStoreUnavailable,

		/// <remarks/>
		ErrorMailRecipientNotFound,

		/// <remarks/>
		ErrorManagedFolderAlreadyExists,

		/// <remarks/>
		ErrorManagedFolderNotFound,

		/// <remarks/>
		ErrorManagedFoldersRootFailure,

		/// <remarks/>
		ErrorMeetingSuggestionGenerationFailed,

		/// <remarks/>
		ErrorMessageDispositionRequired,

		/// <remarks/>
		ErrorMessageSizeExceeded,

		/// <remarks/>
		ErrorMimeContentConversionFailed,

		/// <remarks/>
		ErrorMimeContentInvalid,

		/// <remarks/>
		ErrorMimeContentInvalidBase64String,

		/// <remarks/>
		ErrorMissingArgument,

		/// <remarks/>
		ErrorMissingEmailAddress,

		/// <remarks/>
		ErrorMissingEmailAddressForManagedFolder,

		/// <remarks/>
		ErrorMissingInformationEmailAddress,

		/// <remarks/>
		ErrorMissingInformationReferenceItemId,

		/// <remarks/>
		ErrorMissingItemForCreateItemAttachment,

		/// <remarks/>
		ErrorMissingManagedFolderId,

		/// <remarks/>
		ErrorMissingRecipients,

		/// <remarks/>
		ErrorMissingUserIdInformation,

		/// <remarks/>
		ErrorMoreThanOneAccessModeSpecified,

		/// <remarks/>
		ErrorMoveCopyFailed,

		/// <remarks/>
		ErrorMoveDistinguishedFolder,

		/// <remarks/>
		ErrorNameResolutionMultipleResults,

		/// <remarks/>
		ErrorNameResolutionNoMailbox,

		/// <remarks/>
		ErrorNameResolutionNoResults,

		/// <remarks/>
		ErrorNoCalendar,

		/// <remarks/>
		ErrorNoDestinationCASDueToKerberosRequirements,

		/// <remarks/>
		ErrorNoDestinationCASDueToSSLRequirements,

		/// <remarks/>
		ErrorNoDestinationCASDueToVersionMismatch,

		/// <remarks/>
		ErrorNoFolderClassOverride,

		/// <remarks/>
		ErrorNoFreeBusyAccess,

		/// <remarks/>
		ErrorNonExistentMailbox,

		/// <remarks/>
		ErrorNonPrimarySmtpAddress,

		/// <remarks/>
		ErrorNoPropertyTagForCustomProperties,

		/// <remarks/>
		ErrorNoPublicFolderReplicaAvailable,

		/// <remarks/>
		ErrorNoRespondingCASInDestinationSite,

		/// <remarks/>
		ErrorNotDelegate,

		/// <remarks/>
		ErrorNotEnoughMemory,

		/// <remarks/>
		ErrorObjectTypeChanged,

		/// <remarks/>
		ErrorOccurrenceCrossingBoundary,

		/// <remarks/>
		ErrorOccurrenceTimeSpanTooBig,

		/// <remarks/>
		ErrorOperationNotAllowedWithPublicFolderRoot,

		/// <remarks/>
		ErrorParentFolderIdRequired,

		/// <remarks/>
		ErrorParentFolderNotFound,

		/// <remarks/>
		ErrorPasswordChangeRequired,

		/// <remarks/>
		ErrorPasswordExpired,

		/// <remarks/>
		ErrorPropertyUpdate,

		/// <remarks/>
		ErrorPropertyValidationFailure,

		/// <remarks/>
		ErrorProxiedSubscriptionCallFailure,

		/// <remarks/>
		ErrorProxyCallFailed,

		/// <remarks/>
		ErrorProxyGroupSidLimitExceeded,

		/// <remarks/>
		ErrorProxyRequestNotAllowed,

		/// <remarks/>
		ErrorProxyRequestProcessingFailed,

		/// <remarks/>
		ErrorProxyTokenExpired,

		/// <remarks/>
		ErrorPublicFolderRequestProcessingFailed,

		/// <remarks/>
		ErrorPublicFolderServerNotFound,

		/// <remarks/>
		ErrorQueryFilterTooLong,

		/// <remarks/>
		ErrorQuotaExceeded,

		/// <remarks/>
		ErrorReadEventsFailed,

		/// <remarks/>
		ErrorReadReceiptNotPending,

		/// <remarks/>
		ErrorRecurrenceEndDateTooBig,

		/// <remarks/>
		ErrorRecurrenceHasNoOccurrence,

		/// <remarks/>
		ErrorRemoveDelegatesFailed,

		/// <remarks/>
		ErrorRequestAborted,

		/// <remarks/>
		ErrorRequestStreamTooBig,

		/// <remarks/>
		ErrorRequiredPropertyMissing,

		/// <remarks/>
		ErrorResolveNamesInvalidFolderType,

		/// <remarks/>
		ErrorResolveNamesOnlyOneContactsFolderAllowed,

		/// <remarks/>
		ErrorResponseSchemaValidation,

		/// <remarks/>
		ErrorRestrictionTooLong,

		/// <remarks/>
		ErrorRestrictionTooComplex,

		/// <remarks/>
		ErrorResultSetTooBig,

		/// <remarks/>
		ErrorInvalidExchangeImpersonationHeaderData,

		/// <remarks/>
		ErrorSavedItemFolderNotFound,

		/// <remarks/>
		ErrorSchemaValidation,

		/// <remarks/>
		ErrorSearchFolderNotInitialized,

		/// <remarks/>
		ErrorSendAsDenied,

		/// <remarks/>
		ErrorSendMeetingCancellationsRequired,

		/// <remarks/>
		ErrorSendMeetingInvitationsOrCancellationsRequired,

		/// <remarks/>
		ErrorSendMeetingInvitationsRequired,

		/// <remarks/>
		ErrorSentMeetingRequestUpdate,

		/// <remarks/>
		ErrorSentTaskRequestUpdate,

		/// <remarks/>
		ErrorServerBusy,

		/// <remarks/>
		ErrorServiceDiscoveryFailed,

		/// <remarks/>
		ErrorStaleObject,

		/// <remarks/>
		ErrorSubscriptionAccessDenied,

		/// <remarks/>
		ErrorSubscriptionDelegateAccessNotSupported,

		/// <remarks/>
		ErrorSubscriptionNotFound,

		/// <remarks/>
		ErrorSyncFolderNotFound,

		/// <remarks/>
		ErrorTimeIntervalTooBig,

		/// <remarks/>
		ErrorTimeoutExpired,

		/// <remarks/>
		ErrorToFolderNotFound,

		/// <remarks/>
		ErrorTokenSerializationDenied,

		/// <remarks/>
		ErrorUpdatePropertyMismatch,

		/// <remarks/>
		ErrorUnableToGetUserOofSettings,

		/// <remarks/>
		ErrorUnsupportedSubFilter,

		/// <remarks/>
		ErrorUnsupportedCulture,

		/// <remarks/>
		ErrorUnsupportedMapiPropertyType,

		/// <remarks/>
		ErrorUnsupportedMimeConversion,

		/// <remarks/>
		ErrorUnsupportedPathForQuery,

		/// <remarks/>
		ErrorUnsupportedPathForSortGroup,

		/// <remarks/>
		ErrorUnsupportedPropertyDefinition,

		/// <remarks/>
		ErrorUnsupportedQueryFilter,

		/// <remarks/>
		ErrorUnsupportedRecurrence,

		/// <remarks/>
		ErrorUnsupportedTypeForConversion,

		/// <remarks/>
		ErrorUpdateDelegatesFailed,

		/// <remarks/>
		ErrorVoiceMailNotImplemented,

		/// <remarks/>
		ErrorVirusDetected,

		/// <remarks/>
		ErrorVirusMessageDeleted,

		/// <remarks/>
		ErrorWebRequestInInvalidState,

		/// <remarks/>
		ErrorWin32InteropError,

		/// <remarks/>
		ErrorWorkingHoursSaveFailed,

		/// <remarks/>
		ErrorWorkingHoursXmlMalformed,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(AnonymousType = true, Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class ResponseMessageTypeMessageXml
	{
		private XmlElement[] anyField;

		/// <remarks/>
		[XmlAnyElement()]
		public XmlElement[] Any
		{
			get { return anyField; }
			set { anyField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum ResponseClassType
	{
		/// <remarks/>
		Success,

		/// <remarks/>
		Warning,

		/// <remarks/>
		Error,
	}

	/// <remarks/>
	[XmlInclude(typeof(UpdateDelegateResponseMessageType))]
	[XmlInclude(typeof(RemoveDelegateResponseMessageType))]
	[XmlInclude(typeof(AddDelegateResponseMessageType))]
	[XmlInclude(typeof(GetDelegateResponseMessageType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public abstract partial class BaseDelegateResponseMessageType : ResponseMessageType
	{
		private DelegateUserResponseMessageType[] responseMessagesField;

		/// <remarks/>
		[XmlArrayItem(IsNullable = false)]
		public DelegateUserResponseMessageType[] ResponseMessages
		{
			get { return responseMessagesField; }
			set { responseMessagesField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class DelegateUserResponseMessageType : ResponseMessageType
	{
		private DelegateUserType delegateUserField;

		/// <remarks/>
		public DelegateUserType DelegateUser
		{
			get { return delegateUserField; }
			set { delegateUserField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class DelegateUserType
	{
		private UserIdType userIdField;

		private DelegatePermissionsType delegatePermissionsField;

		private bool receiveCopiesOfMeetingMessagesField;

		private bool receiveCopiesOfMeetingMessagesFieldSpecified;

		private bool viewPrivateItemsField;

		private bool viewPrivateItemsFieldSpecified;

		/// <remarks/>
		public UserIdType UserId
		{
			get { return userIdField; }
			set { userIdField = value; }
		}

		/// <remarks/>
		public DelegatePermissionsType DelegatePermissions
		{
			get { return delegatePermissionsField; }
			set { delegatePermissionsField = value; }
		}

		/// <remarks/>
		public bool ReceiveCopiesOfMeetingMessages
		{
			get { return receiveCopiesOfMeetingMessagesField; }
			set { receiveCopiesOfMeetingMessagesField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool ReceiveCopiesOfMeetingMessagesSpecified
		{
			get { return receiveCopiesOfMeetingMessagesFieldSpecified; }
			set { receiveCopiesOfMeetingMessagesFieldSpecified = value; }
		}

		/// <remarks/>
		public bool ViewPrivateItems
		{
			get { return viewPrivateItemsField; }
			set { viewPrivateItemsField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool ViewPrivateItemsSpecified
		{
			get { return viewPrivateItemsFieldSpecified; }
			set { viewPrivateItemsFieldSpecified = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class UserIdType
	{
		private string sIDField;

		private string primarySmtpAddressField;

		private string displayNameField;

		private DistinguishedUserType distinguishedUserField;

		private bool distinguishedUserFieldSpecified;

		/// <remarks/>
		public string SID
		{
			get { return sIDField; }
			set { sIDField = value; }
		}

		/// <remarks/>
		public string PrimarySmtpAddress
		{
			get { return primarySmtpAddressField; }
			set { primarySmtpAddressField = value; }
		}

		/// <remarks/>
		public string DisplayName
		{
			get { return displayNameField; }
			set { displayNameField = value; }
		}

		/// <remarks/>
		public DistinguishedUserType DistinguishedUser
		{
			get { return distinguishedUserField; }
			set { distinguishedUserField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool DistinguishedUserSpecified
		{
			get { return distinguishedUserFieldSpecified; }
			set { distinguishedUserFieldSpecified = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum DistinguishedUserType
	{
		/// <remarks/>
		Default,

		/// <remarks/>
		Anonymous,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class DelegatePermissionsType
	{
		private DelegateFolderPermissionLevelType calendarFolderPermissionLevelField;

		private bool calendarFolderPermissionLevelFieldSpecified;

		private DelegateFolderPermissionLevelType tasksFolderPermissionLevelField;

		private bool tasksFolderPermissionLevelFieldSpecified;

		private DelegateFolderPermissionLevelType inboxFolderPermissionLevelField;

		private bool inboxFolderPermissionLevelFieldSpecified;

		private DelegateFolderPermissionLevelType contactsFolderPermissionLevelField;

		private bool contactsFolderPermissionLevelFieldSpecified;

		private DelegateFolderPermissionLevelType notesFolderPermissionLevelField;

		private bool notesFolderPermissionLevelFieldSpecified;

		private DelegateFolderPermissionLevelType journalFolderPermissionLevelField;

		private bool journalFolderPermissionLevelFieldSpecified;

		/// <remarks/>
		public DelegateFolderPermissionLevelType CalendarFolderPermissionLevel
		{
			get { return calendarFolderPermissionLevelField; }
			set { calendarFolderPermissionLevelField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool CalendarFolderPermissionLevelSpecified
		{
			get { return calendarFolderPermissionLevelFieldSpecified; }
			set { calendarFolderPermissionLevelFieldSpecified = value; }
		}

		/// <remarks/>
		public DelegateFolderPermissionLevelType TasksFolderPermissionLevel
		{
			get { return tasksFolderPermissionLevelField; }
			set { tasksFolderPermissionLevelField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool TasksFolderPermissionLevelSpecified
		{
			get { return tasksFolderPermissionLevelFieldSpecified; }
			set { tasksFolderPermissionLevelFieldSpecified = value; }
		}

		/// <remarks/>
		public DelegateFolderPermissionLevelType InboxFolderPermissionLevel
		{
			get { return inboxFolderPermissionLevelField; }
			set { inboxFolderPermissionLevelField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool InboxFolderPermissionLevelSpecified
		{
			get { return inboxFolderPermissionLevelFieldSpecified; }
			set { inboxFolderPermissionLevelFieldSpecified = value; }
		}

		/// <remarks/>
		public DelegateFolderPermissionLevelType ContactsFolderPermissionLevel
		{
			get { return contactsFolderPermissionLevelField; }
			set { contactsFolderPermissionLevelField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool ContactsFolderPermissionLevelSpecified
		{
			get { return contactsFolderPermissionLevelFieldSpecified; }
			set { contactsFolderPermissionLevelFieldSpecified = value; }
		}

		/// <remarks/>
		public DelegateFolderPermissionLevelType NotesFolderPermissionLevel
		{
			get { return notesFolderPermissionLevelField; }
			set { notesFolderPermissionLevelField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool NotesFolderPermissionLevelSpecified
		{
			get { return notesFolderPermissionLevelFieldSpecified; }
			set { notesFolderPermissionLevelFieldSpecified = value; }
		}

		/// <remarks/>
		public DelegateFolderPermissionLevelType JournalFolderPermissionLevel
		{
			get { return journalFolderPermissionLevelField; }
			set { journalFolderPermissionLevelField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool JournalFolderPermissionLevelSpecified
		{
			get { return journalFolderPermissionLevelFieldSpecified; }
			set { journalFolderPermissionLevelFieldSpecified = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum DelegateFolderPermissionLevelType
	{
		/// <remarks/>
		None,

		/// <remarks/>
		Editor,

		/// <remarks/>
		Reviewer,

		/// <remarks/>
		Author,

		/// <remarks/>
		Custom,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class UpdateDelegateResponseMessageType : BaseDelegateResponseMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class RemoveDelegateResponseMessageType : BaseDelegateResponseMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class AddDelegateResponseMessageType : BaseDelegateResponseMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class GetDelegateResponseMessageType : BaseDelegateResponseMessageType
	{
		private DeliverMeetingRequestsType deliverMeetingRequestsField;

		private bool deliverMeetingRequestsFieldSpecified;

		/// <remarks/>
		public DeliverMeetingRequestsType DeliverMeetingRequests
		{
			get { return deliverMeetingRequestsField; }
			set { deliverMeetingRequestsField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool DeliverMeetingRequestsSpecified
		{
			get { return deliverMeetingRequestsFieldSpecified; }
			set { deliverMeetingRequestsFieldSpecified = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum DeliverMeetingRequestsType
	{
		/// <remarks/>
		DelegatesOnly,

		/// <remarks/>
		DelegatesAndMe,

		/// <remarks/>
		DelegatesAndSendInformationToMe,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class ConvertIdResponseMessageType : ResponseMessageType
	{
		private AlternateIdBaseType alternateIdField;

		/// <remarks/>
		public AlternateIdBaseType AlternateId
		{
			get { return alternateIdField; }
			set { alternateIdField = value; }
		}
	}

	/// <remarks/>
	[XmlInclude(typeof(AlternatePublicFolderIdType))]
	[XmlInclude(typeof(AlternatePublicFolderItemIdType))]
	[XmlInclude(typeof(AlternateIdType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public abstract partial class AlternateIdBaseType
	{
		private IdFormatType formatField;

		/// <remarks/>
		[XmlAttribute()]
		public IdFormatType Format
		{
			get { return formatField; }
			set { formatField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum IdFormatType
	{
		/// <remarks/>
		EwsLegacyId,

		/// <remarks/>
		EwsId,

		/// <remarks/>
		EntryId,

		/// <remarks/>
		HexEntryId,

		/// <remarks/>
		StoreId,

		/// <remarks/>
		OwaId,
	}

	/// <remarks/>
	[XmlInclude(typeof(AlternatePublicFolderItemIdType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class AlternatePublicFolderIdType : AlternateIdBaseType
	{
		private string folderIdField;

		/// <remarks/>
		[XmlAttribute()]
		public string FolderId
		{
			get { return folderIdField; }
			set { folderIdField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class AlternatePublicFolderItemIdType : AlternatePublicFolderIdType
	{
		private string itemIdField;

		/// <remarks/>
		[XmlAttribute()]
		public string ItemId
		{
			get { return itemIdField; }
			set { itemIdField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class AlternateIdType : AlternateIdBaseType
	{
		private string idField;

		private string mailboxField;

		/// <remarks/>
		[XmlAttribute()]
		public string Id
		{
			get { return idField; }
			set { idField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public string Mailbox
		{
			get { return mailboxField; }
			set { mailboxField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class SyncFolderItemsResponseMessageType : ResponseMessageType
	{
		private string syncStateField;

		private bool includesLastItemInRangeField;

		private bool includesLastItemInRangeFieldSpecified;

		private SyncFolderItemsChangesType changesField;

		/// <remarks/>
		public string SyncState
		{
			get { return syncStateField; }
			set { syncStateField = value; }
		}

		/// <remarks/>
		public bool IncludesLastItemInRange
		{
			get { return includesLastItemInRangeField; }
			set { includesLastItemInRangeField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IncludesLastItemInRangeSpecified
		{
			get { return includesLastItemInRangeFieldSpecified; }
			set { includesLastItemInRangeFieldSpecified = value; }
		}

		/// <remarks/>
		public SyncFolderItemsChangesType Changes
		{
			get { return changesField; }
			set { changesField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class SyncFolderItemsChangesType
	{
		private object[] itemsField;

		private ItemsChoiceType2[] itemsElementNameField;

		/// <remarks/>
		[XmlElement("Create", typeof(SyncFolderItemsCreateOrUpdateType))]
		[XmlElement("Delete", typeof(SyncFolderItemsDeleteType))]
		[XmlElement("ReadFlagChange", typeof(SyncFolderItemsReadFlagType))]
		[XmlElement("Update", typeof(SyncFolderItemsCreateOrUpdateType))]
		[XmlChoiceIdentifier("ItemsElementName")]
		public object[] Items
		{
			get { return itemsField; }
			set { itemsField = value; }
		}

		/// <remarks/>
		[XmlElement("ItemsElementName")]
		[XmlIgnore()]
		public ItemsChoiceType2[] ItemsElementName
		{
			get { return itemsElementNameField; }
			set { itemsElementNameField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class SyncFolderItemsCreateOrUpdateType
	{
		private ItemType itemField;

		/// <remarks/>
		[XmlElement("CalendarItem", typeof(CalendarItemType))]
		[XmlElement("Contact", typeof(ContactItemType))]
		[XmlElement("DistributionList", typeof(DistributionListType))]
		[XmlElement("Item", typeof(ItemType))]
		[XmlElement("MeetingCancellation", typeof(MeetingCancellationMessageType))]
		[XmlElement("MeetingMessage", typeof(MeetingMessageType))]
		[XmlElement("MeetingRequest", typeof(MeetingRequestMessageType))]
		[XmlElement("MeetingResponse", typeof(MeetingResponseMessageType))]
		[XmlElement("Message", typeof(MessageType))]
		[XmlElement("PostItem", typeof(PostItemType))]
		[XmlElement("Task", typeof(TaskType))]
		public ItemType Item
		{
			get { return itemField; }
			set { itemField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class CalendarItemType : ItemType
	{
		private string uIDField;

		private DateTime recurrenceIdField;

		private bool recurrenceIdFieldSpecified;

		private DateTime dateTimeStampField;

		private bool dateTimeStampFieldSpecified;

		private DateTime startField;

		private bool startFieldSpecified;

		private DateTime endField;

		private bool endFieldSpecified;

		private DateTime originalStartField;

		private bool originalStartFieldSpecified;

		private bool isAllDayEventField;

		private bool isAllDayEventFieldSpecified;

		private LegacyFreeBusyType legacyFreeBusyStatusField;

		private bool legacyFreeBusyStatusFieldSpecified;

		private string locationField;

		private string whenField;

		private bool isMeetingField;

		private bool isMeetingFieldSpecified;

		private bool isCancelledField;

		private bool isCancelledFieldSpecified;

		private bool isRecurringField;

		private bool isRecurringFieldSpecified;

		private bool meetingRequestWasSentField;

		private bool meetingRequestWasSentFieldSpecified;

		private bool isResponseRequestedField;

		private bool isResponseRequestedFieldSpecified;

		private CalendarItemTypeType calendarItemType1Field;

		private bool calendarItemType1FieldSpecified;

		private ResponseTypeType myResponseTypeField;

		private bool myResponseTypeFieldSpecified;

		private SingleRecipientType organizerField;

		private AttendeeType[] requiredAttendeesField;

		private AttendeeType[] optionalAttendeesField;

		private AttendeeType[] resourcesField;

		private int conflictingMeetingCountField;

		private bool conflictingMeetingCountFieldSpecified;

		private int adjacentMeetingCountField;

		private bool adjacentMeetingCountFieldSpecified;

		private NonEmptyArrayOfAllItemsType conflictingMeetingsField;

		private NonEmptyArrayOfAllItemsType adjacentMeetingsField;

		private string durationField;

		private string timeZoneField;

		private DateTime appointmentReplyTimeField;

		private bool appointmentReplyTimeFieldSpecified;

		private int appointmentSequenceNumberField;

		private bool appointmentSequenceNumberFieldSpecified;

		private int appointmentStateField;

		private bool appointmentStateFieldSpecified;

		private RecurrenceType recurrenceField;

		private OccurrenceInfoType firstOccurrenceField;

		private OccurrenceInfoType lastOccurrenceField;

		private OccurrenceInfoType[] modifiedOccurrencesField;

		private DeletedOccurrenceInfoType[] deletedOccurrencesField;

		private TimeZoneType meetingTimeZoneField;

		private int conferenceTypeField;

		private bool conferenceTypeFieldSpecified;

		private bool allowNewTimeProposalField;

		private bool allowNewTimeProposalFieldSpecified;

		private bool isOnlineMeetingField;

		private bool isOnlineMeetingFieldSpecified;

		private string meetingWorkspaceUrlField;

		private string netShowUrlField;

		/// <remarks/>
		public string UID
		{
			get { return uIDField; }
			set { uIDField = value; }
		}

		/// <remarks/>
		public DateTime RecurrenceId
		{
			get { return recurrenceIdField; }
			set { recurrenceIdField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool RecurrenceIdSpecified
		{
			get { return recurrenceIdFieldSpecified; }
			set { recurrenceIdFieldSpecified = value; }
		}

		/// <remarks/>
		public DateTime DateTimeStamp
		{
			get { return dateTimeStampField; }
			set { dateTimeStampField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool DateTimeStampSpecified
		{
			get { return dateTimeStampFieldSpecified; }
			set { dateTimeStampFieldSpecified = value; }
		}

		/// <remarks/>
		public DateTime Start
		{
			get { return startField; }
			set { startField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool StartSpecified
		{
			get { return startFieldSpecified; }
			set { startFieldSpecified = value; }
		}

		/// <remarks/>
		public DateTime End
		{
			get { return endField; }
			set { endField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool EndSpecified
		{
			get { return endFieldSpecified; }
			set { endFieldSpecified = value; }
		}

		/// <remarks/>
		public DateTime OriginalStart
		{
			get { return originalStartField; }
			set { originalStartField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool OriginalStartSpecified
		{
			get { return originalStartFieldSpecified; }
			set { originalStartFieldSpecified = value; }
		}

		/// <remarks/>
		public bool IsAllDayEvent
		{
			get { return isAllDayEventField; }
			set { isAllDayEventField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IsAllDayEventSpecified
		{
			get { return isAllDayEventFieldSpecified; }
			set { isAllDayEventFieldSpecified = value; }
		}

		/// <remarks/>
		public LegacyFreeBusyType LegacyFreeBusyStatus
		{
			get { return legacyFreeBusyStatusField; }
			set { legacyFreeBusyStatusField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool LegacyFreeBusyStatusSpecified
		{
			get { return legacyFreeBusyStatusFieldSpecified; }
			set { legacyFreeBusyStatusFieldSpecified = value; }
		}

		/// <remarks/>
		public string Location
		{
			get { return locationField; }
			set { locationField = value; }
		}

		/// <remarks/>
		public string When
		{
			get { return whenField; }
			set { whenField = value; }
		}

		/// <remarks/>
		public bool IsMeeting
		{
			get { return isMeetingField; }
			set { isMeetingField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IsMeetingSpecified
		{
			get { return isMeetingFieldSpecified; }
			set { isMeetingFieldSpecified = value; }
		}

		/// <remarks/>
		public bool IsCancelled
		{
			get { return isCancelledField; }
			set { isCancelledField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IsCancelledSpecified
		{
			get { return isCancelledFieldSpecified; }
			set { isCancelledFieldSpecified = value; }
		}

		/// <remarks/>
		public bool IsRecurring
		{
			get { return isRecurringField; }
			set { isRecurringField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IsRecurringSpecified
		{
			get { return isRecurringFieldSpecified; }
			set { isRecurringFieldSpecified = value; }
		}

		/// <remarks/>
		public bool MeetingRequestWasSent
		{
			get { return meetingRequestWasSentField; }
			set { meetingRequestWasSentField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool MeetingRequestWasSentSpecified
		{
			get { return meetingRequestWasSentFieldSpecified; }
			set { meetingRequestWasSentFieldSpecified = value; }
		}

		/// <remarks/>
		public bool IsResponseRequested
		{
			get { return isResponseRequestedField; }
			set { isResponseRequestedField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IsResponseRequestedSpecified
		{
			get { return isResponseRequestedFieldSpecified; }
			set { isResponseRequestedFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlElement("CalendarItemType")]
		public CalendarItemTypeType CalendarItemType1
		{
			get { return calendarItemType1Field; }
			set { calendarItemType1Field = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool CalendarItemType1Specified
		{
			get { return calendarItemType1FieldSpecified; }
			set { calendarItemType1FieldSpecified = value; }
		}

		/// <remarks/>
		public ResponseTypeType MyResponseType
		{
			get { return myResponseTypeField; }
			set { myResponseTypeField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool MyResponseTypeSpecified
		{
			get { return myResponseTypeFieldSpecified; }
			set { myResponseTypeFieldSpecified = value; }
		}

		/// <remarks/>
		public SingleRecipientType Organizer
		{
			get { return organizerField; }
			set { organizerField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("Attendee", IsNullable = false)]
		public AttendeeType[] RequiredAttendees
		{
			get { return requiredAttendeesField; }
			set { requiredAttendeesField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("Attendee", IsNullable = false)]
		public AttendeeType[] OptionalAttendees
		{
			get { return optionalAttendeesField; }
			set { optionalAttendeesField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("Attendee", IsNullable = false)]
		public AttendeeType[] Resources
		{
			get { return resourcesField; }
			set { resourcesField = value; }
		}

		/// <remarks/>
		public int ConflictingMeetingCount
		{
			get { return conflictingMeetingCountField; }
			set { conflictingMeetingCountField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool ConflictingMeetingCountSpecified
		{
			get { return conflictingMeetingCountFieldSpecified; }
			set { conflictingMeetingCountFieldSpecified = value; }
		}

		/// <remarks/>
		public int AdjacentMeetingCount
		{
			get { return adjacentMeetingCountField; }
			set { adjacentMeetingCountField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool AdjacentMeetingCountSpecified
		{
			get { return adjacentMeetingCountFieldSpecified; }
			set { adjacentMeetingCountFieldSpecified = value; }
		}

		/// <remarks/>
		public NonEmptyArrayOfAllItemsType ConflictingMeetings
		{
			get { return conflictingMeetingsField; }
			set { conflictingMeetingsField = value; }
		}

		/// <remarks/>
		public NonEmptyArrayOfAllItemsType AdjacentMeetings
		{
			get { return adjacentMeetingsField; }
			set { adjacentMeetingsField = value; }
		}

		/// <remarks/>
		public string Duration
		{
			get { return durationField; }
			set { durationField = value; }
		}

		/// <remarks/>
		public string TimeZone
		{
			get { return timeZoneField; }
			set { timeZoneField = value; }
		}

		/// <remarks/>
		public DateTime AppointmentReplyTime
		{
			get { return appointmentReplyTimeField; }
			set { appointmentReplyTimeField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool AppointmentReplyTimeSpecified
		{
			get { return appointmentReplyTimeFieldSpecified; }
			set { appointmentReplyTimeFieldSpecified = value; }
		}

		/// <remarks/>
		public int AppointmentSequenceNumber
		{
			get { return appointmentSequenceNumberField; }
			set { appointmentSequenceNumberField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool AppointmentSequenceNumberSpecified
		{
			get { return appointmentSequenceNumberFieldSpecified; }
			set { appointmentSequenceNumberFieldSpecified = value; }
		}

		/// <remarks/>
		public int AppointmentState
		{
			get { return appointmentStateField; }
			set { appointmentStateField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool AppointmentStateSpecified
		{
			get { return appointmentStateFieldSpecified; }
			set { appointmentStateFieldSpecified = value; }
		}

		/// <remarks/>
		public RecurrenceType Recurrence
		{
			get { return recurrenceField; }
			set { recurrenceField = value; }
		}

		/// <remarks/>
		public OccurrenceInfoType FirstOccurrence
		{
			get { return firstOccurrenceField; }
			set { firstOccurrenceField = value; }
		}

		/// <remarks/>
		public OccurrenceInfoType LastOccurrence
		{
			get { return lastOccurrenceField; }
			set { lastOccurrenceField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("Occurrence", IsNullable = false)]
		public OccurrenceInfoType[] ModifiedOccurrences
		{
			get { return modifiedOccurrencesField; }
			set { modifiedOccurrencesField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("DeletedOccurrence", IsNullable = false)]
		public DeletedOccurrenceInfoType[] DeletedOccurrences
		{
			get { return deletedOccurrencesField; }
			set { deletedOccurrencesField = value; }
		}

		/// <remarks/>
		public TimeZoneType MeetingTimeZone
		{
			get { return meetingTimeZoneField; }
			set { meetingTimeZoneField = value; }
		}

		/// <remarks/>
		public int ConferenceType
		{
			get { return conferenceTypeField; }
			set { conferenceTypeField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool ConferenceTypeSpecified
		{
			get { return conferenceTypeFieldSpecified; }
			set { conferenceTypeFieldSpecified = value; }
		}

		/// <remarks/>
		public bool AllowNewTimeProposal
		{
			get { return allowNewTimeProposalField; }
			set { allowNewTimeProposalField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool AllowNewTimeProposalSpecified
		{
			get { return allowNewTimeProposalFieldSpecified; }
			set { allowNewTimeProposalFieldSpecified = value; }
		}

		/// <remarks/>
		public bool IsOnlineMeeting
		{
			get { return isOnlineMeetingField; }
			set { isOnlineMeetingField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IsOnlineMeetingSpecified
		{
			get { return isOnlineMeetingFieldSpecified; }
			set { isOnlineMeetingFieldSpecified = value; }
		}

		/// <remarks/>
		public string MeetingWorkspaceUrl
		{
			get { return meetingWorkspaceUrlField; }
			set { meetingWorkspaceUrlField = value; }
		}

		/// <remarks/>
		public string NetShowUrl
		{
			get { return netShowUrlField; }
			set { netShowUrlField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum LegacyFreeBusyType
	{
		/// <remarks/>
		Free,

		/// <remarks/>
		Tentative,

		/// <remarks/>
		Busy,

		/// <remarks/>
		OOF,

		/// <remarks/>
		NoData,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum CalendarItemTypeType
	{
		/// <remarks/>
		Single,

		/// <remarks/>
		Occurrence,

		/// <remarks/>
		Exception,

		/// <remarks/>
		RecurringMaster,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum ResponseTypeType
	{
		/// <remarks/>
		Unknown,

		/// <remarks/>
		Organizer,

		/// <remarks/>
		Tentative,

		/// <remarks/>
		Accept,

		/// <remarks/>
		Decline,

		/// <remarks/>
		NoResponseReceived,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class SingleRecipientType
	{
		private EmailAddressType itemField;

		/// <remarks/>
		[XmlElement("Mailbox")]
		public EmailAddressType Item
		{
			get { return itemField; }
			set { itemField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class EmailAddressType : BaseEmailAddressType
	{
		private string nameField;

		private string emailAddressField;

		private string routingTypeField;

		private MailboxTypeType mailboxTypeField;

		private bool mailboxTypeFieldSpecified;

		private ItemIdType itemIdField;

		/// <remarks/>
		public string Name
		{
			get { return nameField; }
			set { nameField = value; }
		}

		/// <remarks/>
		public string EmailAddress
		{
			get { return emailAddressField; }
			set { emailAddressField = value; }
		}

		/// <remarks/>
		public string RoutingType
		{
			get { return routingTypeField; }
			set { routingTypeField = value; }
		}

		/// <remarks/>
		public MailboxTypeType MailboxType
		{
			get { return mailboxTypeField; }
			set { mailboxTypeField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool MailboxTypeSpecified
		{
			get { return mailboxTypeFieldSpecified; }
			set { mailboxTypeFieldSpecified = value; }
		}

		/// <remarks/>
		public ItemIdType ItemId
		{
			get { return itemIdField; }
			set { itemIdField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum MailboxTypeType
	{
		/// <remarks/>
		Mailbox,

		/// <remarks/>
		PublicDL,

		/// <remarks/>
		PrivateDL,

		/// <remarks/>
		Contact,

		/// <remarks/>
		PublicFolder,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class ItemIdType : BaseItemIdType
	{
		private string idField;

		private string changeKeyField;

		/// <remarks/>
		[XmlAttribute()]
		public string Id
		{
			get { return idField; }
			set { idField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public string ChangeKey
		{
			get { return changeKeyField; }
			set { changeKeyField = value; }
		}
	}

	/// <remarks/>
	[XmlInclude(typeof(RecurringMasterItemIdType))]
	[XmlInclude(typeof(OccurrenceItemIdType))]
	[XmlInclude(typeof(ItemIdType))]
	[XmlInclude(typeof(RootItemIdType))]
	[XmlInclude(typeof(RequestAttachmentIdType))]
	[XmlInclude(typeof(AttachmentIdType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public abstract partial class BaseItemIdType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class RecurringMasterItemIdType : BaseItemIdType
	{
		private string occurrenceIdField;

		private string changeKeyField;

		/// <remarks/>
		[XmlAttribute()]
		public string OccurrenceId
		{
			get { return occurrenceIdField; }
			set { occurrenceIdField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public string ChangeKey
		{
			get { return changeKeyField; }
			set { changeKeyField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class OccurrenceItemIdType : BaseItemIdType
	{
		private string recurringMasterIdField;

		private string changeKeyField;

		private int instanceIndexField;

		/// <remarks/>
		[XmlAttribute()]
		public string RecurringMasterId
		{
			get { return recurringMasterIdField; }
			set { recurringMasterIdField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public string ChangeKey
		{
			get { return changeKeyField; }
			set { changeKeyField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public int InstanceIndex
		{
			get { return instanceIndexField; }
			set { instanceIndexField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class RootItemIdType : BaseItemIdType
	{
		private string rootItemIdField;

		private string rootItemChangeKeyField;

		/// <remarks/>
		[XmlAttribute()]
		public string RootItemId
		{
			get { return rootItemIdField; }
			set { rootItemIdField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public string RootItemChangeKey
		{
			get { return rootItemChangeKeyField; }
			set { rootItemChangeKeyField = value; }
		}
	}

	/// <remarks/>
	[XmlInclude(typeof(AttachmentIdType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class RequestAttachmentIdType : BaseItemIdType
	{
		private string idField;

		/// <remarks/>
		[XmlAttribute()]
		public string Id
		{
			get { return idField; }
			set { idField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class AttachmentIdType : RequestAttachmentIdType
	{
		private string rootItemIdField;

		private string rootItemChangeKeyField;

		/// <remarks/>
		[XmlAttribute()]
		public string RootItemId
		{
			get { return rootItemIdField; }
			set { rootItemIdField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public string RootItemChangeKey
		{
			get { return rootItemChangeKeyField; }
			set { rootItemChangeKeyField = value; }
		}
	}

	/// <remarks/>
	[XmlInclude(typeof(EmailAddressType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class BaseEmailAddressType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class AttendeeType
	{
		private EmailAddressType mailboxField;

		private ResponseTypeType responseTypeField;

		private bool responseTypeFieldSpecified;

		private DateTime lastResponseTimeField;

		private bool lastResponseTimeFieldSpecified;

		/// <remarks/>
		public EmailAddressType Mailbox
		{
			get { return mailboxField; }
			set { mailboxField = value; }
		}

		/// <remarks/>
		public ResponseTypeType ResponseType
		{
			get { return responseTypeField; }
			set { responseTypeField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool ResponseTypeSpecified
		{
			get { return responseTypeFieldSpecified; }
			set { responseTypeFieldSpecified = value; }
		}

		/// <remarks/>
		public DateTime LastResponseTime
		{
			get { return lastResponseTimeField; }
			set { lastResponseTimeField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool LastResponseTimeSpecified
		{
			get { return lastResponseTimeFieldSpecified; }
			set { lastResponseTimeFieldSpecified = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class NonEmptyArrayOfAllItemsType
	{
		private ItemType[] itemsField;

		/// <remarks/>
		[XmlElement("AcceptItem", typeof(AcceptItemType))]
		[XmlElement("CalendarItem", typeof(CalendarItemType))]
		[XmlElement("CancelCalendarItem", typeof(CancelCalendarItemType))]
		[XmlElement("Contact", typeof(ContactItemType))]
		[XmlElement("DeclineItem", typeof(DeclineItemType))]
		[XmlElement("DistributionList", typeof(DistributionListType))]
		[XmlElement("ForwardItem", typeof(ForwardItemType))]
		[XmlElement("Item", typeof(ItemType))]
		[XmlElement("MeetingCancellation", typeof(MeetingCancellationMessageType))]
		[XmlElement("MeetingMessage", typeof(MeetingMessageType))]
		[XmlElement("MeetingRequest", typeof(MeetingRequestMessageType))]
		[XmlElement("MeetingResponse", typeof(MeetingResponseMessageType))]
		[XmlElement("Message", typeof(MessageType))]
		[XmlElement("PostItem", typeof(PostItemType))]
		[XmlElement("PostReplyItem", typeof(PostReplyItemType))]
		[XmlElement("RemoveItem", typeof(RemoveItemType))]
		[XmlElement("ReplyAllToItem", typeof(ReplyAllToItemType))]
		[XmlElement("ReplyToItem", typeof(ReplyToItemType))]
		[XmlElement("SuppressReadReceipt", typeof(SuppressReadReceiptType))]
		[XmlElement("Task", typeof(TaskType))]
		[XmlElement("TentativelyAcceptItem", typeof(TentativelyAcceptItemType))]
		public ItemType[] Items
		{
			get { return itemsField; }
			set { itemsField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class AcceptItemType : WellKnownResponseObjectType
	{
	}

	/// <remarks/>
	[XmlInclude(typeof(DeclineItemType))]
	[XmlInclude(typeof(TentativelyAcceptItemType))]
	[XmlInclude(typeof(AcceptItemType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class WellKnownResponseObjectType : ResponseObjectType
	{
	}

	/// <remarks/>
	[XmlInclude(typeof(PostReplyItemBaseType))]
	[XmlInclude(typeof(PostReplyItemType))]
	[XmlInclude(typeof(RemoveItemType))]
	[XmlInclude(typeof(ReferenceItemResponseType))]
	[XmlInclude(typeof(SuppressReadReceiptType))]
	[XmlInclude(typeof(SmartResponseBaseType))]
	[XmlInclude(typeof(SmartResponseType))]
	[XmlInclude(typeof(CancelCalendarItemType))]
	[XmlInclude(typeof(ForwardItemType))]
	[XmlInclude(typeof(ReplyAllToItemType))]
	[XmlInclude(typeof(ReplyToItemType))]
	[XmlInclude(typeof(WellKnownResponseObjectType))]
	[XmlInclude(typeof(DeclineItemType))]
	[XmlInclude(typeof(TentativelyAcceptItemType))]
	[XmlInclude(typeof(AcceptItemType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public abstract partial class ResponseObjectType : ResponseObjectCoreType
	{
		private string objectNameField;

		/// <remarks/>
		[XmlAttribute()]
		public string ObjectName
		{
			get { return objectNameField; }
			set { objectNameField = value; }
		}
	}

	/// <remarks/>
	[XmlInclude(typeof(ResponseObjectType))]
	[XmlInclude(typeof(PostReplyItemBaseType))]
	[XmlInclude(typeof(PostReplyItemType))]
	[XmlInclude(typeof(RemoveItemType))]
	[XmlInclude(typeof(ReferenceItemResponseType))]
	[XmlInclude(typeof(SuppressReadReceiptType))]
	[XmlInclude(typeof(SmartResponseBaseType))]
	[XmlInclude(typeof(SmartResponseType))]
	[XmlInclude(typeof(CancelCalendarItemType))]
	[XmlInclude(typeof(ForwardItemType))]
	[XmlInclude(typeof(ReplyAllToItemType))]
	[XmlInclude(typeof(ReplyToItemType))]
	[XmlInclude(typeof(WellKnownResponseObjectType))]
	[XmlInclude(typeof(DeclineItemType))]
	[XmlInclude(typeof(TentativelyAcceptItemType))]
	[XmlInclude(typeof(AcceptItemType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public abstract partial class ResponseObjectCoreType : MessageType
	{
		private ItemIdType referenceItemIdField;

		/// <remarks/>
		public ItemIdType ReferenceItemId
		{
			get { return referenceItemIdField; }
			set { referenceItemIdField = value; }
		}
	}

	/// <remarks/>
	[XmlInclude(typeof(MeetingMessageType))]
	[XmlInclude(typeof(MeetingCancellationMessageType))]
	[XmlInclude(typeof(MeetingResponseMessageType))]
	[XmlInclude(typeof(MeetingRequestMessageType))]
	[XmlInclude(typeof(ResponseObjectCoreType))]
	[XmlInclude(typeof(ResponseObjectType))]
	[XmlInclude(typeof(PostReplyItemBaseType))]
	[XmlInclude(typeof(PostReplyItemType))]
	[XmlInclude(typeof(RemoveItemType))]
	[XmlInclude(typeof(ReferenceItemResponseType))]
	[XmlInclude(typeof(SuppressReadReceiptType))]
	[XmlInclude(typeof(SmartResponseBaseType))]
	[XmlInclude(typeof(SmartResponseType))]
	[XmlInclude(typeof(CancelCalendarItemType))]
	[XmlInclude(typeof(ForwardItemType))]
	[XmlInclude(typeof(ReplyAllToItemType))]
	[XmlInclude(typeof(ReplyToItemType))]
	[XmlInclude(typeof(WellKnownResponseObjectType))]
	[XmlInclude(typeof(DeclineItemType))]
	[XmlInclude(typeof(TentativelyAcceptItemType))]
	[XmlInclude(typeof(AcceptItemType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class MessageType : ItemType
	{
		private SingleRecipientType senderField;

		private EmailAddressType[] toRecipientsField;

		private EmailAddressType[] ccRecipientsField;

		private EmailAddressType[] bccRecipientsField;

		private bool isReadReceiptRequestedField;

		private bool isReadReceiptRequestedFieldSpecified;

		private bool isDeliveryReceiptRequestedField;

		private bool isDeliveryReceiptRequestedFieldSpecified;

		private byte[] conversationIndexField;

		private string conversationTopicField;

		private SingleRecipientType fromField;

		private string internetMessageIdField;

		private bool isReadField;

		private bool isReadFieldSpecified;

		private bool isResponseRequestedField;

		private bool isResponseRequestedFieldSpecified;

		private string referencesField;

		private EmailAddressType[] replyToField;

		private SingleRecipientType receivedByField;

		private SingleRecipientType receivedRepresentingField;

		/// <remarks/>
		public SingleRecipientType Sender
		{
			get { return senderField; }
			set { senderField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("Mailbox", IsNullable = false)]
		public EmailAddressType[] ToRecipients
		{
			get { return toRecipientsField; }
			set { toRecipientsField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("Mailbox", IsNullable = false)]
		public EmailAddressType[] CcRecipients
		{
			get { return ccRecipientsField; }
			set { ccRecipientsField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("Mailbox", IsNullable = false)]
		public EmailAddressType[] BccRecipients
		{
			get { return bccRecipientsField; }
			set { bccRecipientsField = value; }
		}

		/// <remarks/>
		public bool IsReadReceiptRequested
		{
			get { return isReadReceiptRequestedField; }
			set { isReadReceiptRequestedField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IsReadReceiptRequestedSpecified
		{
			get { return isReadReceiptRequestedFieldSpecified; }
			set { isReadReceiptRequestedFieldSpecified = value; }
		}

		/// <remarks/>
		public bool IsDeliveryReceiptRequested
		{
			get { return isDeliveryReceiptRequestedField; }
			set { isDeliveryReceiptRequestedField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IsDeliveryReceiptRequestedSpecified
		{
			get { return isDeliveryReceiptRequestedFieldSpecified; }
			set { isDeliveryReceiptRequestedFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlElement(DataType = "base64Binary")]
		public byte[] ConversationIndex
		{
			get { return conversationIndexField; }
			set { conversationIndexField = value; }
		}

		/// <remarks/>
		public string ConversationTopic
		{
			get { return conversationTopicField; }
			set { conversationTopicField = value; }
		}

		/// <remarks/>
		public SingleRecipientType From
		{
			get { return fromField; }
			set { fromField = value; }
		}

		/// <remarks/>
		public string InternetMessageId
		{
			get { return internetMessageIdField; }
			set { internetMessageIdField = value; }
		}

		/// <remarks/>
		public bool IsRead
		{
			get { return isReadField; }
			set { isReadField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IsReadSpecified
		{
			get { return isReadFieldSpecified; }
			set { isReadFieldSpecified = value; }
		}

		/// <remarks/>
		public bool IsResponseRequested
		{
			get { return isResponseRequestedField; }
			set { isResponseRequestedField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IsResponseRequestedSpecified
		{
			get { return isResponseRequestedFieldSpecified; }
			set { isResponseRequestedFieldSpecified = value; }
		}

		/// <remarks/>
		public string References
		{
			get { return referencesField; }
			set { referencesField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("Mailbox", IsNullable = false)]
		public EmailAddressType[] ReplyTo
		{
			get { return replyToField; }
			set { replyToField = value; }
		}

		/// <remarks/>
		public SingleRecipientType ReceivedBy
		{
			get { return receivedByField; }
			set { receivedByField = value; }
		}

		/// <remarks/>
		public SingleRecipientType ReceivedRepresenting
		{
			get { return receivedRepresentingField; }
			set { receivedRepresentingField = value; }
		}
	}

	/// <remarks/>
	[XmlInclude(typeof(PostItemType))]
	[XmlInclude(typeof(TaskType))]
	[XmlInclude(typeof(DistributionListType))]
	[XmlInclude(typeof(ContactItemType))]
	[XmlInclude(typeof(CalendarItemType))]
	[XmlInclude(typeof(MessageType))]
	[XmlInclude(typeof(MeetingMessageType))]
	[XmlInclude(typeof(MeetingCancellationMessageType))]
	[XmlInclude(typeof(MeetingResponseMessageType))]
	[XmlInclude(typeof(MeetingRequestMessageType))]
	[XmlInclude(typeof(ResponseObjectCoreType))]
	[XmlInclude(typeof(ResponseObjectType))]
	[XmlInclude(typeof(PostReplyItemBaseType))]
	[XmlInclude(typeof(PostReplyItemType))]
	[XmlInclude(typeof(RemoveItemType))]
	[XmlInclude(typeof(ReferenceItemResponseType))]
	[XmlInclude(typeof(SuppressReadReceiptType))]
	[XmlInclude(typeof(SmartResponseBaseType))]
	[XmlInclude(typeof(SmartResponseType))]
	[XmlInclude(typeof(CancelCalendarItemType))]
	[XmlInclude(typeof(ForwardItemType))]
	[XmlInclude(typeof(ReplyAllToItemType))]
	[XmlInclude(typeof(ReplyToItemType))]
	[XmlInclude(typeof(WellKnownResponseObjectType))]
	[XmlInclude(typeof(DeclineItemType))]
	[XmlInclude(typeof(TentativelyAcceptItemType))]
	[XmlInclude(typeof(AcceptItemType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class ItemType
	{
		private MimeContentType mimeContentField;

		private ItemIdType itemIdField;

		private FolderIdType parentFolderIdField;

		private string itemClassField;

		private string subjectField;

		private SensitivityChoicesType sensitivityField;

		private bool sensitivityFieldSpecified;

		private BodyType bodyField;

		private AttachmentType[] attachmentsField;

		private DateTime dateTimeReceivedField;

		private bool dateTimeReceivedFieldSpecified;

		private int sizeField;

		private bool sizeFieldSpecified;

		private string[] categoriesField;

		private ImportanceChoicesType importanceField;

		private bool importanceFieldSpecified;

		private string inReplyToField;

		private bool isSubmittedField;

		private bool isSubmittedFieldSpecified;

		private bool isDraftField;

		private bool isDraftFieldSpecified;

		private bool isFromMeField;

		private bool isFromMeFieldSpecified;

		private bool isResendField;

		private bool isResendFieldSpecified;

		private bool isUnmodifiedField;

		private bool isUnmodifiedFieldSpecified;

		private InternetHeaderType[] internetMessageHeadersField;

		private DateTime dateTimeSentField;

		private bool dateTimeSentFieldSpecified;

		private DateTime dateTimeCreatedField;

		private bool dateTimeCreatedFieldSpecified;

		private ResponseObjectType[] responseObjectsField;

		private DateTime reminderDueByField;

		private bool reminderDueByFieldSpecified;

		private bool reminderIsSetField;

		private bool reminderIsSetFieldSpecified;

		private string reminderMinutesBeforeStartField;

		private string displayCcField;

		private string displayToField;

		private bool hasAttachmentsField;

		private bool hasAttachmentsFieldSpecified;

		private ExtendedPropertyType[] extendedPropertyField;

		private string cultureField;

		private EffectiveRightsType effectiveRightsField;

		private string lastModifiedNameField;

		private DateTime lastModifiedTimeField;

		private bool lastModifiedTimeFieldSpecified;

		/// <remarks/>
		public MimeContentType MimeContent
		{
			get { return mimeContentField; }
			set { mimeContentField = value; }
		}

		/// <remarks/>
		public ItemIdType ItemId
		{
			get { return itemIdField; }
			set { itemIdField = value; }
		}

		/// <remarks/>
		public FolderIdType ParentFolderId
		{
			get { return parentFolderIdField; }
			set { parentFolderIdField = value; }
		}

		/// <remarks/>
		public string ItemClass
		{
			get { return itemClassField; }
			set { itemClassField = value; }
		}

		/// <remarks/>
		public string Subject
		{
			get { return subjectField; }
			set { subjectField = value; }
		}

		/// <remarks/>
		public SensitivityChoicesType Sensitivity
		{
			get { return sensitivityField; }
			set { sensitivityField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool SensitivitySpecified
		{
			get { return sensitivityFieldSpecified; }
			set { sensitivityFieldSpecified = value; }
		}

		/// <remarks/>
		public BodyType Body
		{
			get { return bodyField; }
			set { bodyField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("FileAttachment", typeof(FileAttachmentType), IsNullable = false)]
		[XmlArrayItem("ItemAttachment", typeof(ItemAttachmentType), IsNullable = false)]
		public AttachmentType[] Attachments
		{
			get { return attachmentsField; }
			set { attachmentsField = value; }
		}

		/// <remarks/>
		public DateTime DateTimeReceived
		{
			get { return dateTimeReceivedField; }
			set { dateTimeReceivedField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool DateTimeReceivedSpecified
		{
			get { return dateTimeReceivedFieldSpecified; }
			set { dateTimeReceivedFieldSpecified = value; }
		}

		/// <remarks/>
		public int Size
		{
			get { return sizeField; }
			set { sizeField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool SizeSpecified
		{
			get { return sizeFieldSpecified; }
			set { sizeFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlArrayItem("String", IsNullable = false)]
		public string[] Categories
		{
			get { return categoriesField; }
			set { categoriesField = value; }
		}

		/// <remarks/>
		public ImportanceChoicesType Importance
		{
			get { return importanceField; }
			set { importanceField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool ImportanceSpecified
		{
			get { return importanceFieldSpecified; }
			set { importanceFieldSpecified = value; }
		}

		/// <remarks/>
		public string InReplyTo
		{
			get { return inReplyToField; }
			set { inReplyToField = value; }
		}

		/// <remarks/>
		public bool IsSubmitted
		{
			get { return isSubmittedField; }
			set { isSubmittedField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IsSubmittedSpecified
		{
			get { return isSubmittedFieldSpecified; }
			set { isSubmittedFieldSpecified = value; }
		}

		/// <remarks/>
		public bool IsDraft
		{
			get { return isDraftField; }
			set { isDraftField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IsDraftSpecified
		{
			get { return isDraftFieldSpecified; }
			set { isDraftFieldSpecified = value; }
		}

		/// <remarks/>
		public bool IsFromMe
		{
			get { return isFromMeField; }
			set { isFromMeField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IsFromMeSpecified
		{
			get { return isFromMeFieldSpecified; }
			set { isFromMeFieldSpecified = value; }
		}

		/// <remarks/>
		public bool IsResend
		{
			get { return isResendField; }
			set { isResendField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IsResendSpecified
		{
			get { return isResendFieldSpecified; }
			set { isResendFieldSpecified = value; }
		}

		/// <remarks/>
		public bool IsUnmodified
		{
			get { return isUnmodifiedField; }
			set { isUnmodifiedField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IsUnmodifiedSpecified
		{
			get { return isUnmodifiedFieldSpecified; }
			set { isUnmodifiedFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlArrayItem("InternetMessageHeader", IsNullable = false)]
		public InternetHeaderType[] InternetMessageHeaders
		{
			get { return internetMessageHeadersField; }
			set { internetMessageHeadersField = value; }
		}

		/// <remarks/>
		public DateTime DateTimeSent
		{
			get { return dateTimeSentField; }
			set { dateTimeSentField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool DateTimeSentSpecified
		{
			get { return dateTimeSentFieldSpecified; }
			set { dateTimeSentFieldSpecified = value; }
		}

		/// <remarks/>
		public DateTime DateTimeCreated
		{
			get { return dateTimeCreatedField; }
			set { dateTimeCreatedField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool DateTimeCreatedSpecified
		{
			get { return dateTimeCreatedFieldSpecified; }
			set { dateTimeCreatedFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlArrayItem("AcceptItem", typeof(AcceptItemType), IsNullable = false)]
		[XmlArrayItem("CancelCalendarItem", typeof(CancelCalendarItemType), IsNullable = false)]
		[XmlArrayItem("DeclineItem", typeof(DeclineItemType), IsNullable = false)]
		[XmlArrayItem("ForwardItem", typeof(ForwardItemType), IsNullable = false)]
		[XmlArrayItem("PostReplyItem", typeof(PostReplyItemType), IsNullable = false)]
		[XmlArrayItem("RemoveItem", typeof(RemoveItemType), IsNullable = false)]
		[XmlArrayItem("ReplyAllToItem", typeof(ReplyAllToItemType), IsNullable = false)]
		[XmlArrayItem("ReplyToItem", typeof(ReplyToItemType), IsNullable = false)]
		[XmlArrayItem("SuppressReadReceipt", typeof(SuppressReadReceiptType), IsNullable = false)]
		[XmlArrayItem("TentativelyAcceptItem", typeof(TentativelyAcceptItemType), IsNullable = false)]
		public ResponseObjectType[] ResponseObjects
		{
			get { return responseObjectsField; }
			set { responseObjectsField = value; }
		}

		/// <remarks/>
		public DateTime ReminderDueBy
		{
			get { return reminderDueByField; }
			set { reminderDueByField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool ReminderDueBySpecified
		{
			get { return reminderDueByFieldSpecified; }
			set { reminderDueByFieldSpecified = value; }
		}

		/// <remarks/>
		public bool ReminderIsSet
		{
			get { return reminderIsSetField; }
			set { reminderIsSetField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool ReminderIsSetSpecified
		{
			get { return reminderIsSetFieldSpecified; }
			set { reminderIsSetFieldSpecified = value; }
		}

		/// <remarks/>
		public string ReminderMinutesBeforeStart
		{
			get { return reminderMinutesBeforeStartField; }
			set { reminderMinutesBeforeStartField = value; }
		}

		/// <remarks/>
		public string DisplayCc
		{
			get { return displayCcField; }
			set { displayCcField = value; }
		}

		/// <remarks/>
		public string DisplayTo
		{
			get { return displayToField; }
			set { displayToField = value; }
		}

		/// <remarks/>
		public bool HasAttachments
		{
			get { return hasAttachmentsField; }
			set { hasAttachmentsField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool HasAttachmentsSpecified
		{
			get { return hasAttachmentsFieldSpecified; }
			set { hasAttachmentsFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlElement("ExtendedProperty")]
		public ExtendedPropertyType[] ExtendedProperty
		{
			get { return extendedPropertyField; }
			set { extendedPropertyField = value; }
		}

		/// <remarks/>
		[XmlElement(DataType = "language")]
		public string Culture
		{
			get { return cultureField; }
			set { cultureField = value; }
		}

		/// <remarks/>
		public EffectiveRightsType EffectiveRights
		{
			get { return effectiveRightsField; }
			set { effectiveRightsField = value; }
		}

		/// <remarks/>
		public string LastModifiedName
		{
			get { return lastModifiedNameField; }
			set { lastModifiedNameField = value; }
		}

		/// <remarks/>
		public DateTime LastModifiedTime
		{
			get { return lastModifiedTimeField; }
			set { lastModifiedTimeField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool LastModifiedTimeSpecified
		{
			get { return lastModifiedTimeFieldSpecified; }
			set { lastModifiedTimeFieldSpecified = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class MimeContentType
	{
		private string characterSetField;

		private string valueField;

		/// <remarks/>
		[XmlAttribute()]
		public string CharacterSet
		{
			get { return characterSetField; }
			set { characterSetField = value; }
		}

		/// <remarks/>
		[XmlText()]
		public string Value
		{
			get { return valueField; }
			set { valueField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class FolderIdType : BaseFolderIdType
	{
		private string idField;

		private string changeKeyField;

		/// <remarks/>
		[XmlAttribute()]
		public string Id
		{
			get { return idField; }
			set { idField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public string ChangeKey
		{
			get { return changeKeyField; }
			set { changeKeyField = value; }
		}
	}

	/// <remarks/>
	[XmlInclude(typeof(FolderIdType))]
	[XmlInclude(typeof(DistinguishedFolderIdType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public abstract partial class BaseFolderIdType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class DistinguishedFolderIdType : BaseFolderIdType
	{
		private EmailAddressType mailboxField;

		private DistinguishedFolderIdNameType idField;

		private string changeKeyField;

		/// <remarks/>
		public EmailAddressType Mailbox
		{
			get { return mailboxField; }
			set { mailboxField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public DistinguishedFolderIdNameType Id
		{
			get { return idField; }
			set { idField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public string ChangeKey
		{
			get { return changeKeyField; }
			set { changeKeyField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum DistinguishedFolderIdNameType
	{
		/// <remarks/>
		calendar,

		/// <remarks/>
		contacts,

		/// <remarks/>
		deleteditems,

		/// <remarks/>
		drafts,

		/// <remarks/>
		inbox,

		/// <remarks/>
		journal,

		/// <remarks/>
		notes,

		/// <remarks/>
		outbox,

		/// <remarks/>
		sentitems,

		/// <remarks/>
		tasks,

		/// <remarks/>
		msgfolderroot,

		/// <remarks/>
		publicfoldersroot,

		/// <remarks/>
		root,

		/// <remarks/>
		junkemail,

		/// <remarks/>
		searchfolders,

		/// <remarks/>
		voicemail,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum SensitivityChoicesType
	{
		/// <remarks/>
		Normal,

		/// <remarks/>
		Personal,

		/// <remarks/>
		Private,

		/// <remarks/>
		Confidential,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class BodyType
	{
		private BodyTypeType bodyType1Field;

		private string valueField;

		/// <remarks/>
		[XmlAttribute("BodyType")]
		public BodyTypeType BodyType1
		{
			get { return bodyType1Field; }
			set { bodyType1Field = value; }
		}

		/// <remarks/>
		[XmlText()]
		public string Value
		{
			get { return valueField; }
			set { valueField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum BodyTypeType
	{
		/// <remarks/>
		HTML,

		/// <remarks/>
		Text,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class FileAttachmentType : AttachmentType
	{
		private byte[] contentField;

		/// <remarks/>
		[XmlElement(DataType = "base64Binary")]
		public byte[] Content
		{
			get { return contentField; }
			set { contentField = value; }
		}
	}

	/// <remarks/>
	[XmlInclude(typeof(FileAttachmentType))]
	[XmlInclude(typeof(ItemAttachmentType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class AttachmentType
	{
		private AttachmentIdType attachmentIdField;

		private string nameField;

		private string contentTypeField;

		private string contentIdField;

		private string contentLocationField;

		/// <remarks/>
		public AttachmentIdType AttachmentId
		{
			get { return attachmentIdField; }
			set { attachmentIdField = value; }
		}

		/// <remarks/>
		public string Name
		{
			get { return nameField; }
			set { nameField = value; }
		}

		/// <remarks/>
		public string ContentType
		{
			get { return contentTypeField; }
			set { contentTypeField = value; }
		}

		/// <remarks/>
		public string ContentId
		{
			get { return contentIdField; }
			set { contentIdField = value; }
		}

		/// <remarks/>
		public string ContentLocation
		{
			get { return contentLocationField; }
			set { contentLocationField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class ItemAttachmentType : AttachmentType
	{
		private ItemType itemField;

		/// <remarks/>
		[XmlElement("CalendarItem", typeof(CalendarItemType))]
		[XmlElement("Contact", typeof(ContactItemType))]
		[XmlElement("Item", typeof(ItemType))]
		[XmlElement("MeetingCancellation", typeof(MeetingCancellationMessageType))]
		[XmlElement("MeetingMessage", typeof(MeetingMessageType))]
		[XmlElement("MeetingRequest", typeof(MeetingRequestMessageType))]
		[XmlElement("MeetingResponse", typeof(MeetingResponseMessageType))]
		[XmlElement("Message", typeof(MessageType))]
		[XmlElement("PostItem", typeof(PostItemType))]
		[XmlElement("Task", typeof(TaskType))]
		public ItemType Item
		{
			get { return itemField; }
			set { itemField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class ContactItemType : ItemType
	{
		private string fileAsField;

		private FileAsMappingType fileAsMappingField;

		private bool fileAsMappingFieldSpecified;

		private string displayNameField;

		private string givenNameField;

		private string initialsField;

		private string middleNameField;

		private string nicknameField;

		private CompleteNameType completeNameField;

		private string companyNameField;

		private EmailAddressDictionaryEntryType[] emailAddressesField;

		private PhysicalAddressDictionaryEntryType[] physicalAddressesField;

		private PhoneNumberDictionaryEntryType[] phoneNumbersField;

		private string assistantNameField;

		private DateTime birthdayField;

		private bool birthdayFieldSpecified;

		private string businessHomePageField;

		private string[] childrenField;

		private string[] companiesField;

		private ContactSourceType contactSourceField;

		private bool contactSourceFieldSpecified;

		private string departmentField;

		private string generationField;

		private ImAddressDictionaryEntryType[] imAddressesField;

		private string jobTitleField;

		private string managerField;

		private string mileageField;

		private string officeLocationField;

		private PhysicalAddressIndexType postalAddressIndexField;

		private bool postalAddressIndexFieldSpecified;

		private string professionField;

		private string spouseNameField;

		private string surnameField;

		private DateTime weddingAnniversaryField;

		private bool weddingAnniversaryFieldSpecified;

		/// <remarks/>
		public string FileAs
		{
			get { return fileAsField; }
			set { fileAsField = value; }
		}

		/// <remarks/>
		public FileAsMappingType FileAsMapping
		{
			get { return fileAsMappingField; }
			set { fileAsMappingField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool FileAsMappingSpecified
		{
			get { return fileAsMappingFieldSpecified; }
			set { fileAsMappingFieldSpecified = value; }
		}

		/// <remarks/>
		public string DisplayName
		{
			get { return displayNameField; }
			set { displayNameField = value; }
		}

		/// <remarks/>
		public string GivenName
		{
			get { return givenNameField; }
			set { givenNameField = value; }
		}

		/// <remarks/>
		public string Initials
		{
			get { return initialsField; }
			set { initialsField = value; }
		}

		/// <remarks/>
		public string MiddleName
		{
			get { return middleNameField; }
			set { middleNameField = value; }
		}

		/// <remarks/>
		public string Nickname
		{
			get { return nicknameField; }
			set { nicknameField = value; }
		}

		/// <remarks/>
		public CompleteNameType CompleteName
		{
			get { return completeNameField; }
			set { completeNameField = value; }
		}

		/// <remarks/>
		public string CompanyName
		{
			get { return companyNameField; }
			set { companyNameField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("Entry", IsNullable = false)]
		public EmailAddressDictionaryEntryType[] EmailAddresses
		{
			get { return emailAddressesField; }
			set { emailAddressesField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("Entry", IsNullable = false)]
		public PhysicalAddressDictionaryEntryType[] PhysicalAddresses
		{
			get { return physicalAddressesField; }
			set { physicalAddressesField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("Entry", IsNullable = false)]
		public PhoneNumberDictionaryEntryType[] PhoneNumbers
		{
			get { return phoneNumbersField; }
			set { phoneNumbersField = value; }
		}

		/// <remarks/>
		public string AssistantName
		{
			get { return assistantNameField; }
			set { assistantNameField = value; }
		}

		/// <remarks/>
		public DateTime Birthday
		{
			get { return birthdayField; }
			set { birthdayField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool BirthdaySpecified
		{
			get { return birthdayFieldSpecified; }
			set { birthdayFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlElement(DataType = "anyURI")]
		public string BusinessHomePage
		{
			get { return businessHomePageField; }
			set { businessHomePageField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("String", IsNullable = false)]
		public string[] Children
		{
			get { return childrenField; }
			set { childrenField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("String", IsNullable = false)]
		public string[] Companies
		{
			get { return companiesField; }
			set { companiesField = value; }
		}

		/// <remarks/>
		public ContactSourceType ContactSource
		{
			get { return contactSourceField; }
			set { contactSourceField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool ContactSourceSpecified
		{
			get { return contactSourceFieldSpecified; }
			set { contactSourceFieldSpecified = value; }
		}

		/// <remarks/>
		public string Department
		{
			get { return departmentField; }
			set { departmentField = value; }
		}

		/// <remarks/>
		public string Generation
		{
			get { return generationField; }
			set { generationField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("Entry", IsNullable = false)]
		public ImAddressDictionaryEntryType[] ImAddresses
		{
			get { return imAddressesField; }
			set { imAddressesField = value; }
		}

		/// <remarks/>
		public string JobTitle
		{
			get { return jobTitleField; }
			set { jobTitleField = value; }
		}

		/// <remarks/>
		public string Manager
		{
			get { return managerField; }
			set { managerField = value; }
		}

		/// <remarks/>
		public string Mileage
		{
			get { return mileageField; }
			set { mileageField = value; }
		}

		/// <remarks/>
		public string OfficeLocation
		{
			get { return officeLocationField; }
			set { officeLocationField = value; }
		}

		/// <remarks/>
		public PhysicalAddressIndexType PostalAddressIndex
		{
			get { return postalAddressIndexField; }
			set { postalAddressIndexField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool PostalAddressIndexSpecified
		{
			get { return postalAddressIndexFieldSpecified; }
			set { postalAddressIndexFieldSpecified = value; }
		}

		/// <remarks/>
		public string Profession
		{
			get { return professionField; }
			set { professionField = value; }
		}

		/// <remarks/>
		public string SpouseName
		{
			get { return spouseNameField; }
			set { spouseNameField = value; }
		}

		/// <remarks/>
		public string Surname
		{
			get { return surnameField; }
			set { surnameField = value; }
		}

		/// <remarks/>
		public DateTime WeddingAnniversary
		{
			get { return weddingAnniversaryField; }
			set { weddingAnniversaryField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool WeddingAnniversarySpecified
		{
			get { return weddingAnniversaryFieldSpecified; }
			set { weddingAnniversaryFieldSpecified = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum FileAsMappingType
	{
		/// <remarks/>
		None,

		/// <remarks/>
		LastCommaFirst,

		/// <remarks/>
		FirstSpaceLast,

		/// <remarks/>
		Company,

		/// <remarks/>
		LastCommaFirstCompany,

		/// <remarks/>
		CompanyLastFirst,

		/// <remarks/>
		LastFirst,

		/// <remarks/>
		LastFirstCompany,

		/// <remarks/>
		CompanyLastCommaFirst,

		/// <remarks/>
		LastFirstSuffix,

		/// <remarks/>
		LastSpaceFirstCompany,

		/// <remarks/>
		CompanyLastSpaceFirst,

		/// <remarks/>
		LastSpaceFirst,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class CompleteNameType
	{
		private string titleField;

		private string firstNameField;

		private string middleNameField;

		private string lastNameField;

		private string suffixField;

		private string initialsField;

		private string fullNameField;

		private string nicknameField;

		private string yomiFirstNameField;

		private string yomiLastNameField;

		/// <remarks/>
		public string Title
		{
			get { return titleField; }
			set { titleField = value; }
		}

		/// <remarks/>
		public string FirstName
		{
			get { return firstNameField; }
			set { firstNameField = value; }
		}

		/// <remarks/>
		public string MiddleName
		{
			get { return middleNameField; }
			set { middleNameField = value; }
		}

		/// <remarks/>
		public string LastName
		{
			get { return lastNameField; }
			set { lastNameField = value; }
		}

		/// <remarks/>
		public string Suffix
		{
			get { return suffixField; }
			set { suffixField = value; }
		}

		/// <remarks/>
		public string Initials
		{
			get { return initialsField; }
			set { initialsField = value; }
		}

		/// <remarks/>
		public string FullName
		{
			get { return fullNameField; }
			set { fullNameField = value; }
		}

		/// <remarks/>
		public string Nickname
		{
			get { return nicknameField; }
			set { nicknameField = value; }
		}

		/// <remarks/>
		public string YomiFirstName
		{
			get { return yomiFirstNameField; }
			set { yomiFirstNameField = value; }
		}

		/// <remarks/>
		public string YomiLastName
		{
			get { return yomiLastNameField; }
			set { yomiLastNameField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class EmailAddressDictionaryEntryType
	{
		private EmailAddressKeyType keyField;

		private string valueField;

		/// <remarks/>
		[XmlAttribute()]
		public EmailAddressKeyType Key
		{
			get { return keyField; }
			set { keyField = value; }
		}

		/// <remarks/>
		[XmlText()]
		public string Value
		{
			get { return valueField; }
			set { valueField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum EmailAddressKeyType
	{
		/// <remarks/>
		EmailAddress1,

		/// <remarks/>
		EmailAddress2,

		/// <remarks/>
		EmailAddress3,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class PhysicalAddressDictionaryEntryType
	{
		private string streetField;

		private string cityField;

		private string stateField;

		private string countryOrRegionField;

		private string postalCodeField;

		private PhysicalAddressKeyType keyField;

		/// <remarks/>
		public string Street
		{
			get { return streetField; }
			set { streetField = value; }
		}

		/// <remarks/>
		public string City
		{
			get { return cityField; }
			set { cityField = value; }
		}

		/// <remarks/>
		public string State
		{
			get { return stateField; }
			set { stateField = value; }
		}

		/// <remarks/>
		public string CountryOrRegion
		{
			get { return countryOrRegionField; }
			set { countryOrRegionField = value; }
		}

		/// <remarks/>
		public string PostalCode
		{
			get { return postalCodeField; }
			set { postalCodeField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public PhysicalAddressKeyType Key
		{
			get { return keyField; }
			set { keyField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum PhysicalAddressKeyType
	{
		/// <remarks/>
		Business,

		/// <remarks/>
		Home,

		/// <remarks/>
		Other,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class PhoneNumberDictionaryEntryType
	{
		private PhoneNumberKeyType keyField;

		private string valueField;

		/// <remarks/>
		[XmlAttribute()]
		public PhoneNumberKeyType Key
		{
			get { return keyField; }
			set { keyField = value; }
		}

		/// <remarks/>
		[XmlText()]
		public string Value
		{
			get { return valueField; }
			set { valueField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum PhoneNumberKeyType
	{
		/// <remarks/>
		AssistantPhone,

		/// <remarks/>
		BusinessFax,

		/// <remarks/>
		BusinessPhone,

		/// <remarks/>
		BusinessPhone2,

		/// <remarks/>
		Callback,

		/// <remarks/>
		CarPhone,

		/// <remarks/>
		CompanyMainPhone,

		/// <remarks/>
		HomeFax,

		/// <remarks/>
		HomePhone,

		/// <remarks/>
		HomePhone2,

		/// <remarks/>
		Isdn,

		/// <remarks/>
		MobilePhone,

		/// <remarks/>
		OtherFax,

		/// <remarks/>
		OtherTelephone,

		/// <remarks/>
		Pager,

		/// <remarks/>
		PrimaryPhone,

		/// <remarks/>
		RadioPhone,

		/// <remarks/>
		Telex,

		/// <remarks/>
		TtyTddPhone,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum ContactSourceType
	{
		/// <remarks/>
		ActiveDirectory,

		/// <remarks/>
		Store,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class ImAddressDictionaryEntryType
	{
		private ImAddressKeyType keyField;

		private string valueField;

		/// <remarks/>
		[XmlAttribute()]
		public ImAddressKeyType Key
		{
			get { return keyField; }
			set { keyField = value; }
		}

		/// <remarks/>
		[XmlText()]
		public string Value
		{
			get { return valueField; }
			set { valueField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum ImAddressKeyType
	{
		/// <remarks/>
		ImAddress1,

		/// <remarks/>
		ImAddress2,

		/// <remarks/>
		ImAddress3,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum PhysicalAddressIndexType
	{
		/// <remarks/>
		None,

		/// <remarks/>
		Business,

		/// <remarks/>
		Home,

		/// <remarks/>
		Other,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class MeetingCancellationMessageType : MeetingMessageType
	{
	}

	/// <remarks/>
	[XmlInclude(typeof(MeetingCancellationMessageType))]
	[XmlInclude(typeof(MeetingResponseMessageType))]
	[XmlInclude(typeof(MeetingRequestMessageType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class MeetingMessageType : MessageType
	{
		private ItemIdType associatedCalendarItemIdField;

		private bool isDelegatedField;

		private bool isDelegatedFieldSpecified;

		private bool isOutOfDateField;

		private bool isOutOfDateFieldSpecified;

		private bool hasBeenProcessedField;

		private bool hasBeenProcessedFieldSpecified;

		private ResponseTypeType responseTypeField;

		private bool responseTypeFieldSpecified;

		private string uIDField;

		private DateTime recurrenceIdField;

		private bool recurrenceIdFieldSpecified;

		private DateTime dateTimeStampField;

		private bool dateTimeStampFieldSpecified;

		/// <remarks/>
		public ItemIdType AssociatedCalendarItemId
		{
			get { return associatedCalendarItemIdField; }
			set { associatedCalendarItemIdField = value; }
		}

		/// <remarks/>
		public bool IsDelegated
		{
			get { return isDelegatedField; }
			set { isDelegatedField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IsDelegatedSpecified
		{
			get { return isDelegatedFieldSpecified; }
			set { isDelegatedFieldSpecified = value; }
		}

		/// <remarks/>
		public bool IsOutOfDate
		{
			get { return isOutOfDateField; }
			set { isOutOfDateField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IsOutOfDateSpecified
		{
			get { return isOutOfDateFieldSpecified; }
			set { isOutOfDateFieldSpecified = value; }
		}

		/// <remarks/>
		public bool HasBeenProcessed
		{
			get { return hasBeenProcessedField; }
			set { hasBeenProcessedField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool HasBeenProcessedSpecified
		{
			get { return hasBeenProcessedFieldSpecified; }
			set { hasBeenProcessedFieldSpecified = value; }
		}

		/// <remarks/>
		public ResponseTypeType ResponseType
		{
			get { return responseTypeField; }
			set { responseTypeField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool ResponseTypeSpecified
		{
			get { return responseTypeFieldSpecified; }
			set { responseTypeFieldSpecified = value; }
		}

		/// <remarks/>
		public string UID
		{
			get { return uIDField; }
			set { uIDField = value; }
		}

		/// <remarks/>
		public DateTime RecurrenceId
		{
			get { return recurrenceIdField; }
			set { recurrenceIdField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool RecurrenceIdSpecified
		{
			get { return recurrenceIdFieldSpecified; }
			set { recurrenceIdFieldSpecified = value; }
		}

		/// <remarks/>
		public DateTime DateTimeStamp
		{
			get { return dateTimeStampField; }
			set { dateTimeStampField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool DateTimeStampSpecified
		{
			get { return dateTimeStampFieldSpecified; }
			set { dateTimeStampFieldSpecified = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class MeetingResponseMessageType : MeetingMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class MeetingRequestMessageType : MeetingMessageType
	{
		private MeetingRequestTypeType meetingRequestTypeField;

		private bool meetingRequestTypeFieldSpecified;

		private LegacyFreeBusyType intendedFreeBusyStatusField;

		private bool intendedFreeBusyStatusFieldSpecified;

		private DateTime startField;

		private bool startFieldSpecified;

		private DateTime endField;

		private bool endFieldSpecified;

		private DateTime originalStartField;

		private bool originalStartFieldSpecified;

		private bool isAllDayEventField;

		private bool isAllDayEventFieldSpecified;

		private LegacyFreeBusyType legacyFreeBusyStatusField;

		private bool legacyFreeBusyStatusFieldSpecified;

		private string locationField;

		private string whenField;

		private bool isMeetingField;

		private bool isMeetingFieldSpecified;

		private bool isCancelledField;

		private bool isCancelledFieldSpecified;

		private bool isRecurringField;

		private bool isRecurringFieldSpecified;

		private bool meetingRequestWasSentField;

		private bool meetingRequestWasSentFieldSpecified;

		private CalendarItemTypeType calendarItemTypeField;

		private bool calendarItemTypeFieldSpecified;

		private ResponseTypeType myResponseTypeField;

		private bool myResponseTypeFieldSpecified;

		private SingleRecipientType organizerField;

		private AttendeeType[] requiredAttendeesField;

		private AttendeeType[] optionalAttendeesField;

		private AttendeeType[] resourcesField;

		private int conflictingMeetingCountField;

		private bool conflictingMeetingCountFieldSpecified;

		private int adjacentMeetingCountField;

		private bool adjacentMeetingCountFieldSpecified;

		private NonEmptyArrayOfAllItemsType conflictingMeetingsField;

		private NonEmptyArrayOfAllItemsType adjacentMeetingsField;

		private string durationField;

		private string timeZoneField;

		private DateTime appointmentReplyTimeField;

		private bool appointmentReplyTimeFieldSpecified;

		private int appointmentSequenceNumberField;

		private bool appointmentSequenceNumberFieldSpecified;

		private int appointmentStateField;

		private bool appointmentStateFieldSpecified;

		private RecurrenceType recurrenceField;

		private OccurrenceInfoType firstOccurrenceField;

		private OccurrenceInfoType lastOccurrenceField;

		private OccurrenceInfoType[] modifiedOccurrencesField;

		private DeletedOccurrenceInfoType[] deletedOccurrencesField;

		private TimeZoneType meetingTimeZoneField;

		private int conferenceTypeField;

		private bool conferenceTypeFieldSpecified;

		private bool allowNewTimeProposalField;

		private bool allowNewTimeProposalFieldSpecified;

		private bool isOnlineMeetingField;

		private bool isOnlineMeetingFieldSpecified;

		private string meetingWorkspaceUrlField;

		private string netShowUrlField;

		/// <remarks/>
		public MeetingRequestTypeType MeetingRequestType
		{
			get { return meetingRequestTypeField; }
			set { meetingRequestTypeField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool MeetingRequestTypeSpecified
		{
			get { return meetingRequestTypeFieldSpecified; }
			set { meetingRequestTypeFieldSpecified = value; }
		}

		/// <remarks/>
		public LegacyFreeBusyType IntendedFreeBusyStatus
		{
			get { return intendedFreeBusyStatusField; }
			set { intendedFreeBusyStatusField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IntendedFreeBusyStatusSpecified
		{
			get { return intendedFreeBusyStatusFieldSpecified; }
			set { intendedFreeBusyStatusFieldSpecified = value; }
		}

		/// <remarks/>
		public DateTime Start
		{
			get { return startField; }
			set { startField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool StartSpecified
		{
			get { return startFieldSpecified; }
			set { startFieldSpecified = value; }
		}

		/// <remarks/>
		public DateTime End
		{
			get { return endField; }
			set { endField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool EndSpecified
		{
			get { return endFieldSpecified; }
			set { endFieldSpecified = value; }
		}

		/// <remarks/>
		public DateTime OriginalStart
		{
			get { return originalStartField; }
			set { originalStartField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool OriginalStartSpecified
		{
			get { return originalStartFieldSpecified; }
			set { originalStartFieldSpecified = value; }
		}

		/// <remarks/>
		public bool IsAllDayEvent
		{
			get { return isAllDayEventField; }
			set { isAllDayEventField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IsAllDayEventSpecified
		{
			get { return isAllDayEventFieldSpecified; }
			set { isAllDayEventFieldSpecified = value; }
		}

		/// <remarks/>
		public LegacyFreeBusyType LegacyFreeBusyStatus
		{
			get { return legacyFreeBusyStatusField; }
			set { legacyFreeBusyStatusField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool LegacyFreeBusyStatusSpecified
		{
			get { return legacyFreeBusyStatusFieldSpecified; }
			set { legacyFreeBusyStatusFieldSpecified = value; }
		}

		/// <remarks/>
		public string Location
		{
			get { return locationField; }
			set { locationField = value; }
		}

		/// <remarks/>
		public string When
		{
			get { return whenField; }
			set { whenField = value; }
		}

		/// <remarks/>
		public bool IsMeeting
		{
			get { return isMeetingField; }
			set { isMeetingField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IsMeetingSpecified
		{
			get { return isMeetingFieldSpecified; }
			set { isMeetingFieldSpecified = value; }
		}

		/// <remarks/>
		public bool IsCancelled
		{
			get { return isCancelledField; }
			set { isCancelledField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IsCancelledSpecified
		{
			get { return isCancelledFieldSpecified; }
			set { isCancelledFieldSpecified = value; }
		}

		/// <remarks/>
		public bool IsRecurring
		{
			get { return isRecurringField; }
			set { isRecurringField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IsRecurringSpecified
		{
			get { return isRecurringFieldSpecified; }
			set { isRecurringFieldSpecified = value; }
		}

		/// <remarks/>
		public bool MeetingRequestWasSent
		{
			get { return meetingRequestWasSentField; }
			set { meetingRequestWasSentField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool MeetingRequestWasSentSpecified
		{
			get { return meetingRequestWasSentFieldSpecified; }
			set { meetingRequestWasSentFieldSpecified = value; }
		}

		/// <remarks/>
		public CalendarItemTypeType CalendarItemType
		{
			get { return calendarItemTypeField; }
			set { calendarItemTypeField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool CalendarItemTypeSpecified
		{
			get { return calendarItemTypeFieldSpecified; }
			set { calendarItemTypeFieldSpecified = value; }
		}

		/// <remarks/>
		public ResponseTypeType MyResponseType
		{
			get { return myResponseTypeField; }
			set { myResponseTypeField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool MyResponseTypeSpecified
		{
			get { return myResponseTypeFieldSpecified; }
			set { myResponseTypeFieldSpecified = value; }
		}

		/// <remarks/>
		public SingleRecipientType Organizer
		{
			get { return organizerField; }
			set { organizerField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("Attendee", IsNullable = false)]
		public AttendeeType[] RequiredAttendees
		{
			get { return requiredAttendeesField; }
			set { requiredAttendeesField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("Attendee", IsNullable = false)]
		public AttendeeType[] OptionalAttendees
		{
			get { return optionalAttendeesField; }
			set { optionalAttendeesField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("Attendee", IsNullable = false)]
		public AttendeeType[] Resources
		{
			get { return resourcesField; }
			set { resourcesField = value; }
		}

		/// <remarks/>
		public int ConflictingMeetingCount
		{
			get { return conflictingMeetingCountField; }
			set { conflictingMeetingCountField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool ConflictingMeetingCountSpecified
		{
			get { return conflictingMeetingCountFieldSpecified; }
			set { conflictingMeetingCountFieldSpecified = value; }
		}

		/// <remarks/>
		public int AdjacentMeetingCount
		{
			get { return adjacentMeetingCountField; }
			set { adjacentMeetingCountField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool AdjacentMeetingCountSpecified
		{
			get { return adjacentMeetingCountFieldSpecified; }
			set { adjacentMeetingCountFieldSpecified = value; }
		}

		/// <remarks/>
		public NonEmptyArrayOfAllItemsType ConflictingMeetings
		{
			get { return conflictingMeetingsField; }
			set { conflictingMeetingsField = value; }
		}

		/// <remarks/>
		public NonEmptyArrayOfAllItemsType AdjacentMeetings
		{
			get { return adjacentMeetingsField; }
			set { adjacentMeetingsField = value; }
		}

		/// <remarks/>
		public string Duration
		{
			get { return durationField; }
			set { durationField = value; }
		}

		/// <remarks/>
		public string TimeZone
		{
			get { return timeZoneField; }
			set { timeZoneField = value; }
		}

		/// <remarks/>
		public DateTime AppointmentReplyTime
		{
			get { return appointmentReplyTimeField; }
			set { appointmentReplyTimeField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool AppointmentReplyTimeSpecified
		{
			get { return appointmentReplyTimeFieldSpecified; }
			set { appointmentReplyTimeFieldSpecified = value; }
		}

		/// <remarks/>
		public int AppointmentSequenceNumber
		{
			get { return appointmentSequenceNumberField; }
			set { appointmentSequenceNumberField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool AppointmentSequenceNumberSpecified
		{
			get { return appointmentSequenceNumberFieldSpecified; }
			set { appointmentSequenceNumberFieldSpecified = value; }
		}

		/// <remarks/>
		public int AppointmentState
		{
			get { return appointmentStateField; }
			set { appointmentStateField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool AppointmentStateSpecified
		{
			get { return appointmentStateFieldSpecified; }
			set { appointmentStateFieldSpecified = value; }
		}

		/// <remarks/>
		public RecurrenceType Recurrence
		{
			get { return recurrenceField; }
			set { recurrenceField = value; }
		}

		/// <remarks/>
		public OccurrenceInfoType FirstOccurrence
		{
			get { return firstOccurrenceField; }
			set { firstOccurrenceField = value; }
		}

		/// <remarks/>
		public OccurrenceInfoType LastOccurrence
		{
			get { return lastOccurrenceField; }
			set { lastOccurrenceField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("Occurrence", IsNullable = false)]
		public OccurrenceInfoType[] ModifiedOccurrences
		{
			get { return modifiedOccurrencesField; }
			set { modifiedOccurrencesField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("DeletedOccurrence", IsNullable = false)]
		public DeletedOccurrenceInfoType[] DeletedOccurrences
		{
			get { return deletedOccurrencesField; }
			set { deletedOccurrencesField = value; }
		}

		/// <remarks/>
		public TimeZoneType MeetingTimeZone
		{
			get { return meetingTimeZoneField; }
			set { meetingTimeZoneField = value; }
		}

		/// <remarks/>
		public int ConferenceType
		{
			get { return conferenceTypeField; }
			set { conferenceTypeField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool ConferenceTypeSpecified
		{
			get { return conferenceTypeFieldSpecified; }
			set { conferenceTypeFieldSpecified = value; }
		}

		/// <remarks/>
		public bool AllowNewTimeProposal
		{
			get { return allowNewTimeProposalField; }
			set { allowNewTimeProposalField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool AllowNewTimeProposalSpecified
		{
			get { return allowNewTimeProposalFieldSpecified; }
			set { allowNewTimeProposalFieldSpecified = value; }
		}

		/// <remarks/>
		public bool IsOnlineMeeting
		{
			get { return isOnlineMeetingField; }
			set { isOnlineMeetingField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IsOnlineMeetingSpecified
		{
			get { return isOnlineMeetingFieldSpecified; }
			set { isOnlineMeetingFieldSpecified = value; }
		}

		/// <remarks/>
		public string MeetingWorkspaceUrl
		{
			get { return meetingWorkspaceUrlField; }
			set { meetingWorkspaceUrlField = value; }
		}

		/// <remarks/>
		public string NetShowUrl
		{
			get { return netShowUrlField; }
			set { netShowUrlField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum MeetingRequestTypeType
	{
		/// <remarks/>
		None,

		/// <remarks/>
		FullUpdate,

		/// <remarks/>
		InformationalUpdate,

		/// <remarks/>
		NewMeetingRequest,

		/// <remarks/>
		Outdated,

		/// <remarks/>
		SilentUpdate,

		/// <remarks/>
		PrincipalWantsCopy,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class RecurrenceType
	{
		private RecurrencePatternBaseType itemField;

		private RecurrenceRangeBaseType item1Field;

		/// <remarks/>
		[XmlElement("AbsoluteMonthlyRecurrence", typeof(AbsoluteMonthlyRecurrencePatternType))]
		[XmlElement("AbsoluteYearlyRecurrence", typeof(AbsoluteYearlyRecurrencePatternType))]
		[XmlElement("DailyRecurrence", typeof(DailyRecurrencePatternType))]
		[XmlElement("RelativeMonthlyRecurrence", typeof(RelativeMonthlyRecurrencePatternType))]
		[XmlElement("RelativeYearlyRecurrence", typeof(RelativeYearlyRecurrencePatternType))]
		[XmlElement("WeeklyRecurrence", typeof(WeeklyRecurrencePatternType))]
		public RecurrencePatternBaseType Item
		{
			get { return itemField; }
			set { itemField = value; }
		}

		/// <remarks/>
		[XmlElement("EndDateRecurrence", typeof(EndDateRecurrenceRangeType))]
		[XmlElement("NoEndRecurrence", typeof(NoEndRecurrenceRangeType))]
		[XmlElement("NumberedRecurrence", typeof(NumberedRecurrenceRangeType))]
		public RecurrenceRangeBaseType Item1
		{
			get { return item1Field; }
			set { item1Field = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class AbsoluteMonthlyRecurrencePatternType : IntervalRecurrencePatternBaseType
	{
		private int dayOfMonthField;

		/// <remarks/>
		public int DayOfMonth
		{
			get { return dayOfMonthField; }
			set { dayOfMonthField = value; }
		}
	}

	/// <remarks/>
	[XmlInclude(typeof(DailyRecurrencePatternType))]
	[XmlInclude(typeof(WeeklyRecurrencePatternType))]
	[XmlInclude(typeof(AbsoluteMonthlyRecurrencePatternType))]
	[XmlInclude(typeof(RelativeMonthlyRecurrencePatternType))]
	[XmlInclude(typeof(RegeneratingPatternBaseType))]
	[XmlInclude(typeof(YearlyRegeneratingPatternType))]
	[XmlInclude(typeof(MonthlyRegeneratingPatternType))]
	[XmlInclude(typeof(WeeklyRegeneratingPatternType))]
	[XmlInclude(typeof(DailyRegeneratingPatternType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public abstract partial class IntervalRecurrencePatternBaseType : RecurrencePatternBaseType
	{
		private int intervalField;

		/// <remarks/>
		public int Interval
		{
			get { return intervalField; }
			set { intervalField = value; }
		}
	}

	/// <remarks/>
	[XmlInclude(typeof(AbsoluteYearlyRecurrencePatternType))]
	[XmlInclude(typeof(RelativeYearlyRecurrencePatternType))]
	[XmlInclude(typeof(IntervalRecurrencePatternBaseType))]
	[XmlInclude(typeof(DailyRecurrencePatternType))]
	[XmlInclude(typeof(WeeklyRecurrencePatternType))]
	[XmlInclude(typeof(AbsoluteMonthlyRecurrencePatternType))]
	[XmlInclude(typeof(RelativeMonthlyRecurrencePatternType))]
	[XmlInclude(typeof(RegeneratingPatternBaseType))]
	[XmlInclude(typeof(YearlyRegeneratingPatternType))]
	[XmlInclude(typeof(MonthlyRegeneratingPatternType))]
	[XmlInclude(typeof(WeeklyRegeneratingPatternType))]
	[XmlInclude(typeof(DailyRegeneratingPatternType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public abstract partial class RecurrencePatternBaseType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class AbsoluteYearlyRecurrencePatternType : RecurrencePatternBaseType
	{
		private int dayOfMonthField;

		private MonthNamesType monthField;

		/// <remarks/>
		public int DayOfMonth
		{
			get { return dayOfMonthField; }
			set { dayOfMonthField = value; }
		}

		/// <remarks/>
		public MonthNamesType Month
		{
			get { return monthField; }
			set { monthField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum MonthNamesType
	{
		/// <remarks/>
		January,

		/// <remarks/>
		February,

		/// <remarks/>
		March,

		/// <remarks/>
		April,

		/// <remarks/>
		May,

		/// <remarks/>
		June,

		/// <remarks/>
		July,

		/// <remarks/>
		August,

		/// <remarks/>
		September,

		/// <remarks/>
		October,

		/// <remarks/>
		November,

		/// <remarks/>
		December,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class RelativeYearlyRecurrencePatternType : RecurrencePatternBaseType
	{
		private string daysOfWeekField;

		private DayOfWeekIndexType dayOfWeekIndexField;

		private MonthNamesType monthField;

		/// <remarks/>
		public string DaysOfWeek
		{
			get { return daysOfWeekField; }
			set { daysOfWeekField = value; }
		}

		/// <remarks/>
		public DayOfWeekIndexType DayOfWeekIndex
		{
			get { return dayOfWeekIndexField; }
			set { dayOfWeekIndexField = value; }
		}

		/// <remarks/>
		public MonthNamesType Month
		{
			get { return monthField; }
			set { monthField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum DayOfWeekIndexType
	{
		/// <remarks/>
		First,

		/// <remarks/>
		Second,

		/// <remarks/>
		Third,

		/// <remarks/>
		Fourth,

		/// <remarks/>
		Last,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class DailyRecurrencePatternType : IntervalRecurrencePatternBaseType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class WeeklyRecurrencePatternType : IntervalRecurrencePatternBaseType
	{
		private string daysOfWeekField;

		/// <remarks/>
		public string DaysOfWeek
		{
			get { return daysOfWeekField; }
			set { daysOfWeekField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class RelativeMonthlyRecurrencePatternType : IntervalRecurrencePatternBaseType
	{
		private DayOfWeekType daysOfWeekField;

		private DayOfWeekIndexType dayOfWeekIndexField;

		/// <remarks/>
		public DayOfWeekType DaysOfWeek
		{
			get { return daysOfWeekField; }
			set { daysOfWeekField = value; }
		}

		/// <remarks/>
		public DayOfWeekIndexType DayOfWeekIndex
		{
			get { return dayOfWeekIndexField; }
			set { dayOfWeekIndexField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum DayOfWeekType
	{
		/// <remarks/>
		Sunday,

		/// <remarks/>
		Monday,

		/// <remarks/>
		Tuesday,

		/// <remarks/>
		Wednesday,

		/// <remarks/>
		Thursday,

		/// <remarks/>
		Friday,

		/// <remarks/>
		Saturday,

		/// <remarks/>
		Day,

		/// <remarks/>
		Weekday,

		/// <remarks/>
		WeekendDay,
	}

	/// <remarks/>
	[XmlInclude(typeof(YearlyRegeneratingPatternType))]
	[XmlInclude(typeof(MonthlyRegeneratingPatternType))]
	[XmlInclude(typeof(WeeklyRegeneratingPatternType))]
	[XmlInclude(typeof(DailyRegeneratingPatternType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public abstract partial class RegeneratingPatternBaseType : IntervalRecurrencePatternBaseType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class YearlyRegeneratingPatternType : RegeneratingPatternBaseType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class MonthlyRegeneratingPatternType : RegeneratingPatternBaseType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class WeeklyRegeneratingPatternType : RegeneratingPatternBaseType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class DailyRegeneratingPatternType : RegeneratingPatternBaseType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class EndDateRecurrenceRangeType : RecurrenceRangeBaseType
	{
		private DateTime endDateField;

		/// <remarks/>
		[XmlElement(DataType = "date")]
		public DateTime EndDate
		{
			get { return endDateField; }
			set { endDateField = value; }
		}
	}

	/// <remarks/>
	[XmlInclude(typeof(NumberedRecurrenceRangeType))]
	[XmlInclude(typeof(EndDateRecurrenceRangeType))]
	[XmlInclude(typeof(NoEndRecurrenceRangeType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public abstract partial class RecurrenceRangeBaseType
	{
		private DateTime startDateField;

		/// <remarks/>
		[XmlElement(DataType = "date")]
		public DateTime StartDate
		{
			get { return startDateField; }
			set { startDateField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class NumberedRecurrenceRangeType : RecurrenceRangeBaseType
	{
		private int numberOfOccurrencesField;

		/// <remarks/>
		public int NumberOfOccurrences
		{
			get { return numberOfOccurrencesField; }
			set { numberOfOccurrencesField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class NoEndRecurrenceRangeType : RecurrenceRangeBaseType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class OccurrenceInfoType
	{
		private ItemIdType itemIdField;

		private DateTime startField;

		private DateTime endField;

		private DateTime originalStartField;

		/// <remarks/>
		public ItemIdType ItemId
		{
			get { return itemIdField; }
			set { itemIdField = value; }
		}

		/// <remarks/>
		public DateTime Start
		{
			get { return startField; }
			set { startField = value; }
		}

		/// <remarks/>
		public DateTime End
		{
			get { return endField; }
			set { endField = value; }
		}

		/// <remarks/>
		public DateTime OriginalStart
		{
			get { return originalStartField; }
			set { originalStartField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class DeletedOccurrenceInfoType
	{
		private DateTime startField;

		/// <remarks/>
		public DateTime Start
		{
			get { return startField; }
			set { startField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class TimeZoneType
	{
		private string baseOffsetField;

		private TimeChangeType standardField;

		private TimeChangeType daylightField;

		private string timeZoneNameField;

		/// <remarks/>
		[XmlElement(DataType = "duration")]
		public string BaseOffset
		{
			get { return baseOffsetField; }
			set { baseOffsetField = value; }
		}

		/// <remarks/>
		public TimeChangeType Standard
		{
			get { return standardField; }
			set { standardField = value; }
		}

		/// <remarks/>
		public TimeChangeType Daylight
		{
			get { return daylightField; }
			set { daylightField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public string TimeZoneName
		{
			get { return timeZoneNameField; }
			set { timeZoneNameField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class TimeChangeType
	{
		private string offsetField;

		private object itemField;

		private DateTime timeField;

		private string timeZoneNameField;

		/// <remarks/>
		[XmlElement(DataType = "duration")]
		public string Offset
		{
			get { return offsetField; }
			set { offsetField = value; }
		}

		/// <remarks/>
		[XmlElement("AbsoluteDate", typeof(DateTime), DataType = "date")]
		[XmlElement("RelativeYearlyRecurrence", typeof(RelativeYearlyRecurrencePatternType))]
		public object Item
		{
			get { return itemField; }
			set { itemField = value; }
		}

		/// <remarks/>
		[XmlElement(DataType = "time")]
		public DateTime Time
		{
			get { return timeField; }
			set { timeField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public string TimeZoneName
		{
			get { return timeZoneNameField; }
			set { timeZoneNameField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class PostItemType : ItemType
	{
		private byte[] conversationIndexField;

		private string conversationTopicField;

		private SingleRecipientType fromField;

		private string internetMessageIdField;

		private bool isReadField;

		private bool isReadFieldSpecified;

		private DateTime postedTimeField;

		private bool postedTimeFieldSpecified;

		private string referencesField;

		private SingleRecipientType senderField;

		/// <remarks/>
		[XmlElement(DataType = "base64Binary")]
		public byte[] ConversationIndex
		{
			get { return conversationIndexField; }
			set { conversationIndexField = value; }
		}

		/// <remarks/>
		public string ConversationTopic
		{
			get { return conversationTopicField; }
			set { conversationTopicField = value; }
		}

		/// <remarks/>
		public SingleRecipientType From
		{
			get { return fromField; }
			set { fromField = value; }
		}

		/// <remarks/>
		public string InternetMessageId
		{
			get { return internetMessageIdField; }
			set { internetMessageIdField = value; }
		}

		/// <remarks/>
		public bool IsRead
		{
			get { return isReadField; }
			set { isReadField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IsReadSpecified
		{
			get { return isReadFieldSpecified; }
			set { isReadFieldSpecified = value; }
		}

		/// <remarks/>
		public DateTime PostedTime
		{
			get { return postedTimeField; }
			set { postedTimeField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool PostedTimeSpecified
		{
			get { return postedTimeFieldSpecified; }
			set { postedTimeFieldSpecified = value; }
		}

		/// <remarks/>
		public string References
		{
			get { return referencesField; }
			set { referencesField = value; }
		}

		/// <remarks/>
		public SingleRecipientType Sender
		{
			get { return senderField; }
			set { senderField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class TaskType : ItemType
	{
		private int actualWorkField;

		private bool actualWorkFieldSpecified;

		private DateTime assignedTimeField;

		private bool assignedTimeFieldSpecified;

		private string billingInformationField;

		private int changeCountField;

		private bool changeCountFieldSpecified;

		private string[] companiesField;

		private DateTime completeDateField;

		private bool completeDateFieldSpecified;

		private string[] contactsField;

		private TaskDelegateStateType delegationStateField;

		private bool delegationStateFieldSpecified;

		private string delegatorField;

		private DateTime dueDateField;

		private bool dueDateFieldSpecified;

		private int isAssignmentEditableField;

		private bool isAssignmentEditableFieldSpecified;

		private bool isCompleteField;

		private bool isCompleteFieldSpecified;

		private bool isRecurringField;

		private bool isRecurringFieldSpecified;

		private bool isTeamTaskField;

		private bool isTeamTaskFieldSpecified;

		private string mileageField;

		private string ownerField;

		private double percentCompleteField;

		private bool percentCompleteFieldSpecified;

		private TaskRecurrenceType recurrenceField;

		private DateTime startDateField;

		private bool startDateFieldSpecified;

		private TaskStatusType statusField;

		private bool statusFieldSpecified;

		private string statusDescriptionField;

		private int totalWorkField;

		private bool totalWorkFieldSpecified;

		/// <remarks/>
		public int ActualWork
		{
			get { return actualWorkField; }
			set { actualWorkField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool ActualWorkSpecified
		{
			get { return actualWorkFieldSpecified; }
			set { actualWorkFieldSpecified = value; }
		}

		/// <remarks/>
		public DateTime AssignedTime
		{
			get { return assignedTimeField; }
			set { assignedTimeField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool AssignedTimeSpecified
		{
			get { return assignedTimeFieldSpecified; }
			set { assignedTimeFieldSpecified = value; }
		}

		/// <remarks/>
		public string BillingInformation
		{
			get { return billingInformationField; }
			set { billingInformationField = value; }
		}

		/// <remarks/>
		public int ChangeCount
		{
			get { return changeCountField; }
			set { changeCountField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool ChangeCountSpecified
		{
			get { return changeCountFieldSpecified; }
			set { changeCountFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlArrayItem("String", IsNullable = false)]
		public string[] Companies
		{
			get { return companiesField; }
			set { companiesField = value; }
		}

		/// <remarks/>
		public DateTime CompleteDate
		{
			get { return completeDateField; }
			set { completeDateField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool CompleteDateSpecified
		{
			get { return completeDateFieldSpecified; }
			set { completeDateFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlArrayItem("String", IsNullable = false)]
		public string[] Contacts
		{
			get { return contactsField; }
			set { contactsField = value; }
		}

		/// <remarks/>
		public TaskDelegateStateType DelegationState
		{
			get { return delegationStateField; }
			set { delegationStateField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool DelegationStateSpecified
		{
			get { return delegationStateFieldSpecified; }
			set { delegationStateFieldSpecified = value; }
		}

		/// <remarks/>
		public string Delegator
		{
			get { return delegatorField; }
			set { delegatorField = value; }
		}

		/// <remarks/>
		public DateTime DueDate
		{
			get { return dueDateField; }
			set { dueDateField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool DueDateSpecified
		{
			get { return dueDateFieldSpecified; }
			set { dueDateFieldSpecified = value; }
		}

		/// <remarks/>
		public int IsAssignmentEditable
		{
			get { return isAssignmentEditableField; }
			set { isAssignmentEditableField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IsAssignmentEditableSpecified
		{
			get { return isAssignmentEditableFieldSpecified; }
			set { isAssignmentEditableFieldSpecified = value; }
		}

		/// <remarks/>
		public bool IsComplete
		{
			get { return isCompleteField; }
			set { isCompleteField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IsCompleteSpecified
		{
			get { return isCompleteFieldSpecified; }
			set { isCompleteFieldSpecified = value; }
		}

		/// <remarks/>
		public bool IsRecurring
		{
			get { return isRecurringField; }
			set { isRecurringField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IsRecurringSpecified
		{
			get { return isRecurringFieldSpecified; }
			set { isRecurringFieldSpecified = value; }
		}

		/// <remarks/>
		public bool IsTeamTask
		{
			get { return isTeamTaskField; }
			set { isTeamTaskField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IsTeamTaskSpecified
		{
			get { return isTeamTaskFieldSpecified; }
			set { isTeamTaskFieldSpecified = value; }
		}

		/// <remarks/>
		public string Mileage
		{
			get { return mileageField; }
			set { mileageField = value; }
		}

		/// <remarks/>
		public string Owner
		{
			get { return ownerField; }
			set { ownerField = value; }
		}

		/// <remarks/>
		public double PercentComplete
		{
			get { return percentCompleteField; }
			set { percentCompleteField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool PercentCompleteSpecified
		{
			get { return percentCompleteFieldSpecified; }
			set { percentCompleteFieldSpecified = value; }
		}

		/// <remarks/>
		public TaskRecurrenceType Recurrence
		{
			get { return recurrenceField; }
			set { recurrenceField = value; }
		}

		/// <remarks/>
		public DateTime StartDate
		{
			get { return startDateField; }
			set { startDateField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool StartDateSpecified
		{
			get { return startDateFieldSpecified; }
			set { startDateFieldSpecified = value; }
		}

		/// <remarks/>
		public TaskStatusType Status
		{
			get { return statusField; }
			set { statusField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool StatusSpecified
		{
			get { return statusFieldSpecified; }
			set { statusFieldSpecified = value; }
		}

		/// <remarks/>
		public string StatusDescription
		{
			get { return statusDescriptionField; }
			set { statusDescriptionField = value; }
		}

		/// <remarks/>
		public int TotalWork
		{
			get { return totalWorkField; }
			set { totalWorkField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool TotalWorkSpecified
		{
			get { return totalWorkFieldSpecified; }
			set { totalWorkFieldSpecified = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum TaskDelegateStateType
	{
		/// <remarks/>
		NoMatch,

		/// <remarks/>
		OwnNew,

		/// <remarks/>
		Owned,

		/// <remarks/>
		Accepted,

		/// <remarks/>
		Declined,

		/// <remarks/>
		Max,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class TaskRecurrenceType
	{
		private RecurrencePatternBaseType itemField;

		private RecurrenceRangeBaseType item1Field;

		/// <remarks/>
		[XmlElement("AbsoluteMonthlyRecurrence", typeof(AbsoluteMonthlyRecurrencePatternType))]
		[XmlElement("AbsoluteYearlyRecurrence", typeof(AbsoluteYearlyRecurrencePatternType))]
		[XmlElement("DailyRecurrence", typeof(DailyRecurrencePatternType))]
		[XmlElement("DailyRegeneration", typeof(DailyRegeneratingPatternType))]
		[XmlElement("MonthlyRegeneration", typeof(MonthlyRegeneratingPatternType))]
		[XmlElement("RelativeMonthlyRecurrence", typeof(RelativeMonthlyRecurrencePatternType))]
		[XmlElement("RelativeYearlyRecurrence", typeof(RelativeYearlyRecurrencePatternType))]
		[XmlElement("WeeklyRecurrence", typeof(WeeklyRecurrencePatternType))]
		[XmlElement("WeeklyRegeneration", typeof(WeeklyRegeneratingPatternType))]
		[XmlElement("YearlyRegeneration", typeof(YearlyRegeneratingPatternType))]
		public RecurrencePatternBaseType Item
		{
			get { return itemField; }
			set { itemField = value; }
		}

		/// <remarks/>
		[XmlElement("EndDateRecurrence", typeof(EndDateRecurrenceRangeType))]
		[XmlElement("NoEndRecurrence", typeof(NoEndRecurrenceRangeType))]
		[XmlElement("NumberedRecurrence", typeof(NumberedRecurrenceRangeType))]
		public RecurrenceRangeBaseType Item1
		{
			get { return item1Field; }
			set { item1Field = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum TaskStatusType
	{
		/// <remarks/>
		NotStarted,

		/// <remarks/>
		InProgress,

		/// <remarks/>
		Completed,

		/// <remarks/>
		WaitingOnOthers,

		/// <remarks/>
		Deferred,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum ImportanceChoicesType
	{
		/// <remarks/>
		Low,

		/// <remarks/>
		Normal,

		/// <remarks/>
		High,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class InternetHeaderType
	{
		private string headerNameField;

		private string valueField;

		/// <remarks/>
		[XmlAttribute()]
		public string HeaderName
		{
			get { return headerNameField; }
			set { headerNameField = value; }
		}

		/// <remarks/>
		[XmlText()]
		public string Value
		{
			get { return valueField; }
			set { valueField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class CancelCalendarItemType : SmartResponseType
	{
	}

	/// <remarks/>
	[XmlInclude(typeof(CancelCalendarItemType))]
	[XmlInclude(typeof(ForwardItemType))]
	[XmlInclude(typeof(ReplyAllToItemType))]
	[XmlInclude(typeof(ReplyToItemType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class SmartResponseType : SmartResponseBaseType
	{
		private BodyType newBodyContentField;

		/// <remarks/>
		public BodyType NewBodyContent
		{
			get { return newBodyContentField; }
			set { newBodyContentField = value; }
		}
	}

	/// <remarks/>
	[XmlInclude(typeof(SmartResponseType))]
	[XmlInclude(typeof(CancelCalendarItemType))]
	[XmlInclude(typeof(ForwardItemType))]
	[XmlInclude(typeof(ReplyAllToItemType))]
	[XmlInclude(typeof(ReplyToItemType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class SmartResponseBaseType : ResponseObjectType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class ForwardItemType : SmartResponseType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class ReplyAllToItemType : SmartResponseType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class ReplyToItemType : SmartResponseType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class DeclineItemType : WellKnownResponseObjectType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class PostReplyItemType : PostReplyItemBaseType
	{
		private BodyType newBodyContentField;

		/// <remarks/>
		public BodyType NewBodyContent
		{
			get { return newBodyContentField; }
			set { newBodyContentField = value; }
		}
	}

	/// <remarks/>
	[XmlInclude(typeof(PostReplyItemType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class PostReplyItemBaseType : ResponseObjectType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class RemoveItemType : ResponseObjectType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class SuppressReadReceiptType : ReferenceItemResponseType
	{
	}

	/// <remarks/>
	[XmlInclude(typeof(SuppressReadReceiptType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class ReferenceItemResponseType : ResponseObjectType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class TentativelyAcceptItemType : WellKnownResponseObjectType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class ExtendedPropertyType
	{
		private PathToExtendedFieldType extendedFieldURIField;

		private object itemField;

		/// <remarks/>
		public PathToExtendedFieldType ExtendedFieldURI
		{
			get { return extendedFieldURIField; }
			set { extendedFieldURIField = value; }
		}

		/// <remarks/>
		[XmlElement("Value", typeof(string))]
		[XmlElement("Values", typeof(NonEmptyArrayOfPropertyValuesType))]
		public object Item
		{
			get { return itemField; }
			set { itemField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class PathToExtendedFieldType : BasePathToElementType
	{
		private DistinguishedPropertySetType distinguishedPropertySetIdField;

		private bool distinguishedPropertySetIdFieldSpecified;

		private string propertySetIdField;

		private string propertyTagField;

		private string propertyNameField;

		private int propertyIdField;

		private bool propertyIdFieldSpecified;

		private MapiPropertyTypeType propertyTypeField;

		/// <remarks/>
		[XmlAttribute()]
		public DistinguishedPropertySetType DistinguishedPropertySetId
		{
			get { return distinguishedPropertySetIdField; }
			set { distinguishedPropertySetIdField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool DistinguishedPropertySetIdSpecified
		{
			get { return distinguishedPropertySetIdFieldSpecified; }
			set { distinguishedPropertySetIdFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public string PropertySetId
		{
			get { return propertySetIdField; }
			set { propertySetIdField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public string PropertyTag
		{
			get { return propertyTagField; }
			set { propertyTagField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public string PropertyName
		{
			get { return propertyNameField; }
			set { propertyNameField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public int PropertyId
		{
			get { return propertyIdField; }
			set { propertyIdField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool PropertyIdSpecified
		{
			get { return propertyIdFieldSpecified; }
			set { propertyIdFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public MapiPropertyTypeType PropertyType
		{
			get { return propertyTypeField; }
			set { propertyTypeField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum DistinguishedPropertySetType
	{
		/// <remarks/>
		Meeting,

		/// <remarks/>
		Appointment,

		/// <remarks/>
		Common,

		/// <remarks/>
		PublicStrings,

		/// <remarks/>
		Address,

		/// <remarks/>
		InternetHeaders,

		/// <remarks/>
		CalendarAssistant,

		/// <remarks/>
		UnifiedMessaging,

		/// <remarks/>
		Task,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum MapiPropertyTypeType
	{
		/// <remarks/>
		ApplicationTime,

		/// <remarks/>
		ApplicationTimeArray,

		/// <remarks/>
		Binary,

		/// <remarks/>
		BinaryArray,

		/// <remarks/>
		Boolean,

		/// <remarks/>
		CLSID,

		/// <remarks/>
		CLSIDArray,

		/// <remarks/>
		Currency,

		/// <remarks/>
		CurrencyArray,

		/// <remarks/>
		Double,

		/// <remarks/>
		DoubleArray,

		/// <remarks/>
		Error,

		/// <remarks/>
		Float,

		/// <remarks/>
		FloatArray,

		/// <remarks/>
		Integer,

		/// <remarks/>
		IntegerArray,

		/// <remarks/>
		Long,

		/// <remarks/>
		LongArray,

		/// <remarks/>
		Null,

		/// <remarks/>
		Object,

		/// <remarks/>
		ObjectArray,

		/// <remarks/>
		Short,

		/// <remarks/>
		ShortArray,

		/// <remarks/>
		SystemTime,

		/// <remarks/>
		SystemTimeArray,

		/// <remarks/>
		String,

		/// <remarks/>
		StringArray,
	}

	/// <remarks/>
	[XmlInclude(typeof(PathToExtendedFieldType))]
	[XmlInclude(typeof(PathToExceptionFieldType))]
	[XmlInclude(typeof(PathToIndexedFieldType))]
	[XmlInclude(typeof(PathToUnindexedFieldType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public abstract partial class BasePathToElementType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class PathToExceptionFieldType : BasePathToElementType
	{
		private ExceptionPropertyURIType fieldURIField;

		/// <remarks/>
		[XmlAttribute()]
		public ExceptionPropertyURIType FieldURI
		{
			get { return fieldURIField; }
			set { fieldURIField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum ExceptionPropertyURIType
	{
		/// <remarks/>
		[XmlEnum("attachment:Name")]
		attachmentName,

		/// <remarks/>
		[XmlEnum("attachment:ContentType")]
		attachmentContentType,

		/// <remarks/>
		[XmlEnum("attachment:Content")]
		attachmentContent,

		/// <remarks/>
		[XmlEnum("recurrence:Month")]
		recurrenceMonth,

		/// <remarks/>
		[XmlEnum("recurrence:DayOfWeekIndex")]
		recurrenceDayOfWeekIndex,

		/// <remarks/>
		[XmlEnum("recurrence:DaysOfWeek")]
		recurrenceDaysOfWeek,

		/// <remarks/>
		[XmlEnum("recurrence:DayOfMonth")]
		recurrenceDayOfMonth,

		/// <remarks/>
		[XmlEnum("recurrence:Interval")]
		recurrenceInterval,

		/// <remarks/>
		[XmlEnum("recurrence:NumberOfOccurrences")]
		recurrenceNumberOfOccurrences,

		/// <remarks/>
		[XmlEnum("timezone:Offset")]
		timezoneOffset,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class PathToIndexedFieldType : BasePathToElementType
	{
		private DictionaryURIType fieldURIField;

		private string fieldIndexField;

		/// <remarks/>
		[XmlAttribute()]
		public DictionaryURIType FieldURI
		{
			get { return fieldURIField; }
			set { fieldURIField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public string FieldIndex
		{
			get { return fieldIndexField; }
			set { fieldIndexField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum DictionaryURIType
	{
		/// <remarks/>
		[XmlEnum("item:InternetMessageHeader")]
		itemInternetMessageHeader,

		/// <remarks/>
		[XmlEnum("contacts:ImAddress")]
		contactsImAddress,

		/// <remarks/>
		[XmlEnum("contacts:PhysicalAddress:Street")]
		contactsPhysicalAddressStreet,

		/// <remarks/>
		[XmlEnum("contacts:PhysicalAddress:City")]
		contactsPhysicalAddressCity,

		/// <remarks/>
		[XmlEnum("contacts:PhysicalAddress:State")]
		contactsPhysicalAddressState,

		/// <remarks/>
		[XmlEnum("contacts:PhysicalAddress:CountryOrRegion")]
		contactsPhysicalAddressCountryOrRegion,

		/// <remarks/>
		[XmlEnum("contacts:PhysicalAddress:PostalCode")]
		contactsPhysicalAddressPostalCode,

		/// <remarks/>
		[XmlEnum("contacts:PhoneNumber")]
		contactsPhoneNumber,

		/// <remarks/>
		[XmlEnum("contacts:EmailAddress")]
		contactsEmailAddress,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class PathToUnindexedFieldType : BasePathToElementType
	{
		private UnindexedFieldURIType fieldURIField;

		/// <remarks/>
		[XmlAttribute()]
		public UnindexedFieldURIType FieldURI
		{
			get { return fieldURIField; }
			set { fieldURIField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum UnindexedFieldURIType
	{
		/// <remarks/>
		[XmlEnum("folder:FolderId")]
		folderFolderId,

		/// <remarks/>
		[XmlEnum("folder:ParentFolderId")]
		folderParentFolderId,

		/// <remarks/>
		[XmlEnum("folder:DisplayName")]
		folderDisplayName,

		/// <remarks/>
		[XmlEnum("folder:UnreadCount")]
		folderUnreadCount,

		/// <remarks/>
		[XmlEnum("folder:TotalCount")]
		folderTotalCount,

		/// <remarks/>
		[XmlEnum("folder:ChildFolderCount")]
		folderChildFolderCount,

		/// <remarks/>
		[XmlEnum("folder:FolderClass")]
		folderFolderClass,

		/// <remarks/>
		[XmlEnum("folder:SearchParameters")]
		folderSearchParameters,

		/// <remarks/>
		[XmlEnum("folder:ManagedFolderInformation")]
		folderManagedFolderInformation,

		/// <remarks/>
		[XmlEnum("folder:PermissionSet")]
		folderPermissionSet,

		/// <remarks/>
		[XmlEnum("folder:EffectiveRights")]
		folderEffectiveRights,

		/// <remarks/>
		[XmlEnum("item:ItemId")]
		itemItemId,

		/// <remarks/>
		[XmlEnum("item:ParentFolderId")]
		itemParentFolderId,

		/// <remarks/>
		[XmlEnum("item:ItemClass")]
		itemItemClass,

		/// <remarks/>
		[XmlEnum("item:MimeContent")]
		itemMimeContent,

		/// <remarks/>
		[XmlEnum("item:Attachments")]
		itemAttachments,

		/// <remarks/>
		[XmlEnum("item:Subject")]
		itemSubject,

		/// <remarks/>
		[XmlEnum("item:DateTimeReceived")]
		itemDateTimeReceived,

		/// <remarks/>
		[XmlEnum("item:Size")]
		itemSize,

		/// <remarks/>
		[XmlEnum("item:Categories")]
		itemCategories,

		/// <remarks/>
		[XmlEnum("item:HasAttachments")]
		itemHasAttachments,

		/// <remarks/>
		[XmlEnum("item:Importance")]
		itemImportance,

		/// <remarks/>
		[XmlEnum("item:InReplyTo")]
		itemInReplyTo,

		/// <remarks/>
		[XmlEnum("item:InternetMessageHeaders")]
		itemInternetMessageHeaders,

		/// <remarks/>
		[XmlEnum("item:IsDraft")]
		itemIsDraft,

		/// <remarks/>
		[XmlEnum("item:IsFromMe")]
		itemIsFromMe,

		/// <remarks/>
		[XmlEnum("item:IsResend")]
		itemIsResend,

		/// <remarks/>
		[XmlEnum("item:IsSubmitted")]
		itemIsSubmitted,

		/// <remarks/>
		[XmlEnum("item:IsUnmodified")]
		itemIsUnmodified,

		/// <remarks/>
		[XmlEnum("item:DateTimeSent")]
		itemDateTimeSent,

		/// <remarks/>
		[XmlEnum("item:DateTimeCreated")]
		itemDateTimeCreated,

		/// <remarks/>
		[XmlEnum("item:Body")]
		itemBody,

		/// <remarks/>
		[XmlEnum("item:ResponseObjects")]
		itemResponseObjects,

		/// <remarks/>
		[XmlEnum("item:Sensitivity")]
		itemSensitivity,

		/// <remarks/>
		[XmlEnum("item:ReminderDueBy")]
		itemReminderDueBy,

		/// <remarks/>
		[XmlEnum("item:ReminderIsSet")]
		itemReminderIsSet,

		/// <remarks/>
		[XmlEnum("item:ReminderMinutesBeforeStart")]
		itemReminderMinutesBeforeStart,

		/// <remarks/>
		[XmlEnum("item:DisplayTo")]
		itemDisplayTo,

		/// <remarks/>
		[XmlEnum("item:DisplayCc")]
		itemDisplayCc,

		/// <remarks/>
		[XmlEnum("item:Culture")]
		itemCulture,

		/// <remarks/>
		[XmlEnum("item:EffectiveRights")]
		itemEffectiveRights,

		/// <remarks/>
		[XmlEnum("item:LastModifiedName")]
		itemLastModifiedName,

		/// <remarks/>
		[XmlEnum("item:LastModifiedTime")]
		itemLastModifiedTime,

		/// <remarks/>
		[XmlEnum("message:ConversationIndex")]
		messageConversationIndex,

		/// <remarks/>
		[XmlEnum("message:ConversationTopic")]
		messageConversationTopic,

		/// <remarks/>
		[XmlEnum("message:InternetMessageId")]
		messageInternetMessageId,

		/// <remarks/>
		[XmlEnum("message:IsRead")]
		messageIsRead,

		/// <remarks/>
		[XmlEnum("message:IsResponseRequested")]
		messageIsResponseRequested,

		/// <remarks/>
		[XmlEnum("message:IsReadReceiptRequested")]
		messageIsReadReceiptRequested,

		/// <remarks/>
		[XmlEnum("message:IsDeliveryReceiptRequested")]
		messageIsDeliveryReceiptRequested,

		/// <remarks/>
		[XmlEnum("message:ReceivedBy")]
		messageReceivedBy,

		/// <remarks/>
		[XmlEnum("message:ReceivedRepresenting")]
		messageReceivedRepresenting,

		/// <remarks/>
		[XmlEnum("message:References")]
		messageReferences,

		/// <remarks/>
		[XmlEnum("message:ReplyTo")]
		messageReplyTo,

		/// <remarks/>
		[XmlEnum("message:From")]
		messageFrom,

		/// <remarks/>
		[XmlEnum("message:Sender")]
		messageSender,

		/// <remarks/>
		[XmlEnum("message:ToRecipients")]
		messageToRecipients,

		/// <remarks/>
		[XmlEnum("message:CcRecipients")]
		messageCcRecipients,

		/// <remarks/>
		[XmlEnum("message:BccRecipients")]
		messageBccRecipients,

		/// <remarks/>
		[XmlEnum("meeting:AssociatedCalendarItemId")]
		meetingAssociatedCalendarItemId,

		/// <remarks/>
		[XmlEnum("meeting:IsDelegated")]
		meetingIsDelegated,

		/// <remarks/>
		[XmlEnum("meeting:IsOutOfDate")]
		meetingIsOutOfDate,

		/// <remarks/>
		[XmlEnum("meeting:HasBeenProcessed")]
		meetingHasBeenProcessed,

		/// <remarks/>
		[XmlEnum("meeting:ResponseType")]
		meetingResponseType,

		/// <remarks/>
		[XmlEnum("meetingRequest:MeetingRequestType")]
		meetingRequestMeetingRequestType,

		/// <remarks/>
		[XmlEnum("meetingRequest:IntendedFreeBusyStatus")]
		meetingRequestIntendedFreeBusyStatus,

		/// <remarks/>
		[XmlEnum("calendar:Start")]
		calendarStart,

		/// <remarks/>
		[XmlEnum("calendar:End")]
		calendarEnd,

		/// <remarks/>
		[XmlEnum("calendar:OriginalStart")]
		calendarOriginalStart,

		/// <remarks/>
		[XmlEnum("calendar:IsAllDayEvent")]
		calendarIsAllDayEvent,

		/// <remarks/>
		[XmlEnum("calendar:LegacyFreeBusyStatus")]
		calendarLegacyFreeBusyStatus,

		/// <remarks/>
		[XmlEnum("calendar:Location")]
		calendarLocation,

		/// <remarks/>
		[XmlEnum("calendar:When")]
		calendarWhen,

		/// <remarks/>
		[XmlEnum("calendar:IsMeeting")]
		calendarIsMeeting,

		/// <remarks/>
		[XmlEnum("calendar:IsCancelled")]
		calendarIsCancelled,

		/// <remarks/>
		[XmlEnum("calendar:IsRecurring")]
		calendarIsRecurring,

		/// <remarks/>
		[XmlEnum("calendar:MeetingRequestWasSent")]
		calendarMeetingRequestWasSent,

		/// <remarks/>
		[XmlEnum("calendar:IsResponseRequested")]
		calendarIsResponseRequested,

		/// <remarks/>
		[XmlEnum("calendar:CalendarItemType")]
		calendarCalendarItemType,

		/// <remarks/>
		[XmlEnum("calendar:MyResponseType")]
		calendarMyResponseType,

		/// <remarks/>
		[XmlEnum("calendar:Organizer")]
		calendarOrganizer,

		/// <remarks/>
		[XmlEnum("calendar:RequiredAttendees")]
		calendarRequiredAttendees,

		/// <remarks/>
		[XmlEnum("calendar:OptionalAttendees")]
		calendarOptionalAttendees,

		/// <remarks/>
		[XmlEnum("calendar:Resources")]
		calendarResources,

		/// <remarks/>
		[XmlEnum("calendar:ConflictingMeetingCount")]
		calendarConflictingMeetingCount,

		/// <remarks/>
		[XmlEnum("calendar:AdjacentMeetingCount")]
		calendarAdjacentMeetingCount,

		/// <remarks/>
		[XmlEnum("calendar:ConflictingMeetings")]
		calendarConflictingMeetings,

		/// <remarks/>
		[XmlEnum("calendar:AdjacentMeetings")]
		calendarAdjacentMeetings,

		/// <remarks/>
		[XmlEnum("calendar:Duration")]
		calendarDuration,

		/// <remarks/>
		[XmlEnum("calendar:TimeZone")]
		calendarTimeZone,

		/// <remarks/>
		[XmlEnum("calendar:AppointmentReplyTime")]
		calendarAppointmentReplyTime,

		/// <remarks/>
		[XmlEnum("calendar:AppointmentSequenceNumber")]
		calendarAppointmentSequenceNumber,

		/// <remarks/>
		[XmlEnum("calendar:AppointmentState")]
		calendarAppointmentState,

		/// <remarks/>
		[XmlEnum("calendar:Recurrence")]
		calendarRecurrence,

		/// <remarks/>
		[XmlEnum("calendar:FirstOccurrence")]
		calendarFirstOccurrence,

		/// <remarks/>
		[XmlEnum("calendar:LastOccurrence")]
		calendarLastOccurrence,

		/// <remarks/>
		[XmlEnum("calendar:ModifiedOccurrences")]
		calendarModifiedOccurrences,

		/// <remarks/>
		[XmlEnum("calendar:DeletedOccurrences")]
		calendarDeletedOccurrences,

		/// <remarks/>
		[XmlEnum("calendar:MeetingTimeZone")]
		calendarMeetingTimeZone,

		/// <remarks/>
		[XmlEnum("calendar:ConferenceType")]
		calendarConferenceType,

		/// <remarks/>
		[XmlEnum("calendar:AllowNewTimeProposal")]
		calendarAllowNewTimeProposal,

		/// <remarks/>
		[XmlEnum("calendar:IsOnlineMeeting")]
		calendarIsOnlineMeeting,

		/// <remarks/>
		[XmlEnum("calendar:MeetingWorkspaceUrl")]
		calendarMeetingWorkspaceUrl,

		/// <remarks/>
		[XmlEnum("calendar:NetShowUrl")]
		calendarNetShowUrl,

		/// <remarks/>
		[XmlEnum("calendar:UID")]
		calendarUID,

		/// <remarks/>
		[XmlEnum("calendar:RecurrenceId")]
		calendarRecurrenceId,

		/// <remarks/>
		[XmlEnum("calendar:DateTimeStamp")]
		calendarDateTimeStamp,

		/// <remarks/>
		[XmlEnum("task:ActualWork")]
		taskActualWork,

		/// <remarks/>
		[XmlEnum("task:AssignedTime")]
		taskAssignedTime,

		/// <remarks/>
		[XmlEnum("task:BillingInformation")]
		taskBillingInformation,

		/// <remarks/>
		[XmlEnum("task:ChangeCount")]
		taskChangeCount,

		/// <remarks/>
		[XmlEnum("task:Companies")]
		taskCompanies,

		/// <remarks/>
		[XmlEnum("task:CompleteDate")]
		taskCompleteDate,

		/// <remarks/>
		[XmlEnum("task:Contacts")]
		taskContacts,

		/// <remarks/>
		[XmlEnum("task:DelegationState")]
		taskDelegationState,

		/// <remarks/>
		[XmlEnum("task:Delegator")]
		taskDelegator,

		/// <remarks/>
		[XmlEnum("task:DueDate")]
		taskDueDate,

		/// <remarks/>
		[XmlEnum("task:IsAssignmentEditable")]
		taskIsAssignmentEditable,

		/// <remarks/>
		[XmlEnum("task:IsComplete")]
		taskIsComplete,

		/// <remarks/>
		[XmlEnum("task:IsRecurring")]
		taskIsRecurring,

		/// <remarks/>
		[XmlEnum("task:IsTeamTask")]
		taskIsTeamTask,

		/// <remarks/>
		[XmlEnum("task:Mileage")]
		taskMileage,

		/// <remarks/>
		[XmlEnum("task:Owner")]
		taskOwner,

		/// <remarks/>
		[XmlEnum("task:PercentComplete")]
		taskPercentComplete,

		/// <remarks/>
		[XmlEnum("task:Recurrence")]
		taskRecurrence,

		/// <remarks/>
		[XmlEnum("task:StartDate")]
		taskStartDate,

		/// <remarks/>
		[XmlEnum("task:Status")]
		taskStatus,

		/// <remarks/>
		[XmlEnum("task:StatusDescription")]
		taskStatusDescription,

		/// <remarks/>
		[XmlEnum("task:TotalWork")]
		taskTotalWork,

		/// <remarks/>
		[XmlEnum("contacts:AssistantName")]
		contactsAssistantName,

		/// <remarks/>
		[XmlEnum("contacts:Birthday")]
		contactsBirthday,

		/// <remarks/>
		[XmlEnum("contacts:BusinessHomePage")]
		contactsBusinessHomePage,

		/// <remarks/>
		[XmlEnum("contacts:Children")]
		contactsChildren,

		/// <remarks/>
		[XmlEnum("contacts:Companies")]
		contactsCompanies,

		/// <remarks/>
		[XmlEnum("contacts:CompanyName")]
		contactsCompanyName,

		/// <remarks/>
		[XmlEnum("contacts:CompleteName")]
		contactsCompleteName,

		/// <remarks/>
		[XmlEnum("contacts:ContactSource")]
		contactsContactSource,

		/// <remarks/>
		[XmlEnum("contacts:Culture")]
		contactsCulture,

		/// <remarks/>
		[XmlEnum("contacts:Department")]
		contactsDepartment,

		/// <remarks/>
		[XmlEnum("contacts:DisplayName")]
		contactsDisplayName,

		/// <remarks/>
		[XmlEnum("contacts:EmailAddresses")]
		contactsEmailAddresses,

		/// <remarks/>
		[XmlEnum("contacts:FileAs")]
		contactsFileAs,

		/// <remarks/>
		[XmlEnum("contacts:FileAsMapping")]
		contactsFileAsMapping,

		/// <remarks/>
		[XmlEnum("contacts:Generation")]
		contactsGeneration,

		/// <remarks/>
		[XmlEnum("contacts:GivenName")]
		contactsGivenName,

		/// <remarks/>
		[XmlEnum("contacts:ImAddresses")]
		contactsImAddresses,

		/// <remarks/>
		[XmlEnum("contacts:Initials")]
		contactsInitials,

		/// <remarks/>
		[XmlEnum("contacts:JobTitle")]
		contactsJobTitle,

		/// <remarks/>
		[XmlEnum("contacts:Manager")]
		contactsManager,

		/// <remarks/>
		[XmlEnum("contacts:MiddleName")]
		contactsMiddleName,

		/// <remarks/>
		[XmlEnum("contacts:Mileage")]
		contactsMileage,

		/// <remarks/>
		[XmlEnum("contacts:Nickname")]
		contactsNickname,

		/// <remarks/>
		[XmlEnum("contacts:OfficeLocation")]
		contactsOfficeLocation,

		/// <remarks/>
		[XmlEnum("contacts:PhoneNumbers")]
		contactsPhoneNumbers,

		/// <remarks/>
		[XmlEnum("contacts:PhysicalAddresses")]
		contactsPhysicalAddresses,

		/// <remarks/>
		[XmlEnum("contacts:PostalAddressIndex")]
		contactsPostalAddressIndex,

		/// <remarks/>
		[XmlEnum("contacts:Profession")]
		contactsProfession,

		/// <remarks/>
		[XmlEnum("contacts:SpouseName")]
		contactsSpouseName,

		/// <remarks/>
		[XmlEnum("contacts:Surname")]
		contactsSurname,

		/// <remarks/>
		[XmlEnum("contacts:WeddingAnniversary")]
		contactsWeddingAnniversary,

		/// <remarks/>
		[XmlEnum("postitem:PostedTime")]
		postitemPostedTime,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class NonEmptyArrayOfPropertyValuesType
	{
		private string[] itemsField;

		/// <remarks/>
		[XmlElement("Value")]
		public string[] Items
		{
			get { return itemsField; }
			set { itemsField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class EffectiveRightsType
	{
		private bool createAssociatedField;

		private bool createContentsField;

		private bool createHierarchyField;

		private bool deleteField;

		private bool modifyField;

		private bool readField;

		/// <remarks/>
		public bool CreateAssociated
		{
			get { return createAssociatedField; }
			set { createAssociatedField = value; }
		}

		/// <remarks/>
		public bool CreateContents
		{
			get { return createContentsField; }
			set { createContentsField = value; }
		}

		/// <remarks/>
		public bool CreateHierarchy
		{
			get { return createHierarchyField; }
			set { createHierarchyField = value; }
		}

		/// <remarks/>
		public bool Delete
		{
			get { return deleteField; }
			set { deleteField = value; }
		}

		/// <remarks/>
		public bool Modify
		{
			get { return modifyField; }
			set { modifyField = value; }
		}

		/// <remarks/>
		public bool Read
		{
			get { return readField; }
			set { readField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class DistributionListType : ItemType
	{
		private string displayNameField;

		private string fileAsField;

		private ContactSourceType contactSourceField;

		private bool contactSourceFieldSpecified;

		/// <remarks/>
		public string DisplayName
		{
			get { return displayNameField; }
			set { displayNameField = value; }
		}

		/// <remarks/>
		public string FileAs
		{
			get { return fileAsField; }
			set { fileAsField = value; }
		}

		/// <remarks/>
		public ContactSourceType ContactSource
		{
			get { return contactSourceField; }
			set { contactSourceField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool ContactSourceSpecified
		{
			get { return contactSourceFieldSpecified; }
			set { contactSourceFieldSpecified = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class SyncFolderItemsDeleteType
	{
		private ItemIdType itemIdField;

		/// <remarks/>
		public ItemIdType ItemId
		{
			get { return itemIdField; }
			set { itemIdField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class SyncFolderItemsReadFlagType
	{
		private ItemIdType itemIdField;

		private bool isReadField;

		/// <remarks/>
		public ItemIdType ItemId
		{
			get { return itemIdField; }
			set { itemIdField = value; }
		}

		/// <remarks/>
		public bool IsRead
		{
			get { return isReadField; }
			set { isReadField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IncludeInSchema = false)]
	public enum ItemsChoiceType2
	{
		/// <remarks/>
		Create,

		/// <remarks/>
		Delete,

		/// <remarks/>
		ReadFlagChange,

		/// <remarks/>
		Update,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class SyncFolderHierarchyResponseMessageType : ResponseMessageType
	{
		private string syncStateField;

		private bool includesLastFolderInRangeField;

		private bool includesLastFolderInRangeFieldSpecified;

		private SyncFolderHierarchyChangesType changesField;

		/// <remarks/>
		public string SyncState
		{
			get { return syncStateField; }
			set { syncStateField = value; }
		}

		/// <remarks/>
		public bool IncludesLastFolderInRange
		{
			get { return includesLastFolderInRangeField; }
			set { includesLastFolderInRangeField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IncludesLastFolderInRangeSpecified
		{
			get { return includesLastFolderInRangeFieldSpecified; }
			set { includesLastFolderInRangeFieldSpecified = value; }
		}

		/// <remarks/>
		public SyncFolderHierarchyChangesType Changes
		{
			get { return changesField; }
			set { changesField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class SyncFolderHierarchyChangesType
	{
		private object[] itemsField;

		private ItemsChoiceType1[] itemsElementNameField;

		/// <remarks/>
		[XmlElement("Create", typeof(SyncFolderHierarchyCreateOrUpdateType))]
		[XmlElement("Delete", typeof(SyncFolderHierarchyDeleteType))]
		[XmlElement("Update", typeof(SyncFolderHierarchyCreateOrUpdateType))]
		[XmlChoiceIdentifier("ItemsElementName")]
		public object[] Items
		{
			get { return itemsField; }
			set { itemsField = value; }
		}

		/// <remarks/>
		[XmlElement("ItemsElementName")]
		[XmlIgnore()]
		public ItemsChoiceType1[] ItemsElementName
		{
			get { return itemsElementNameField; }
			set { itemsElementNameField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class SyncFolderHierarchyCreateOrUpdateType
	{
		private BaseFolderType itemField;

		/// <remarks/>
		[XmlElement("CalendarFolder", typeof(CalendarFolderType))]
		[XmlElement("ContactsFolder", typeof(ContactsFolderType))]
		[XmlElement("Folder", typeof(FolderType))]
		[XmlElement("SearchFolder", typeof(SearchFolderType))]
		[XmlElement("TasksFolder", typeof(TasksFolderType))]
		public BaseFolderType Item
		{
			get { return itemField; }
			set { itemField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class CalendarFolderType : BaseFolderType
	{
		private CalendarPermissionSetType permissionSetField;

		/// <remarks/>
		public CalendarPermissionSetType PermissionSet
		{
			get { return permissionSetField; }
			set { permissionSetField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class CalendarPermissionSetType
	{
		private CalendarPermissionType[] calendarPermissionsField;

		private string[] unknownEntriesField;

		/// <remarks/>
		[XmlArrayItem("CalendarPermission", IsNullable = false)]
		public CalendarPermissionType[] CalendarPermissions
		{
			get { return calendarPermissionsField; }
			set { calendarPermissionsField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("UnknownEntry", IsNullable = false)]
		public string[] UnknownEntries
		{
			get { return unknownEntriesField; }
			set { unknownEntriesField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class CalendarPermissionType : BasePermissionType
	{
		private CalendarPermissionReadAccessType readItemsField;

		private bool readItemsFieldSpecified;

		private CalendarPermissionLevelType calendarPermissionLevelField;

		/// <remarks/>
		public CalendarPermissionReadAccessType ReadItems
		{
			get { return readItemsField; }
			set { readItemsField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool ReadItemsSpecified
		{
			get { return readItemsFieldSpecified; }
			set { readItemsFieldSpecified = value; }
		}

		/// <remarks/>
		public CalendarPermissionLevelType CalendarPermissionLevel
		{
			get { return calendarPermissionLevelField; }
			set { calendarPermissionLevelField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum CalendarPermissionReadAccessType
	{
		/// <remarks/>
		None,

		/// <remarks/>
		TimeOnly,

		/// <remarks/>
		TimeAndSubjectAndLocation,

		/// <remarks/>
		FullDetails,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum CalendarPermissionLevelType
	{
		/// <remarks/>
		None,

		/// <remarks/>
		Owner,

		/// <remarks/>
		PublishingEditor,

		/// <remarks/>
		Editor,

		/// <remarks/>
		PublishingAuthor,

		/// <remarks/>
		Author,

		/// <remarks/>
		NoneditingAuthor,

		/// <remarks/>
		Reviewer,

		/// <remarks/>
		Contributor,

		/// <remarks/>
		FreeBusyTimeOnly,

		/// <remarks/>
		FreeBusyTimeAndSubjectAndLocation,

		/// <remarks/>
		Custom,
	}

	/// <remarks/>
	[XmlInclude(typeof(CalendarPermissionType))]
	[XmlInclude(typeof(PermissionType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public abstract partial class BasePermissionType
	{
		private UserIdType userIdField;

		private bool canCreateItemsField;

		private bool canCreateItemsFieldSpecified;

		private bool canCreateSubFoldersField;

		private bool canCreateSubFoldersFieldSpecified;

		private bool isFolderOwnerField;

		private bool isFolderOwnerFieldSpecified;

		private bool isFolderVisibleField;

		private bool isFolderVisibleFieldSpecified;

		private bool isFolderContactField;

		private bool isFolderContactFieldSpecified;

		private PermissionActionType editItemsField;

		private bool editItemsFieldSpecified;

		private PermissionActionType deleteItemsField;

		private bool deleteItemsFieldSpecified;

		/// <remarks/>
		public UserIdType UserId
		{
			get { return userIdField; }
			set { userIdField = value; }
		}

		/// <remarks/>
		public bool CanCreateItems
		{
			get { return canCreateItemsField; }
			set { canCreateItemsField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool CanCreateItemsSpecified
		{
			get { return canCreateItemsFieldSpecified; }
			set { canCreateItemsFieldSpecified = value; }
		}

		/// <remarks/>
		public bool CanCreateSubFolders
		{
			get { return canCreateSubFoldersField; }
			set { canCreateSubFoldersField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool CanCreateSubFoldersSpecified
		{
			get { return canCreateSubFoldersFieldSpecified; }
			set { canCreateSubFoldersFieldSpecified = value; }
		}

		/// <remarks/>
		public bool IsFolderOwner
		{
			get { return isFolderOwnerField; }
			set { isFolderOwnerField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IsFolderOwnerSpecified
		{
			get { return isFolderOwnerFieldSpecified; }
			set { isFolderOwnerFieldSpecified = value; }
		}

		/// <remarks/>
		public bool IsFolderVisible
		{
			get { return isFolderVisibleField; }
			set { isFolderVisibleField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IsFolderVisibleSpecified
		{
			get { return isFolderVisibleFieldSpecified; }
			set { isFolderVisibleFieldSpecified = value; }
		}

		/// <remarks/>
		public bool IsFolderContact
		{
			get { return isFolderContactField; }
			set { isFolderContactField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IsFolderContactSpecified
		{
			get { return isFolderContactFieldSpecified; }
			set { isFolderContactFieldSpecified = value; }
		}

		/// <remarks/>
		public PermissionActionType EditItems
		{
			get { return editItemsField; }
			set { editItemsField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool EditItemsSpecified
		{
			get { return editItemsFieldSpecified; }
			set { editItemsFieldSpecified = value; }
		}

		/// <remarks/>
		public PermissionActionType DeleteItems
		{
			get { return deleteItemsField; }
			set { deleteItemsField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool DeleteItemsSpecified
		{
			get { return deleteItemsFieldSpecified; }
			set { deleteItemsFieldSpecified = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum PermissionActionType
	{
		/// <remarks/>
		None,

		/// <remarks/>
		Owned,

		/// <remarks/>
		All,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class PermissionType : BasePermissionType
	{
		private PermissionReadAccessType readItemsField;

		private bool readItemsFieldSpecified;

		private PermissionLevelType permissionLevelField;

		/// <remarks/>
		public PermissionReadAccessType ReadItems
		{
			get { return readItemsField; }
			set { readItemsField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool ReadItemsSpecified
		{
			get { return readItemsFieldSpecified; }
			set { readItemsFieldSpecified = value; }
		}

		/// <remarks/>
		public PermissionLevelType PermissionLevel
		{
			get { return permissionLevelField; }
			set { permissionLevelField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum PermissionReadAccessType
	{
		/// <remarks/>
		None,

		/// <remarks/>
		FullDetails,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum PermissionLevelType
	{
		/// <remarks/>
		None,

		/// <remarks/>
		Owner,

		/// <remarks/>
		PublishingEditor,

		/// <remarks/>
		Editor,

		/// <remarks/>
		PublishingAuthor,

		/// <remarks/>
		Author,

		/// <remarks/>
		NoneditingAuthor,

		/// <remarks/>
		Reviewer,

		/// <remarks/>
		Contributor,

		/// <remarks/>
		Custom,
	}

	/// <remarks/>
	[XmlInclude(typeof(ContactsFolderType))]
	[XmlInclude(typeof(CalendarFolderType))]
	[XmlInclude(typeof(FolderType))]
	[XmlInclude(typeof(TasksFolderType))]
	[XmlInclude(typeof(SearchFolderType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public abstract partial class BaseFolderType
	{
		private FolderIdType folderIdField;

		private FolderIdType parentFolderIdField;

		private string folderClassField;

		private string displayNameField;

		private int totalCountField;

		private bool totalCountFieldSpecified;

		private int childFolderCountField;

		private bool childFolderCountFieldSpecified;

		private ExtendedPropertyType[] extendedPropertyField;

		private ManagedFolderInformationType managedFolderInformationField;

		private EffectiveRightsType effectiveRightsField;

		/// <remarks/>
		public FolderIdType FolderId
		{
			get { return folderIdField; }
			set { folderIdField = value; }
		}

		/// <remarks/>
		public FolderIdType ParentFolderId
		{
			get { return parentFolderIdField; }
			set { parentFolderIdField = value; }
		}

		/// <remarks/>
		public string FolderClass
		{
			get { return folderClassField; }
			set { folderClassField = value; }
		}

		/// <remarks/>
		public string DisplayName
		{
			get { return displayNameField; }
			set { displayNameField = value; }
		}

		/// <remarks/>
		public int TotalCount
		{
			get { return totalCountField; }
			set { totalCountField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool TotalCountSpecified
		{
			get { return totalCountFieldSpecified; }
			set { totalCountFieldSpecified = value; }
		}

		/// <remarks/>
		public int ChildFolderCount
		{
			get { return childFolderCountField; }
			set { childFolderCountField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool ChildFolderCountSpecified
		{
			get { return childFolderCountFieldSpecified; }
			set { childFolderCountFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlElement("ExtendedProperty")]
		public ExtendedPropertyType[] ExtendedProperty
		{
			get { return extendedPropertyField; }
			set { extendedPropertyField = value; }
		}

		/// <remarks/>
		public ManagedFolderInformationType ManagedFolderInformation
		{
			get { return managedFolderInformationField; }
			set { managedFolderInformationField = value; }
		}

		/// <remarks/>
		public EffectiveRightsType EffectiveRights
		{
			get { return effectiveRightsField; }
			set { effectiveRightsField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class ManagedFolderInformationType
	{
		private bool canDeleteField;

		private bool canDeleteFieldSpecified;

		private bool canRenameOrMoveField;

		private bool canRenameOrMoveFieldSpecified;

		private bool mustDisplayCommentField;

		private bool mustDisplayCommentFieldSpecified;

		private bool hasQuotaField;

		private bool hasQuotaFieldSpecified;

		private bool isManagedFoldersRootField;

		private bool isManagedFoldersRootFieldSpecified;

		private string managedFolderIdField;

		private string commentField;

		private int storageQuotaField;

		private bool storageQuotaFieldSpecified;

		private int folderSizeField;

		private bool folderSizeFieldSpecified;

		private string homePageField;

		/// <remarks/>
		public bool CanDelete
		{
			get { return canDeleteField; }
			set { canDeleteField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool CanDeleteSpecified
		{
			get { return canDeleteFieldSpecified; }
			set { canDeleteFieldSpecified = value; }
		}

		/// <remarks/>
		public bool CanRenameOrMove
		{
			get { return canRenameOrMoveField; }
			set { canRenameOrMoveField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool CanRenameOrMoveSpecified
		{
			get { return canRenameOrMoveFieldSpecified; }
			set { canRenameOrMoveFieldSpecified = value; }
		}

		/// <remarks/>
		public bool MustDisplayComment
		{
			get { return mustDisplayCommentField; }
			set { mustDisplayCommentField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool MustDisplayCommentSpecified
		{
			get { return mustDisplayCommentFieldSpecified; }
			set { mustDisplayCommentFieldSpecified = value; }
		}

		/// <remarks/>
		public bool HasQuota
		{
			get { return hasQuotaField; }
			set { hasQuotaField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool HasQuotaSpecified
		{
			get { return hasQuotaFieldSpecified; }
			set { hasQuotaFieldSpecified = value; }
		}

		/// <remarks/>
		public bool IsManagedFoldersRoot
		{
			get { return isManagedFoldersRootField; }
			set { isManagedFoldersRootField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IsManagedFoldersRootSpecified
		{
			get { return isManagedFoldersRootFieldSpecified; }
			set { isManagedFoldersRootFieldSpecified = value; }
		}

		/// <remarks/>
		public string ManagedFolderId
		{
			get { return managedFolderIdField; }
			set { managedFolderIdField = value; }
		}

		/// <remarks/>
		public string Comment
		{
			get { return commentField; }
			set { commentField = value; }
		}

		/// <remarks/>
		public int StorageQuota
		{
			get { return storageQuotaField; }
			set { storageQuotaField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool StorageQuotaSpecified
		{
			get { return storageQuotaFieldSpecified; }
			set { storageQuotaFieldSpecified = value; }
		}

		/// <remarks/>
		public int FolderSize
		{
			get { return folderSizeField; }
			set { folderSizeField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool FolderSizeSpecified
		{
			get { return folderSizeFieldSpecified; }
			set { folderSizeFieldSpecified = value; }
		}

		/// <remarks/>
		public string HomePage
		{
			get { return homePageField; }
			set { homePageField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class ContactsFolderType : BaseFolderType
	{
		private PermissionSetType permissionSetField;

		/// <remarks/>
		public PermissionSetType PermissionSet
		{
			get { return permissionSetField; }
			set { permissionSetField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class PermissionSetType
	{
		private PermissionType[] permissionsField;

		private string[] unknownEntriesField;

		/// <remarks/>
		[XmlArrayItem("Permission", IsNullable = false)]
		public PermissionType[] Permissions
		{
			get { return permissionsField; }
			set { permissionsField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("UnknownEntry", IsNullable = false)]
		public string[] UnknownEntries
		{
			get { return unknownEntriesField; }
			set { unknownEntriesField = value; }
		}
	}

	/// <remarks/>
	[XmlInclude(typeof(TasksFolderType))]
	[XmlInclude(typeof(SearchFolderType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class FolderType : BaseFolderType
	{
		private PermissionSetType permissionSetField;

		private int unreadCountField;

		private bool unreadCountFieldSpecified;

		/// <remarks/>
		public PermissionSetType PermissionSet
		{
			get { return permissionSetField; }
			set { permissionSetField = value; }
		}

		/// <remarks/>
		public int UnreadCount
		{
			get { return unreadCountField; }
			set { unreadCountField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool UnreadCountSpecified
		{
			get { return unreadCountFieldSpecified; }
			set { unreadCountFieldSpecified = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class TasksFolderType : FolderType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class SearchFolderType : FolderType
	{
		private SearchParametersType searchParametersField;

		/// <remarks/>
		public SearchParametersType SearchParameters
		{
			get { return searchParametersField; }
			set { searchParametersField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class SearchParametersType
	{
		private RestrictionType restrictionField;

		private BaseFolderIdType[] baseFolderIdsField;

		private SearchFolderTraversalType traversalField;

		private bool traversalFieldSpecified;

		/// <remarks/>
		public RestrictionType Restriction
		{
			get { return restrictionField; }
			set { restrictionField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("DistinguishedFolderId", typeof(DistinguishedFolderIdType), IsNullable = false)]
		[XmlArrayItem("FolderId", typeof(FolderIdType), IsNullable = false)]
		public BaseFolderIdType[] BaseFolderIds
		{
			get { return baseFolderIdsField; }
			set { baseFolderIdsField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public SearchFolderTraversalType Traversal
		{
			get { return traversalField; }
			set { traversalField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool TraversalSpecified
		{
			get { return traversalFieldSpecified; }
			set { traversalFieldSpecified = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class RestrictionType
	{
		private SearchExpressionType itemField;

		/// <remarks/>
		[XmlElement("And", typeof(AndType))]
		[XmlElement("Contains", typeof(ContainsExpressionType))]
		[XmlElement("Excludes", typeof(ExcludesType))]
		[XmlElement("Exists", typeof(ExistsType))]
		[XmlElement("IsEqualTo", typeof(IsEqualToType))]
		[XmlElement("IsGreaterThan", typeof(IsGreaterThanType))]
		[XmlElement("IsGreaterThanOrEqualTo", typeof(IsGreaterThanOrEqualToType))]
		[XmlElement("IsLessThan", typeof(IsLessThanType))]
		[XmlElement("IsLessThanOrEqualTo", typeof(IsLessThanOrEqualToType))]
		[XmlElement("IsNotEqualTo", typeof(IsNotEqualToType))]
		[XmlElement("Not", typeof(NotType))]
		[XmlElement("Or", typeof(OrType))]
		[XmlElement("SearchExpression", typeof(SearchExpressionType))]
		public SearchExpressionType Item
		{
			get { return itemField; }
			set { itemField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class AndType : MultipleOperandBooleanExpressionType
	{
	}

	/// <remarks/>
	[XmlInclude(typeof(OrType))]
	[XmlInclude(typeof(AndType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public abstract partial class MultipleOperandBooleanExpressionType : SearchExpressionType
	{
		private SearchExpressionType[] itemsField;

		/// <remarks/>
		[XmlElement("And", typeof(AndType))]
		[XmlElement("Contains", typeof(ContainsExpressionType))]
		[XmlElement("Excludes", typeof(ExcludesType))]
		[XmlElement("Exists", typeof(ExistsType))]
		[XmlElement("IsEqualTo", typeof(IsEqualToType))]
		[XmlElement("IsGreaterThan", typeof(IsGreaterThanType))]
		[XmlElement("IsGreaterThanOrEqualTo", typeof(IsGreaterThanOrEqualToType))]
		[XmlElement("IsLessThan", typeof(IsLessThanType))]
		[XmlElement("IsLessThanOrEqualTo", typeof(IsLessThanOrEqualToType))]
		[XmlElement("IsNotEqualTo", typeof(IsNotEqualToType))]
		[XmlElement("Not", typeof(NotType))]
		[XmlElement("Or", typeof(OrType))]
		[XmlElement("SearchExpression", typeof(SearchExpressionType))]
		public SearchExpressionType[] Items
		{
			get { return itemsField; }
			set { itemsField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class ContainsExpressionType : SearchExpressionType
	{
		private BasePathToElementType itemField;

		private ConstantValueType constantField;

		private ContainmentModeType containmentModeField;

		private bool containmentModeFieldSpecified;

		private ContainmentComparisonType containmentComparisonField;

		private bool containmentComparisonFieldSpecified;

		/// <remarks/>
		[XmlElement("ExtendedFieldURI", typeof(PathToExtendedFieldType))]
		[XmlElement("FieldURI", typeof(PathToUnindexedFieldType))]
		[XmlElement("IndexedFieldURI", typeof(PathToIndexedFieldType))]
		public BasePathToElementType Item
		{
			get { return itemField; }
			set { itemField = value; }
		}

		/// <remarks/>
		public ConstantValueType Constant
		{
			get { return constantField; }
			set { constantField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public ContainmentModeType ContainmentMode
		{
			get { return containmentModeField; }
			set { containmentModeField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool ContainmentModeSpecified
		{
			get { return containmentModeFieldSpecified; }
			set { containmentModeFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public ContainmentComparisonType ContainmentComparison
		{
			get { return containmentComparisonField; }
			set { containmentComparisonField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool ContainmentComparisonSpecified
		{
			get { return containmentComparisonFieldSpecified; }
			set { containmentComparisonFieldSpecified = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class ConstantValueType
	{
		private string valueField;

		/// <remarks/>
		[XmlAttribute()]
		public string Value
		{
			get { return valueField; }
			set { valueField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum ContainmentModeType
	{
		/// <remarks/>
		FullString,

		/// <remarks/>
		Prefixed,

		/// <remarks/>
		Substring,

		/// <remarks/>
		PrefixOnWords,

		/// <remarks/>
		ExactPhrase,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum ContainmentComparisonType
	{
		/// <remarks/>
		Exact,

		/// <remarks/>
		IgnoreCase,

		/// <remarks/>
		IgnoreNonSpacingCharacters,

		/// <remarks/>
		Loose,

		/// <remarks/>
		IgnoreCaseAndNonSpacingCharacters,

		/// <remarks/>
		LooseAndIgnoreCase,

		/// <remarks/>
		LooseAndIgnoreNonSpace,

		/// <remarks/>
		LooseAndIgnoreCaseAndIgnoreNonSpace,
	}

	/// <remarks/>
	[XmlInclude(typeof(MultipleOperandBooleanExpressionType))]
	[XmlInclude(typeof(OrType))]
	[XmlInclude(typeof(AndType))]
	[XmlInclude(typeof(NotType))]
	[XmlInclude(typeof(ContainsExpressionType))]
	[XmlInclude(typeof(ExcludesType))]
	[XmlInclude(typeof(TwoOperandExpressionType))]
	[XmlInclude(typeof(IsLessThanOrEqualToType))]
	[XmlInclude(typeof(IsLessThanType))]
	[XmlInclude(typeof(IsGreaterThanOrEqualToType))]
	[XmlInclude(typeof(IsGreaterThanType))]
	[XmlInclude(typeof(IsNotEqualToType))]
	[XmlInclude(typeof(IsEqualToType))]
	[XmlInclude(typeof(ExistsType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public abstract partial class SearchExpressionType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class NotType : SearchExpressionType
	{
		private SearchExpressionType itemField;

		/// <remarks/>
		[XmlElement("And", typeof(AndType))]
		[XmlElement("Contains", typeof(ContainsExpressionType))]
		[XmlElement("Excludes", typeof(ExcludesType))]
		[XmlElement("Exists", typeof(ExistsType))]
		[XmlElement("IsEqualTo", typeof(IsEqualToType))]
		[XmlElement("IsGreaterThan", typeof(IsGreaterThanType))]
		[XmlElement("IsGreaterThanOrEqualTo", typeof(IsGreaterThanOrEqualToType))]
		[XmlElement("IsLessThan", typeof(IsLessThanType))]
		[XmlElement("IsLessThanOrEqualTo", typeof(IsLessThanOrEqualToType))]
		[XmlElement("IsNotEqualTo", typeof(IsNotEqualToType))]
		[XmlElement("Not", typeof(NotType))]
		[XmlElement("Or", typeof(OrType))]
		[XmlElement("SearchExpression", typeof(SearchExpressionType))]
		public SearchExpressionType Item
		{
			get { return itemField; }
			set { itemField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class ExcludesType : SearchExpressionType
	{
		private BasePathToElementType itemField;

		private ExcludesValueType bitmaskField;

		/// <remarks/>
		[XmlElement("ExtendedFieldURI", typeof(PathToExtendedFieldType))]
		[XmlElement("FieldURI", typeof(PathToUnindexedFieldType))]
		[XmlElement("IndexedFieldURI", typeof(PathToIndexedFieldType))]
		public BasePathToElementType Item
		{
			get { return itemField; }
			set { itemField = value; }
		}

		/// <remarks/>
		public ExcludesValueType Bitmask
		{
			get { return bitmaskField; }
			set { bitmaskField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class ExcludesValueType
	{
		private string valueField;

		/// <remarks/>
		[XmlAttribute()]
		public string Value
		{
			get { return valueField; }
			set { valueField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class ExistsType : SearchExpressionType
	{
		private BasePathToElementType itemField;

		/// <remarks/>
		[XmlElement("ExtendedFieldURI", typeof(PathToExtendedFieldType))]
		[XmlElement("FieldURI", typeof(PathToUnindexedFieldType))]
		[XmlElement("IndexedFieldURI", typeof(PathToIndexedFieldType))]
		public BasePathToElementType Item
		{
			get { return itemField; }
			set { itemField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class IsEqualToType : TwoOperandExpressionType
	{
	}

	/// <remarks/>
	[XmlInclude(typeof(IsLessThanOrEqualToType))]
	[XmlInclude(typeof(IsLessThanType))]
	[XmlInclude(typeof(IsGreaterThanOrEqualToType))]
	[XmlInclude(typeof(IsGreaterThanType))]
	[XmlInclude(typeof(IsNotEqualToType))]
	[XmlInclude(typeof(IsEqualToType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public abstract partial class TwoOperandExpressionType : SearchExpressionType
	{
		private BasePathToElementType itemField;

		private FieldURIOrConstantType fieldURIOrConstantField;

		/// <remarks/>
		[XmlElement("ExtendedFieldURI", typeof(PathToExtendedFieldType))]
		[XmlElement("FieldURI", typeof(PathToUnindexedFieldType))]
		[XmlElement("IndexedFieldURI", typeof(PathToIndexedFieldType))]
		public BasePathToElementType Item
		{
			get { return itemField; }
			set { itemField = value; }
		}

		/// <remarks/>
		public FieldURIOrConstantType FieldURIOrConstant
		{
			get { return fieldURIOrConstantField; }
			set { fieldURIOrConstantField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class FieldURIOrConstantType
	{
		private object itemField;

		/// <remarks/>
		[XmlElement("Constant", typeof(ConstantValueType))]
		[XmlElement("ExtendedFieldURI", typeof(PathToExtendedFieldType))]
		[XmlElement("FieldURI", typeof(PathToUnindexedFieldType))]
		[XmlElement("IndexedFieldURI", typeof(PathToIndexedFieldType))]
		[XmlElement("Path", typeof(BasePathToElementType))]
		public object Item
		{
			get { return itemField; }
			set { itemField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class IsLessThanOrEqualToType : TwoOperandExpressionType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class IsLessThanType : TwoOperandExpressionType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class IsGreaterThanOrEqualToType : TwoOperandExpressionType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class IsGreaterThanType : TwoOperandExpressionType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class IsNotEqualToType : TwoOperandExpressionType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class OrType : MultipleOperandBooleanExpressionType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum SearchFolderTraversalType
	{
		/// <remarks/>
		Shallow,

		/// <remarks/>
		Deep,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class SyncFolderHierarchyDeleteType
	{
		private FolderIdType folderIdField;

		/// <remarks/>
		public FolderIdType FolderId
		{
			get { return folderIdField; }
			set { folderIdField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IncludeInSchema = false)]
	public enum ItemsChoiceType1
	{
		/// <remarks/>
		Create,

		/// <remarks/>
		Delete,

		/// <remarks/>
		Update,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class SendNotificationResponseMessageType : ResponseMessageType
	{
		private NotificationType notificationField;

		/// <remarks/>
		public NotificationType Notification
		{
			get { return notificationField; }
			set { notificationField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class NotificationType
	{
		private string subscriptionIdField;

		private string previousWatermarkField;

		private bool moreEventsField;

		private BaseNotificationEventType[] itemsField;

		private ItemsChoiceType[] itemsElementNameField;

		/// <remarks/>
		public string SubscriptionId
		{
			get { return subscriptionIdField; }
			set { subscriptionIdField = value; }
		}

		/// <remarks/>
		public string PreviousWatermark
		{
			get { return previousWatermarkField; }
			set { previousWatermarkField = value; }
		}

		/// <remarks/>
		public bool MoreEvents
		{
			get { return moreEventsField; }
			set { moreEventsField = value; }
		}

		/// <remarks/>
		[XmlElement("CopiedEvent", typeof(MovedCopiedEventType))]
		[XmlElement("CreatedEvent", typeof(BaseObjectChangedEventType))]
		[XmlElement("DeletedEvent", typeof(BaseObjectChangedEventType))]
		[XmlElement("ModifiedEvent", typeof(ModifiedEventType))]
		[XmlElement("MovedEvent", typeof(MovedCopiedEventType))]
		[XmlElement("NewMailEvent", typeof(BaseObjectChangedEventType))]
		[XmlElement("StatusEvent", typeof(BaseNotificationEventType))]
		[XmlChoiceIdentifier("ItemsElementName")]
		public BaseNotificationEventType[] Items
		{
			get { return itemsField; }
			set { itemsField = value; }
		}

		/// <remarks/>
		[XmlElement("ItemsElementName")]
		[XmlIgnore()]
		public ItemsChoiceType[] ItemsElementName
		{
			get { return itemsElementNameField; }
			set { itemsElementNameField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class MovedCopiedEventType : BaseObjectChangedEventType
	{
		private object item1Field;

		private FolderIdType oldParentFolderIdField;

		/// <remarks/>
		[XmlElement("OldFolderId", typeof(FolderIdType))]
		[XmlElement("OldItemId", typeof(ItemIdType))]
		public object Item1
		{
			get { return item1Field; }
			set { item1Field = value; }
		}

		/// <remarks/>
		public FolderIdType OldParentFolderId
		{
			get { return oldParentFolderIdField; }
			set { oldParentFolderIdField = value; }
		}
	}

	/// <remarks/>
	[XmlInclude(typeof(MovedCopiedEventType))]
	[XmlInclude(typeof(ModifiedEventType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class BaseObjectChangedEventType : BaseNotificationEventType
	{
		private DateTime timeStampField;

		private object itemField;

		private FolderIdType parentFolderIdField;

		/// <remarks/>
		public DateTime TimeStamp
		{
			get { return timeStampField; }
			set { timeStampField = value; }
		}

		/// <remarks/>
		[XmlElement("FolderId", typeof(FolderIdType))]
		[XmlElement("ItemId", typeof(ItemIdType))]
		public object Item
		{
			get { return itemField; }
			set { itemField = value; }
		}

		/// <remarks/>
		public FolderIdType ParentFolderId
		{
			get { return parentFolderIdField; }
			set { parentFolderIdField = value; }
		}
	}

	/// <remarks/>
	[XmlInclude(typeof(BaseObjectChangedEventType))]
	[XmlInclude(typeof(MovedCopiedEventType))]
	[XmlInclude(typeof(ModifiedEventType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class BaseNotificationEventType
	{
		private string watermarkField;

		/// <remarks/>
		public string Watermark
		{
			get { return watermarkField; }
			set { watermarkField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class ModifiedEventType : BaseObjectChangedEventType
	{
		private int unreadCountField;

		private bool unreadCountFieldSpecified;

		/// <remarks/>
		public int UnreadCount
		{
			get { return unreadCountField; }
			set { unreadCountField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool UnreadCountSpecified
		{
			get { return unreadCountFieldSpecified; }
			set { unreadCountFieldSpecified = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IncludeInSchema = false)]
	public enum ItemsChoiceType
	{
		/// <remarks/>
		CopiedEvent,

		/// <remarks/>
		CreatedEvent,

		/// <remarks/>
		DeletedEvent,

		/// <remarks/>
		ModifiedEvent,

		/// <remarks/>
		MovedEvent,

		/// <remarks/>
		NewMailEvent,

		/// <remarks/>
		StatusEvent,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class GetEventsResponseMessageType : ResponseMessageType
	{
		private NotificationType notificationField;

		/// <remarks/>
		public NotificationType Notification
		{
			get { return notificationField; }
			set { notificationField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class SubscribeResponseMessageType : ResponseMessageType
	{
		private string subscriptionIdField;

		private string watermarkField;

		/// <remarks/>
		public string SubscriptionId
		{
			get { return subscriptionIdField; }
			set { subscriptionIdField = value; }
		}

		/// <remarks/>
		public string Watermark
		{
			get { return watermarkField; }
			set { watermarkField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class ExpandDLResponseMessageType : ResponseMessageType
	{
		private ArrayOfDLExpansionType dLExpansionField;

		private int indexedPagingOffsetField;

		private bool indexedPagingOffsetFieldSpecified;

		private int numeratorOffsetField;

		private bool numeratorOffsetFieldSpecified;

		private int absoluteDenominatorField;

		private bool absoluteDenominatorFieldSpecified;

		private bool includesLastItemInRangeField;

		private bool includesLastItemInRangeFieldSpecified;

		private int totalItemsInViewField;

		private bool totalItemsInViewFieldSpecified;

		/// <remarks/>
		public ArrayOfDLExpansionType DLExpansion
		{
			get { return dLExpansionField; }
			set { dLExpansionField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public int IndexedPagingOffset
		{
			get { return indexedPagingOffsetField; }
			set { indexedPagingOffsetField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IndexedPagingOffsetSpecified
		{
			get { return indexedPagingOffsetFieldSpecified; }
			set { indexedPagingOffsetFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public int NumeratorOffset
		{
			get { return numeratorOffsetField; }
			set { numeratorOffsetField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool NumeratorOffsetSpecified
		{
			get { return numeratorOffsetFieldSpecified; }
			set { numeratorOffsetFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public int AbsoluteDenominator
		{
			get { return absoluteDenominatorField; }
			set { absoluteDenominatorField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool AbsoluteDenominatorSpecified
		{
			get { return absoluteDenominatorFieldSpecified; }
			set { absoluteDenominatorFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public bool IncludesLastItemInRange
		{
			get { return includesLastItemInRangeField; }
			set { includesLastItemInRangeField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IncludesLastItemInRangeSpecified
		{
			get { return includesLastItemInRangeFieldSpecified; }
			set { includesLastItemInRangeFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public int TotalItemsInView
		{
			get { return totalItemsInViewField; }
			set { totalItemsInViewField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool TotalItemsInViewSpecified
		{
			get { return totalItemsInViewFieldSpecified; }
			set { totalItemsInViewFieldSpecified = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class ArrayOfDLExpansionType
	{
		private EmailAddressType[] mailboxField;

		private int indexedPagingOffsetField;

		private bool indexedPagingOffsetFieldSpecified;

		private int numeratorOffsetField;

		private bool numeratorOffsetFieldSpecified;

		private int absoluteDenominatorField;

		private bool absoluteDenominatorFieldSpecified;

		private bool includesLastItemInRangeField;

		private bool includesLastItemInRangeFieldSpecified;

		private int totalItemsInViewField;

		private bool totalItemsInViewFieldSpecified;

		/// <remarks/>
		[XmlElement("Mailbox")]
		public EmailAddressType[] Mailbox
		{
			get { return mailboxField; }
			set { mailboxField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public int IndexedPagingOffset
		{
			get { return indexedPagingOffsetField; }
			set { indexedPagingOffsetField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IndexedPagingOffsetSpecified
		{
			get { return indexedPagingOffsetFieldSpecified; }
			set { indexedPagingOffsetFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public int NumeratorOffset
		{
			get { return numeratorOffsetField; }
			set { numeratorOffsetField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool NumeratorOffsetSpecified
		{
			get { return numeratorOffsetFieldSpecified; }
			set { numeratorOffsetFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public int AbsoluteDenominator
		{
			get { return absoluteDenominatorField; }
			set { absoluteDenominatorField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool AbsoluteDenominatorSpecified
		{
			get { return absoluteDenominatorFieldSpecified; }
			set { absoluteDenominatorFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public bool IncludesLastItemInRange
		{
			get { return includesLastItemInRangeField; }
			set { includesLastItemInRangeField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IncludesLastItemInRangeSpecified
		{
			get { return includesLastItemInRangeFieldSpecified; }
			set { includesLastItemInRangeFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public int TotalItemsInView
		{
			get { return totalItemsInViewField; }
			set { totalItemsInViewField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool TotalItemsInViewSpecified
		{
			get { return totalItemsInViewFieldSpecified; }
			set { totalItemsInViewFieldSpecified = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class ResolveNamesResponseMessageType : ResponseMessageType
	{
		private ArrayOfResolutionType resolutionSetField;

		/// <remarks/>
		public ArrayOfResolutionType ResolutionSet
		{
			get { return resolutionSetField; }
			set { resolutionSetField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class ArrayOfResolutionType
	{
		private ResolutionType[] resolutionField;

		private int indexedPagingOffsetField;

		private bool indexedPagingOffsetFieldSpecified;

		private int numeratorOffsetField;

		private bool numeratorOffsetFieldSpecified;

		private int absoluteDenominatorField;

		private bool absoluteDenominatorFieldSpecified;

		private bool includesLastItemInRangeField;

		private bool includesLastItemInRangeFieldSpecified;

		private int totalItemsInViewField;

		private bool totalItemsInViewFieldSpecified;

		/// <remarks/>
		[XmlElement("Resolution")]
		public ResolutionType[] Resolution
		{
			get { return resolutionField; }
			set { resolutionField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public int IndexedPagingOffset
		{
			get { return indexedPagingOffsetField; }
			set { indexedPagingOffsetField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IndexedPagingOffsetSpecified
		{
			get { return indexedPagingOffsetFieldSpecified; }
			set { indexedPagingOffsetFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public int NumeratorOffset
		{
			get { return numeratorOffsetField; }
			set { numeratorOffsetField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool NumeratorOffsetSpecified
		{
			get { return numeratorOffsetFieldSpecified; }
			set { numeratorOffsetFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public int AbsoluteDenominator
		{
			get { return absoluteDenominatorField; }
			set { absoluteDenominatorField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool AbsoluteDenominatorSpecified
		{
			get { return absoluteDenominatorFieldSpecified; }
			set { absoluteDenominatorFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public bool IncludesLastItemInRange
		{
			get { return includesLastItemInRangeField; }
			set { includesLastItemInRangeField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IncludesLastItemInRangeSpecified
		{
			get { return includesLastItemInRangeFieldSpecified; }
			set { includesLastItemInRangeFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public int TotalItemsInView
		{
			get { return totalItemsInViewField; }
			set { totalItemsInViewField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool TotalItemsInViewSpecified
		{
			get { return totalItemsInViewFieldSpecified; }
			set { totalItemsInViewFieldSpecified = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class ResolutionType
	{
		private EmailAddressType mailboxField;

		private ContactItemType contactField;

		/// <remarks/>
		public EmailAddressType Mailbox
		{
			get { return mailboxField; }
			set { mailboxField = value; }
		}

		/// <remarks/>
		public ContactItemType Contact
		{
			get { return contactField; }
			set { contactField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class FindItemResponseMessageType : ResponseMessageType
	{
		private FindItemParentType rootFolderField;

		/// <remarks/>
		public FindItemParentType RootFolder
		{
			get { return rootFolderField; }
			set { rootFolderField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class FindItemParentType
	{
		private object itemField;

		private int indexedPagingOffsetField;

		private bool indexedPagingOffsetFieldSpecified;

		private int numeratorOffsetField;

		private bool numeratorOffsetFieldSpecified;

		private int absoluteDenominatorField;

		private bool absoluteDenominatorFieldSpecified;

		private bool includesLastItemInRangeField;

		private bool includesLastItemInRangeFieldSpecified;

		private int totalItemsInViewField;

		private bool totalItemsInViewFieldSpecified;

		/// <remarks/>
		[XmlElement("Groups", typeof(ArrayOfGroupedItemsType))]
		[XmlElement("Items", typeof(ArrayOfRealItemsType))]
		public object Item
		{
			get { return itemField; }
			set { itemField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public int IndexedPagingOffset
		{
			get { return indexedPagingOffsetField; }
			set { indexedPagingOffsetField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IndexedPagingOffsetSpecified
		{
			get { return indexedPagingOffsetFieldSpecified; }
			set { indexedPagingOffsetFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public int NumeratorOffset
		{
			get { return numeratorOffsetField; }
			set { numeratorOffsetField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool NumeratorOffsetSpecified
		{
			get { return numeratorOffsetFieldSpecified; }
			set { numeratorOffsetFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public int AbsoluteDenominator
		{
			get { return absoluteDenominatorField; }
			set { absoluteDenominatorField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool AbsoluteDenominatorSpecified
		{
			get { return absoluteDenominatorFieldSpecified; }
			set { absoluteDenominatorFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public bool IncludesLastItemInRange
		{
			get { return includesLastItemInRangeField; }
			set { includesLastItemInRangeField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IncludesLastItemInRangeSpecified
		{
			get { return includesLastItemInRangeFieldSpecified; }
			set { includesLastItemInRangeFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public int TotalItemsInView
		{
			get { return totalItemsInViewField; }
			set { totalItemsInViewField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool TotalItemsInViewSpecified
		{
			get { return totalItemsInViewFieldSpecified; }
			set { totalItemsInViewFieldSpecified = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class ArrayOfGroupedItemsType
	{
		private GroupedItemsType[] itemsField;

		/// <remarks/>
		[XmlElement("GroupedItems")]
		public GroupedItemsType[] Items
		{
			get { return itemsField; }
			set { itemsField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class GroupedItemsType
	{
		private string groupIndexField;

		private ArrayOfRealItemsType itemsField;

		/// <remarks/>
		public string GroupIndex
		{
			get { return groupIndexField; }
			set { groupIndexField = value; }
		}

		/// <remarks/>
		public ArrayOfRealItemsType Items
		{
			get { return itemsField; }
			set { itemsField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class ArrayOfRealItemsType
	{
		private ItemType[] itemsField;

		/// <remarks/>
		[XmlElement("CalendarItem", typeof(CalendarItemType))]
		[XmlElement("Contact", typeof(ContactItemType))]
		[XmlElement("DistributionList", typeof(DistributionListType))]
		[XmlElement("Item", typeof(ItemType))]
		[XmlElement("MeetingCancellation", typeof(MeetingCancellationMessageType))]
		[XmlElement("MeetingMessage", typeof(MeetingMessageType))]
		[XmlElement("MeetingRequest", typeof(MeetingRequestMessageType))]
		[XmlElement("MeetingResponse", typeof(MeetingResponseMessageType))]
		[XmlElement("Message", typeof(MessageType))]
		[XmlElement("PostItem", typeof(PostItemType))]
		[XmlElement("Task", typeof(TaskType))]
		public ItemType[] Items
		{
			get { return itemsField; }
			set { itemsField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class DeleteAttachmentResponseMessageType : ResponseMessageType
	{
		private RootItemIdType rootItemIdField;

		/// <remarks/>
		public RootItemIdType RootItemId
		{
			get { return rootItemIdField; }
			set { rootItemIdField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class AttachmentInfoResponseMessageType : ResponseMessageType
	{
		private AttachmentType[] attachmentsField;

		/// <remarks/>
		[XmlArrayItem("FileAttachment", typeof(FileAttachmentType),
			Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		[XmlArrayItem("ItemAttachment", typeof(ItemAttachmentType),
			Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		public AttachmentType[] Attachments
		{
			get { return attachmentsField; }
			set { attachmentsField = value; }
		}
	}

	/// <remarks/>
	[XmlInclude(typeof(UpdateItemResponseMessageType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class ItemInfoResponseMessageType : ResponseMessageType
	{
		private ArrayOfRealItemsType itemsField;

		/// <remarks/>
		public ArrayOfRealItemsType Items
		{
			get { return itemsField; }
			set { itemsField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class UpdateItemResponseMessageType : ItemInfoResponseMessageType
	{
		private ConflictResultsType conflictResultsField;

		/// <remarks/>
		public ConflictResultsType ConflictResults
		{
			get { return conflictResultsField; }
			set { conflictResultsField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class ConflictResultsType
	{
		private int countField;

		/// <remarks/>
		public int Count
		{
			get { return countField; }
			set { countField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class FindFolderResponseMessageType : ResponseMessageType
	{
		private FindFolderParentType rootFolderField;

		/// <remarks/>
		public FindFolderParentType RootFolder
		{
			get { return rootFolderField; }
			set { rootFolderField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class FindFolderParentType
	{
		private BaseFolderType[] foldersField;

		private int indexedPagingOffsetField;

		private bool indexedPagingOffsetFieldSpecified;

		private int numeratorOffsetField;

		private bool numeratorOffsetFieldSpecified;

		private int absoluteDenominatorField;

		private bool absoluteDenominatorFieldSpecified;

		private bool includesLastItemInRangeField;

		private bool includesLastItemInRangeFieldSpecified;

		private int totalItemsInViewField;

		private bool totalItemsInViewFieldSpecified;

		/// <remarks/>
		[XmlArrayItem("CalendarFolder", typeof(CalendarFolderType), IsNullable = false)]
		[XmlArrayItem("ContactsFolder", typeof(ContactsFolderType), IsNullable = false)]
		[XmlArrayItem("Folder", typeof(FolderType), IsNullable = false)]
		[XmlArrayItem("SearchFolder", typeof(SearchFolderType), IsNullable = false)]
		[XmlArrayItem("TasksFolder", typeof(TasksFolderType), IsNullable = false)]
		public BaseFolderType[] Folders
		{
			get { return foldersField; }
			set { foldersField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public int IndexedPagingOffset
		{
			get { return indexedPagingOffsetField; }
			set { indexedPagingOffsetField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IndexedPagingOffsetSpecified
		{
			get { return indexedPagingOffsetFieldSpecified; }
			set { indexedPagingOffsetFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public int NumeratorOffset
		{
			get { return numeratorOffsetField; }
			set { numeratorOffsetField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool NumeratorOffsetSpecified
		{
			get { return numeratorOffsetFieldSpecified; }
			set { numeratorOffsetFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public int AbsoluteDenominator
		{
			get { return absoluteDenominatorField; }
			set { absoluteDenominatorField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool AbsoluteDenominatorSpecified
		{
			get { return absoluteDenominatorFieldSpecified; }
			set { absoluteDenominatorFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public bool IncludesLastItemInRange
		{
			get { return includesLastItemInRangeField; }
			set { includesLastItemInRangeField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IncludesLastItemInRangeSpecified
		{
			get { return includesLastItemInRangeFieldSpecified; }
			set { includesLastItemInRangeFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public int TotalItemsInView
		{
			get { return totalItemsInViewField; }
			set { totalItemsInViewField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool TotalItemsInViewSpecified
		{
			get { return totalItemsInViewFieldSpecified; }
			set { totalItemsInViewFieldSpecified = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class FolderInfoResponseMessageType : ResponseMessageType
	{
		private BaseFolderType[] foldersField;

		/// <remarks/>
		[XmlArrayItem("CalendarFolder", typeof(CalendarFolderType),
			Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		[XmlArrayItem("ContactsFolder", typeof(ContactsFolderType),
			Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		[XmlArrayItem("Folder", typeof(FolderType), Namespace = "http://schemas.microsoft.com/exchange/services/2006/types",
			IsNullable = false)]
		[XmlArrayItem("SearchFolder", typeof(SearchFolderType),
			Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		[XmlArrayItem("TasksFolder", typeof(TasksFolderType),
			Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		public BaseFolderType[] Folders
		{
			get { return foldersField; }
			set { foldersField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class GetUserOofSettingsResponse
	{
		private ResponseMessageType responseMessageField;

		private UserOofSettings oofSettingsField;

		private ExternalAudience allowExternalOofField;

		private bool allowExternalOofFieldSpecified;

		/// <remarks/>
		public ResponseMessageType ResponseMessage
		{
			get { return responseMessageField; }
			set { responseMessageField = value; }
		}

		/// <remarks/>
		[XmlElement(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
		public UserOofSettings OofSettings
		{
			get { return oofSettingsField; }
			set { oofSettingsField = value; }
		}

		/// <remarks/>
		public ExternalAudience AllowExternalOof
		{
			get { return allowExternalOofField; }
			set { allowExternalOofField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool AllowExternalOofSpecified
		{
			get { return allowExternalOofFieldSpecified; }
			set { allowExternalOofFieldSpecified = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class UserOofSettings
	{
		private OofState oofStateField;

		private ExternalAudience externalAudienceField;

		private Duration durationField;

		private ReplyBody internalReplyField;

		private ReplyBody externalReplyField;

		/// <remarks/>
		public OofState OofState
		{
			get { return oofStateField; }
			set { oofStateField = value; }
		}

		/// <remarks/>
		public ExternalAudience ExternalAudience
		{
			get { return externalAudienceField; }
			set { externalAudienceField = value; }
		}

		/// <remarks/>
		public Duration Duration
		{
			get { return durationField; }
			set { durationField = value; }
		}

		/// <remarks/>
		public ReplyBody InternalReply
		{
			get { return internalReplyField; }
			set { internalReplyField = value; }
		}

		/// <remarks/>
		public ReplyBody ExternalReply
		{
			get { return externalReplyField; }
			set { externalReplyField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum OofState
	{
		/// <remarks/>
		Disabled,

		/// <remarks/>
		Enabled,

		/// <remarks/>
		Scheduled,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum ExternalAudience
	{
		/// <remarks/>
		None,

		/// <remarks/>
		Known,

		/// <remarks/>
		All,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class Duration
	{
		private DateTime startTimeField;

		private DateTime endTimeField;

		/// <remarks/>
		public DateTime StartTime
		{
			get { return startTimeField; }
			set { startTimeField = value; }
		}

		/// <remarks/>
		public DateTime EndTime
		{
			get { return endTimeField; }
			set { endTimeField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class ReplyBody
	{
		private string messageField;

		private string langField;

		/// <remarks/>
		public string Message
		{
			get { return messageField; }
			set { messageField = value; }
		}

		/// <remarks/>
		[XmlAttribute(Form = XmlSchemaForm.Qualified, Namespace = "http://www.w3.org/XML/1998/namespace")]
		public string lang
		{
			get { return langField; }
			set { langField = value; }
		}
	}

	/// <remarks/>
	[XmlInclude(typeof(GroupAttendeeConflictData))]
	[XmlInclude(typeof(IndividualAttendeeConflictData))]
	[XmlInclude(typeof(TooBigGroupAttendeeConflictData))]
	[XmlInclude(typeof(UnknownAttendeeConflictData))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public abstract partial class AttendeeConflictData
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class GroupAttendeeConflictData : AttendeeConflictData
	{
		private int numberOfMembersField;

		private int numberOfMembersAvailableField;

		private int numberOfMembersWithConflictField;

		private int numberOfMembersWithNoDataField;

		/// <remarks/>
		public int NumberOfMembers
		{
			get { return numberOfMembersField; }
			set { numberOfMembersField = value; }
		}

		/// <remarks/>
		public int NumberOfMembersAvailable
		{
			get { return numberOfMembersAvailableField; }
			set { numberOfMembersAvailableField = value; }
		}

		/// <remarks/>
		public int NumberOfMembersWithConflict
		{
			get { return numberOfMembersWithConflictField; }
			set { numberOfMembersWithConflictField = value; }
		}

		/// <remarks/>
		public int NumberOfMembersWithNoData
		{
			get { return numberOfMembersWithNoDataField; }
			set { numberOfMembersWithNoDataField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class IndividualAttendeeConflictData : AttendeeConflictData
	{
		private LegacyFreeBusyType busyTypeField;

		/// <remarks/>
		public LegacyFreeBusyType BusyType
		{
			get { return busyTypeField; }
			set { busyTypeField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class TooBigGroupAttendeeConflictData : AttendeeConflictData
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class UnknownAttendeeConflictData : AttendeeConflictData
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class Suggestion
	{
		private DateTime meetingTimeField;

		private bool isWorkTimeField;

		private SuggestionQuality suggestionQualityField;

		private AttendeeConflictData[] attendeeConflictDataArrayField;

		/// <remarks/>
		public DateTime MeetingTime
		{
			get { return meetingTimeField; }
			set { meetingTimeField = value; }
		}

		/// <remarks/>
		public bool IsWorkTime
		{
			get { return isWorkTimeField; }
			set { isWorkTimeField = value; }
		}

		/// <remarks/>
		public SuggestionQuality SuggestionQuality
		{
			get { return suggestionQualityField; }
			set { suggestionQualityField = value; }
		}

		/// <remarks/>
		[XmlArrayItem(typeof(GroupAttendeeConflictData))]
		[XmlArrayItem(typeof(IndividualAttendeeConflictData))]
		[XmlArrayItem(typeof(TooBigGroupAttendeeConflictData))]
		[XmlArrayItem(typeof(UnknownAttendeeConflictData))]
		public AttendeeConflictData[] AttendeeConflictDataArray
		{
			get { return attendeeConflictDataArrayField; }
			set { attendeeConflictDataArrayField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum SuggestionQuality
	{
		/// <remarks/>
		Excellent,

		/// <remarks/>
		Good,

		/// <remarks/>
		Fair,

		/// <remarks/>
		Poor,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class SuggestionDayResult
	{
		private DateTime dateField;

		private SuggestionQuality dayQualityField;

		private Suggestion[] suggestionArrayField;

		/// <remarks/>
		public DateTime Date
		{
			get { return dateField; }
			set { dateField = value; }
		}

		/// <remarks/>
		public SuggestionQuality DayQuality
		{
			get { return dayQualityField; }
			set { dayQualityField = value; }
		}

		/// <remarks/>
		[XmlArrayItem(IsNullable = false)]
		public Suggestion[] SuggestionArray
		{
			get { return suggestionArrayField; }
			set { suggestionArrayField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class SuggestionsResponseType
	{
		private ResponseMessageType responseMessageField;

		private SuggestionDayResult[] suggestionDayResultArrayField;

		/// <remarks/>
		public ResponseMessageType ResponseMessage
		{
			get { return responseMessageField; }
			set { responseMessageField = value; }
		}

		/// <remarks/>
		[XmlArrayItem(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		public SuggestionDayResult[] SuggestionDayResultArray
		{
			get { return suggestionDayResultArrayField; }
			set { suggestionDayResultArrayField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class WorkingPeriod
	{
		private string dayOfWeekField;

		private int startTimeInMinutesField;

		private int endTimeInMinutesField;

		/// <remarks/>
		public string DayOfWeek
		{
			get { return dayOfWeekField; }
			set { dayOfWeekField = value; }
		}

		/// <remarks/>
		public int StartTimeInMinutes
		{
			get { return startTimeInMinutesField; }
			set { startTimeInMinutesField = value; }
		}

		/// <remarks/>
		public int EndTimeInMinutes
		{
			get { return endTimeInMinutesField; }
			set { endTimeInMinutesField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class WorkingHours
	{
		private SerializableTimeZone timeZoneField;

		private WorkingPeriod[] workingPeriodArrayField;

		/// <remarks/>
		public SerializableTimeZone TimeZone
		{
			get { return timeZoneField; }
			set { timeZoneField = value; }
		}

		/// <remarks/>
		[XmlArrayItem(IsNullable = false)]
		public WorkingPeriod[] WorkingPeriodArray
		{
			get { return workingPeriodArrayField; }
			set { workingPeriodArrayField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class SerializableTimeZone
	{
		private int biasField;

		private SerializableTimeZoneTime standardTimeField;

		private SerializableTimeZoneTime daylightTimeField;

		/// <remarks/>
		public int Bias
		{
			get { return biasField; }
			set { biasField = value; }
		}

		/// <remarks/>
		public SerializableTimeZoneTime StandardTime
		{
			get { return standardTimeField; }
			set { standardTimeField = value; }
		}

		/// <remarks/>
		public SerializableTimeZoneTime DaylightTime
		{
			get { return daylightTimeField; }
			set { daylightTimeField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class SerializableTimeZoneTime
	{
		private int biasField;

		private string timeField;

		private short dayOrderField;

		private short monthField;

		private string dayOfWeekField;

		private string yearField;

		/// <remarks/>
		public int Bias
		{
			get { return biasField; }
			set { biasField = value; }
		}

		/// <remarks/>
		public string Time
		{
			get { return timeField; }
			set { timeField = value; }
		}

		/// <remarks/>
		public short DayOrder
		{
			get { return dayOrderField; }
			set { dayOrderField = value; }
		}

		/// <remarks/>
		public short Month
		{
			get { return monthField; }
			set { monthField = value; }
		}

		/// <remarks/>
		public string DayOfWeek
		{
			get { return dayOfWeekField; }
			set { dayOfWeekField = value; }
		}

		/// <remarks/>
		public string Year
		{
			get { return yearField; }
			set { yearField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class CalendarEventDetails
	{
		private string idField;

		private string subjectField;

		private string locationField;

		private bool isMeetingField;

		private bool isRecurringField;

		private bool isExceptionField;

		private bool isReminderSetField;

		private bool isPrivateField;

		/// <remarks/>
		public string ID
		{
			get { return idField; }
			set { idField = value; }
		}

		/// <remarks/>
		public string Subject
		{
			get { return subjectField; }
			set { subjectField = value; }
		}

		/// <remarks/>
		public string Location
		{
			get { return locationField; }
			set { locationField = value; }
		}

		/// <remarks/>
		public bool IsMeeting
		{
			get { return isMeetingField; }
			set { isMeetingField = value; }
		}

		/// <remarks/>
		public bool IsRecurring
		{
			get { return isRecurringField; }
			set { isRecurringField = value; }
		}

		/// <remarks/>
		public bool IsException
		{
			get { return isExceptionField; }
			set { isExceptionField = value; }
		}

		/// <remarks/>
		public bool IsReminderSet
		{
			get { return isReminderSetField; }
			set { isReminderSetField = value; }
		}

		/// <remarks/>
		public bool IsPrivate
		{
			get { return isPrivateField; }
			set { isPrivateField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class CalendarEvent
	{
		private DateTime startTimeField;

		private DateTime endTimeField;

		private LegacyFreeBusyType busyTypeField;

		private CalendarEventDetails calendarEventDetailsField;

		/// <remarks/>
		public DateTime StartTime
		{
			get { return startTimeField; }
			set { startTimeField = value; }
		}

		/// <remarks/>
		public DateTime EndTime
		{
			get { return endTimeField; }
			set { endTimeField = value; }
		}

		/// <remarks/>
		public LegacyFreeBusyType BusyType
		{
			get { return busyTypeField; }
			set { busyTypeField = value; }
		}

		/// <remarks/>
		public CalendarEventDetails CalendarEventDetails
		{
			get { return calendarEventDetailsField; }
			set { calendarEventDetailsField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class FreeBusyView
	{
		private FreeBusyViewType freeBusyViewTypeField;

		private string mergedFreeBusyField;

		private CalendarEvent[] calendarEventArrayField;

		private WorkingHours workingHoursField;

		/// <remarks/>
		public FreeBusyViewType FreeBusyViewType
		{
			get { return freeBusyViewTypeField; }
			set { freeBusyViewTypeField = value; }
		}

		/// <remarks/>
		public string MergedFreeBusy
		{
			get { return mergedFreeBusyField; }
			set { mergedFreeBusyField = value; }
		}

		/// <remarks/>
		[XmlArrayItem(IsNullable = false)]
		public CalendarEvent[] CalendarEventArray
		{
			get { return calendarEventArrayField; }
			set { calendarEventArrayField = value; }
		}

		/// <remarks/>
		public WorkingHours WorkingHours
		{
			get { return workingHoursField; }
			set { workingHoursField = value; }
		}
	}

	/// <remarks/>
	[Flags()]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum FreeBusyViewType
	{
		/// <remarks/>
		None = 1,

		/// <remarks/>
		MergedOnly = 2,

		/// <remarks/>
		FreeBusy = 4,

		/// <remarks/>
		FreeBusyMerged = 8,

		/// <remarks/>
		Detailed = 16,

		/// <remarks/>
		DetailedMerged = 32,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class FreeBusyResponseType
	{
		private ResponseMessageType responseMessageField;

		private FreeBusyView freeBusyViewField;

		/// <remarks/>
		public ResponseMessageType ResponseMessage
		{
			get { return responseMessageField; }
			set { responseMessageField = value; }
		}

		/// <remarks/>
		public FreeBusyView FreeBusyView
		{
			get { return freeBusyViewField; }
			set { freeBusyViewField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class GetUserAvailabilityResponseType
	{
		private FreeBusyResponseType[] freeBusyResponseArrayField;

		private SuggestionsResponseType suggestionsResponseField;

		/// <remarks/>
		[XmlArrayItem("FreeBusyResponse", IsNullable = false)]
		public FreeBusyResponseType[] FreeBusyResponseArray
		{
			get { return freeBusyResponseArrayField; }
			set { freeBusyResponseArrayField = value; }
		}

		/// <remarks/>
		public SuggestionsResponseType SuggestionsResponse
		{
			get { return suggestionsResponseField; }
			set { suggestionsResponseField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class ArrayOfResponseMessagesType
	{
		private ResponseMessageType[] itemsField;

		private ItemsChoiceType3[] itemsElementNameField;

		/// <remarks/>
		[XmlElement("ConvertIdResponseMessage", typeof(ConvertIdResponseMessageType))]
		[XmlElement("CopyFolderResponseMessage", typeof(FolderInfoResponseMessageType))]
		[XmlElement("CopyItemResponseMessage", typeof(ItemInfoResponseMessageType))]
		[XmlElement("CreateAttachmentResponseMessage", typeof(AttachmentInfoResponseMessageType))]
		[XmlElement("CreateFolderResponseMessage", typeof(FolderInfoResponseMessageType))]
		[XmlElement("CreateItemResponseMessage", typeof(ItemInfoResponseMessageType))]
		[XmlElement("CreateManagedFolderResponseMessage", typeof(FolderInfoResponseMessageType))]
		[XmlElement("DeleteAttachmentResponseMessage", typeof(DeleteAttachmentResponseMessageType))]
		[XmlElement("DeleteFolderResponseMessage", typeof(ResponseMessageType))]
		[XmlElement("DeleteItemResponseMessage", typeof(ResponseMessageType))]
		[XmlElement("ExpandDLResponseMessage", typeof(ExpandDLResponseMessageType))]
		[XmlElement("FindFolderResponseMessage", typeof(FindFolderResponseMessageType))]
		[XmlElement("FindItemResponseMessage", typeof(FindItemResponseMessageType))]
		[XmlElement("GetAttachmentResponseMessage", typeof(AttachmentInfoResponseMessageType))]
		[XmlElement("GetEventsResponseMessage", typeof(GetEventsResponseMessageType))]
		[XmlElement("GetFolderResponseMessage", typeof(FolderInfoResponseMessageType))]
		[XmlElement("GetItemResponseMessage", typeof(ItemInfoResponseMessageType))]
		[XmlElement("MoveFolderResponseMessage", typeof(FolderInfoResponseMessageType))]
		[XmlElement("MoveItemResponseMessage", typeof(ItemInfoResponseMessageType))]
		[XmlElement("ResolveNamesResponseMessage", typeof(ResolveNamesResponseMessageType))]
		[XmlElement("SendItemResponseMessage", typeof(ResponseMessageType))]
		[XmlElement("SendNotificationResponseMessage", typeof(SendNotificationResponseMessageType))]
		[XmlElement("SubscribeResponseMessage", typeof(SubscribeResponseMessageType))]
		[XmlElement("SyncFolderHierarchyResponseMessage", typeof(SyncFolderHierarchyResponseMessageType))]
		[XmlElement("SyncFolderItemsResponseMessage", typeof(SyncFolderItemsResponseMessageType))]
		[XmlElement("UnsubscribeResponseMessage", typeof(ResponseMessageType))]
		[XmlElement("UpdateFolderResponseMessage", typeof(FolderInfoResponseMessageType))]
		[XmlElement("UpdateItemResponseMessage", typeof(UpdateItemResponseMessageType))]
		[XmlChoiceIdentifier("ItemsElementName")]
		public ResponseMessageType[] Items
		{
			get { return itemsField; }
			set { itemsField = value; }
		}

		/// <remarks/>
		[XmlElement("ItemsElementName")]
		[XmlIgnore()]
		public ItemsChoiceType3[] ItemsElementName
		{
			get { return itemsElementNameField; }
			set { itemsElementNameField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages", IncludeInSchema = false)]
	public enum ItemsChoiceType3
	{
		/// <remarks/>
		ConvertIdResponseMessage,

		/// <remarks/>
		CopyFolderResponseMessage,

		/// <remarks/>
		CopyItemResponseMessage,

		/// <remarks/>
		CreateAttachmentResponseMessage,

		/// <remarks/>
		CreateFolderResponseMessage,

		/// <remarks/>
		CreateItemResponseMessage,

		/// <remarks/>
		CreateManagedFolderResponseMessage,

		/// <remarks/>
		DeleteAttachmentResponseMessage,

		/// <remarks/>
		DeleteFolderResponseMessage,

		/// <remarks/>
		DeleteItemResponseMessage,

		/// <remarks/>
		ExpandDLResponseMessage,

		/// <remarks/>
		FindFolderResponseMessage,

		/// <remarks/>
		FindItemResponseMessage,

		/// <remarks/>
		GetAttachmentResponseMessage,

		/// <remarks/>
		GetEventsResponseMessage,

		/// <remarks/>
		GetFolderResponseMessage,

		/// <remarks/>
		GetItemResponseMessage,

		/// <remarks/>
		MoveFolderResponseMessage,

		/// <remarks/>
		MoveItemResponseMessage,

		/// <remarks/>
		ResolveNamesResponseMessage,

		/// <remarks/>
		SendItemResponseMessage,

		/// <remarks/>
		SendNotificationResponseMessage,

		/// <remarks/>
		SubscribeResponseMessage,

		/// <remarks/>
		SyncFolderHierarchyResponseMessage,

		/// <remarks/>
		SyncFolderItemsResponseMessage,

		/// <remarks/>
		UnsubscribeResponseMessage,

		/// <remarks/>
		UpdateFolderResponseMessage,

		/// <remarks/>
		UpdateItemResponseMessage,
	}

	/// <remarks/>
	[XmlInclude(typeof(ConvertIdResponseType))]
	[XmlInclude(typeof(SyncFolderItemsResponseType))]
	[XmlInclude(typeof(SyncFolderHierarchyResponseType))]
	[XmlInclude(typeof(SendNotificationResponseType))]
	[XmlInclude(typeof(GetEventsResponseType))]
	[XmlInclude(typeof(UnsubscribeResponseType))]
	[XmlInclude(typeof(SubscribeResponseType))]
	[XmlInclude(typeof(CreateManagedFolderResponseType))]
	[XmlInclude(typeof(ExpandDLResponseType))]
	[XmlInclude(typeof(ResolveNamesResponseType))]
	[XmlInclude(typeof(FindItemResponseType))]
	[XmlInclude(typeof(DeleteItemResponseType))]
	[XmlInclude(typeof(CopyItemResponseType))]
	[XmlInclude(typeof(MoveItemResponseType))]
	[XmlInclude(typeof(GetItemResponseType))]
	[XmlInclude(typeof(UpdateItemResponseType))]
	[XmlInclude(typeof(CreateItemResponseType))]
	[XmlInclude(typeof(GetAttachmentResponseType))]
	[XmlInclude(typeof(DeleteAttachmentResponseType))]
	[XmlInclude(typeof(CreateAttachmentResponseType))]
	[XmlInclude(typeof(SendItemResponseType))]
	[XmlInclude(typeof(CopyFolderResponseType))]
	[XmlInclude(typeof(MoveFolderResponseType))]
	[XmlInclude(typeof(UpdateFolderResponseType))]
	[XmlInclude(typeof(GetFolderResponseType))]
	[XmlInclude(typeof(CreateFolderResponseType))]
	[XmlInclude(typeof(DeleteFolderResponseType))]
	[XmlInclude(typeof(FindFolderResponseType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class BaseResponseMessageType
	{
		private ArrayOfResponseMessagesType responseMessagesField;

		/// <remarks/>
		public ArrayOfResponseMessagesType ResponseMessages
		{
			get { return responseMessagesField; }
			set { responseMessagesField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class ConvertIdResponseType : BaseResponseMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class SyncFolderItemsResponseType : BaseResponseMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class SyncFolderHierarchyResponseType : BaseResponseMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class SendNotificationResponseType : BaseResponseMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class GetEventsResponseType : BaseResponseMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class UnsubscribeResponseType : BaseResponseMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class SubscribeResponseType : BaseResponseMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class CreateManagedFolderResponseType : BaseResponseMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class ExpandDLResponseType : BaseResponseMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class ResolveNamesResponseType : BaseResponseMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class FindItemResponseType : BaseResponseMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class DeleteItemResponseType : BaseResponseMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class CopyItemResponseType : BaseResponseMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class MoveItemResponseType : BaseResponseMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class GetItemResponseType : BaseResponseMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class UpdateItemResponseType : BaseResponseMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class CreateItemResponseType : BaseResponseMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class GetAttachmentResponseType : BaseResponseMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class DeleteAttachmentResponseType : BaseResponseMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class CreateAttachmentResponseType : BaseResponseMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class SendItemResponseType : BaseResponseMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class CopyFolderResponseType : BaseResponseMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class MoveFolderResponseType : BaseResponseMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class UpdateFolderResponseType : BaseResponseMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class GetFolderResponseType : BaseResponseMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class CreateFolderResponseType : BaseResponseMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class DeleteFolderResponseType : BaseResponseMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class FindFolderResponseType : BaseResponseMessageType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class SuggestionsViewOptionsType
	{
		private int goodThresholdField;

		private bool goodThresholdFieldSpecified;

		private int maximumResultsByDayField;

		private bool maximumResultsByDayFieldSpecified;

		private int maximumNonWorkHourResultsByDayField;

		private bool maximumNonWorkHourResultsByDayFieldSpecified;

		private int meetingDurationInMinutesField;

		private bool meetingDurationInMinutesFieldSpecified;

		private SuggestionQuality minimumSuggestionQualityField;

		private bool minimumSuggestionQualityFieldSpecified;

		private Duration detailedSuggestionsWindowField;

		private DateTime currentMeetingTimeField;

		private bool currentMeetingTimeFieldSpecified;

		private string globalObjectIdField;

		/// <remarks/>
		public int GoodThreshold
		{
			get { return goodThresholdField; }
			set { goodThresholdField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool GoodThresholdSpecified
		{
			get { return goodThresholdFieldSpecified; }
			set { goodThresholdFieldSpecified = value; }
		}

		/// <remarks/>
		public int MaximumResultsByDay
		{
			get { return maximumResultsByDayField; }
			set { maximumResultsByDayField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool MaximumResultsByDaySpecified
		{
			get { return maximumResultsByDayFieldSpecified; }
			set { maximumResultsByDayFieldSpecified = value; }
		}

		/// <remarks/>
		public int MaximumNonWorkHourResultsByDay
		{
			get { return maximumNonWorkHourResultsByDayField; }
			set { maximumNonWorkHourResultsByDayField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool MaximumNonWorkHourResultsByDaySpecified
		{
			get { return maximumNonWorkHourResultsByDayFieldSpecified; }
			set { maximumNonWorkHourResultsByDayFieldSpecified = value; }
		}

		/// <remarks/>
		public int MeetingDurationInMinutes
		{
			get { return meetingDurationInMinutesField; }
			set { meetingDurationInMinutesField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool MeetingDurationInMinutesSpecified
		{
			get { return meetingDurationInMinutesFieldSpecified; }
			set { meetingDurationInMinutesFieldSpecified = value; }
		}

		/// <remarks/>
		public SuggestionQuality MinimumSuggestionQuality
		{
			get { return minimumSuggestionQualityField; }
			set { minimumSuggestionQualityField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool MinimumSuggestionQualitySpecified
		{
			get { return minimumSuggestionQualityFieldSpecified; }
			set { minimumSuggestionQualityFieldSpecified = value; }
		}

		/// <remarks/>
		public Duration DetailedSuggestionsWindow
		{
			get { return detailedSuggestionsWindowField; }
			set { detailedSuggestionsWindowField = value; }
		}

		/// <remarks/>
		public DateTime CurrentMeetingTime
		{
			get { return currentMeetingTimeField; }
			set { currentMeetingTimeField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool CurrentMeetingTimeSpecified
		{
			get { return currentMeetingTimeFieldSpecified; }
			set { currentMeetingTimeFieldSpecified = value; }
		}

		/// <remarks/>
		public string GlobalObjectId
		{
			get { return globalObjectIdField; }
			set { globalObjectIdField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class FreeBusyViewOptionsType
	{
		private Duration timeWindowField;

		private int mergedFreeBusyIntervalInMinutesField;

		private bool mergedFreeBusyIntervalInMinutesFieldSpecified;

		private FreeBusyViewType requestedViewField;

		private bool requestedViewFieldSpecified;

		/// <remarks/>
		public Duration TimeWindow
		{
			get { return timeWindowField; }
			set { timeWindowField = value; }
		}

		/// <remarks/>
		public int MergedFreeBusyIntervalInMinutes
		{
			get { return mergedFreeBusyIntervalInMinutesField; }
			set { mergedFreeBusyIntervalInMinutesField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool MergedFreeBusyIntervalInMinutesSpecified
		{
			get { return mergedFreeBusyIntervalInMinutesFieldSpecified; }
			set { mergedFreeBusyIntervalInMinutesFieldSpecified = value; }
		}

		/// <remarks/>
		public FreeBusyViewType RequestedView
		{
			get { return requestedViewField; }
			set { requestedViewField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool RequestedViewSpecified
		{
			get { return requestedViewFieldSpecified; }
			set { requestedViewFieldSpecified = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class EmailAddress
	{
		private string nameField;

		private string addressField;

		private string routingTypeField;

		/// <remarks/>
		public string Name
		{
			get { return nameField; }
			set { nameField = value; }
		}

		/// <remarks/>
		public string Address
		{
			get { return addressField; }
			set { addressField = value; }
		}

		/// <remarks/>
		public string RoutingType
		{
			get { return routingTypeField; }
			set { routingTypeField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class MailboxData
	{
		private EmailAddress emailField;

		private MeetingAttendeeType attendeeTypeField;

		private bool excludeConflictsField;

		private bool excludeConflictsFieldSpecified;

		/// <remarks/>
		public EmailAddress Email
		{
			get { return emailField; }
			set { emailField = value; }
		}

		/// <remarks/>
		public MeetingAttendeeType AttendeeType
		{
			get { return attendeeTypeField; }
			set { attendeeTypeField = value; }
		}

		/// <remarks/>
		public bool ExcludeConflicts
		{
			get { return excludeConflictsField; }
			set { excludeConflictsField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool ExcludeConflictsSpecified
		{
			get { return excludeConflictsFieldSpecified; }
			set { excludeConflictsFieldSpecified = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum MeetingAttendeeType
	{
		/// <remarks/>
		Organizer,

		/// <remarks/>
		Required,

		/// <remarks/>
		Optional,

		/// <remarks/>
		Room,

		/// <remarks/>
		Resource,
	}

	/// <remarks/>
	[XmlInclude(typeof(PullSubscriptionRequestType))]
	[XmlInclude(typeof(PushSubscriptionRequestType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public abstract partial class BaseSubscriptionRequestType
	{
		private BaseFolderIdType[] folderIdsField;

		private NotificationEventTypeType[] eventTypesField;

		private string watermarkField;

		/// <remarks/>
		[XmlArrayItem("DistinguishedFolderId", typeof(DistinguishedFolderIdType), IsNullable = false)]
		[XmlArrayItem("FolderId", typeof(FolderIdType), IsNullable = false)]
		public BaseFolderIdType[] FolderIds
		{
			get { return folderIdsField; }
			set { folderIdsField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("EventType", IsNullable = false)]
		public NotificationEventTypeType[] EventTypes
		{
			get { return eventTypesField; }
			set { eventTypesField = value; }
		}

		/// <remarks/>
		public string Watermark
		{
			get { return watermarkField; }
			set { watermarkField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum NotificationEventTypeType
	{
		/// <remarks/>
		CopiedEvent,

		/// <remarks/>
		CreatedEvent,

		/// <remarks/>
		DeletedEvent,

		/// <remarks/>
		ModifiedEvent,

		/// <remarks/>
		MovedEvent,

		/// <remarks/>
		NewMailEvent,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class PullSubscriptionRequestType : BaseSubscriptionRequestType
	{
		private int timeoutField;

		/// <remarks/>
		public int Timeout
		{
			get { return timeoutField; }
			set { timeoutField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class PushSubscriptionRequestType : BaseSubscriptionRequestType
	{
		private int statusFrequencyField;

		private string uRLField;

		/// <remarks/>
		public int StatusFrequency
		{
			get { return statusFrequencyField; }
			set { statusFrequencyField = value; }
		}

		/// <remarks/>
		public string URL
		{
			get { return uRLField; }
			set { uRLField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class AttachmentResponseShapeType
	{
		private bool includeMimeContentField;

		private bool includeMimeContentFieldSpecified;

		private BodyTypeResponseType bodyTypeField;

		private bool bodyTypeFieldSpecified;

		private BasePathToElementType[] additionalPropertiesField;

		/// <remarks/>
		public bool IncludeMimeContent
		{
			get { return includeMimeContentField; }
			set { includeMimeContentField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IncludeMimeContentSpecified
		{
			get { return includeMimeContentFieldSpecified; }
			set { includeMimeContentFieldSpecified = value; }
		}

		/// <remarks/>
		public BodyTypeResponseType BodyType
		{
			get { return bodyTypeField; }
			set { bodyTypeField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool BodyTypeSpecified
		{
			get { return bodyTypeFieldSpecified; }
			set { bodyTypeFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlArrayItem("ExtendedFieldURI", typeof(PathToExtendedFieldType), IsNullable = false)]
		[XmlArrayItem("FieldURI", typeof(PathToUnindexedFieldType), IsNullable = false)]
		[XmlArrayItem("IndexedFieldURI", typeof(PathToIndexedFieldType), IsNullable = false)]
		[XmlArrayItem("Path", IsNullable = false)]
		public BasePathToElementType[] AdditionalProperties
		{
			get { return additionalPropertiesField; }
			set { additionalPropertiesField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum BodyTypeResponseType
	{
		/// <remarks/>
		Best,

		/// <remarks/>
		HTML,

		/// <remarks/>
		Text,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class FieldOrderType
	{
		private BasePathToElementType itemField;

		private SortDirectionType orderField;

		/// <remarks/>
		[XmlElement("ExtendedFieldURI", typeof(PathToExtendedFieldType))]
		[XmlElement("FieldURI", typeof(PathToUnindexedFieldType))]
		[XmlElement("IndexedFieldURI", typeof(PathToIndexedFieldType))]
		public BasePathToElementType Item
		{
			get { return itemField; }
			set { itemField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public SortDirectionType Order
		{
			get { return orderField; }
			set { orderField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum SortDirectionType
	{
		/// <remarks/>
		Ascending,

		/// <remarks/>
		Descending,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class AggregateOnType
	{
		private BasePathToElementType itemField;

		private AggregateType aggregateField;

		/// <remarks/>
		[XmlElement("ExtendedFieldURI", typeof(PathToExtendedFieldType))]
		[XmlElement("FieldURI", typeof(PathToUnindexedFieldType))]
		[XmlElement("IndexedFieldURI", typeof(PathToIndexedFieldType))]
		public BasePathToElementType Item
		{
			get { return itemField; }
			set { itemField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public AggregateType Aggregate
		{
			get { return aggregateField; }
			set { aggregateField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum AggregateType
	{
		/// <remarks/>
		Minimum,

		/// <remarks/>
		Maximum,
	}

	/// <remarks/>
	[XmlInclude(typeof(DistinguishedGroupByType))]
	[XmlInclude(typeof(GroupByType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public abstract partial class BaseGroupByType
	{
		private SortDirectionType orderField;

		/// <remarks/>
		[XmlAttribute()]
		public SortDirectionType Order
		{
			get { return orderField; }
			set { orderField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class DistinguishedGroupByType : BaseGroupByType
	{
		private StandardGroupByType standardGroupByField;

		/// <remarks/>
		public StandardGroupByType StandardGroupBy
		{
			get { return standardGroupByField; }
			set { standardGroupByField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum StandardGroupByType
	{
		/// <remarks/>
		ConversationTopic,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class GroupByType : BaseGroupByType
	{
		private BasePathToElementType itemField;

		private AggregateOnType aggregateOnField;

		/// <remarks/>
		[XmlElement("ExtendedFieldURI", typeof(PathToExtendedFieldType))]
		[XmlElement("FieldURI", typeof(PathToUnindexedFieldType))]
		[XmlElement("IndexedFieldURI", typeof(PathToIndexedFieldType))]
		public BasePathToElementType Item
		{
			get { return itemField; }
			set { itemField = value; }
		}

		/// <remarks/>
		public AggregateOnType AggregateOn
		{
			get { return aggregateOnField; }
			set { aggregateOnField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class ItemChangeType
	{
		private BaseItemIdType itemField;

		private ItemChangeDescriptionType[] updatesField;

		/// <remarks/>
		[XmlElement("ItemId", typeof(ItemIdType))]
		[XmlElement("OccurrenceItemId", typeof(OccurrenceItemIdType))]
		[XmlElement("RecurringMasterItemId", typeof(RecurringMasterItemIdType))]
		public BaseItemIdType Item
		{
			get { return itemField; }
			set { itemField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("AppendToItemField", typeof(AppendToItemFieldType), IsNullable = false)]
		[XmlArrayItem("DeleteItemField", typeof(DeleteItemFieldType), IsNullable = false)]
		[XmlArrayItem("SetItemField", typeof(SetItemFieldType), IsNullable = false)]
		public ItemChangeDescriptionType[] Updates
		{
			get { return updatesField; }
			set { updatesField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class AppendToItemFieldType : ItemChangeDescriptionType
	{
		private ItemType item1Field;

		/// <remarks/>
		[XmlElement("CalendarItem", typeof(CalendarItemType))]
		[XmlElement("Contact", typeof(ContactItemType))]
		[XmlElement("DistributionList", typeof(DistributionListType))]
		[XmlElement("Item", typeof(ItemType))]
		[XmlElement("MeetingCancellation", typeof(MeetingCancellationMessageType))]
		[XmlElement("MeetingMessage", typeof(MeetingMessageType))]
		[XmlElement("MeetingRequest", typeof(MeetingRequestMessageType))]
		[XmlElement("MeetingResponse", typeof(MeetingResponseMessageType))]
		[XmlElement("Message", typeof(MessageType))]
		[XmlElement("PostItem", typeof(PostItemType))]
		[XmlElement("Task", typeof(TaskType))]
		public ItemType Item1
		{
			get { return item1Field; }
			set { item1Field = value; }
		}
	}

	/// <remarks/>
	[XmlInclude(typeof(AppendToItemFieldType))]
	[XmlInclude(typeof(DeleteItemFieldType))]
	[XmlInclude(typeof(SetItemFieldType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class ItemChangeDescriptionType : ChangeDescriptionType
	{
	}

	/// <remarks/>
	[XmlInclude(typeof(FolderChangeDescriptionType))]
	[XmlInclude(typeof(AppendToFolderFieldType))]
	[XmlInclude(typeof(DeleteFolderFieldType))]
	[XmlInclude(typeof(SetFolderFieldType))]
	[XmlInclude(typeof(ItemChangeDescriptionType))]
	[XmlInclude(typeof(AppendToItemFieldType))]
	[XmlInclude(typeof(DeleteItemFieldType))]
	[XmlInclude(typeof(SetItemFieldType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public abstract partial class ChangeDescriptionType
	{
		private BasePathToElementType itemField;

		/// <remarks/>
		[XmlElement("ExtendedFieldURI", typeof(PathToExtendedFieldType))]
		[XmlElement("FieldURI", typeof(PathToUnindexedFieldType))]
		[XmlElement("IndexedFieldURI", typeof(PathToIndexedFieldType))]
		public BasePathToElementType Item
		{
			get { return itemField; }
			set { itemField = value; }
		}
	}

	/// <remarks/>
	[XmlInclude(typeof(AppendToFolderFieldType))]
	[XmlInclude(typeof(DeleteFolderFieldType))]
	[XmlInclude(typeof(SetFolderFieldType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class FolderChangeDescriptionType : ChangeDescriptionType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class AppendToFolderFieldType : FolderChangeDescriptionType
	{
		private BaseFolderType item1Field;

		/// <remarks/>
		[XmlElement("CalendarFolder", typeof(CalendarFolderType))]
		[XmlElement("ContactsFolder", typeof(ContactsFolderType))]
		[XmlElement("Folder", typeof(FolderType))]
		[XmlElement("SearchFolder", typeof(SearchFolderType))]
		[XmlElement("TasksFolder", typeof(TasksFolderType))]
		public BaseFolderType Item1
		{
			get { return item1Field; }
			set { item1Field = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class DeleteFolderFieldType : FolderChangeDescriptionType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class SetFolderFieldType : FolderChangeDescriptionType
	{
		private BaseFolderType item1Field;

		/// <remarks/>
		[XmlElement("CalendarFolder", typeof(CalendarFolderType))]
		[XmlElement("ContactsFolder", typeof(ContactsFolderType))]
		[XmlElement("Folder", typeof(FolderType))]
		[XmlElement("SearchFolder", typeof(SearchFolderType))]
		[XmlElement("TasksFolder", typeof(TasksFolderType))]
		public BaseFolderType Item1
		{
			get { return item1Field; }
			set { item1Field = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class DeleteItemFieldType : ItemChangeDescriptionType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class SetItemFieldType : ItemChangeDescriptionType
	{
		private ItemType item1Field;

		/// <remarks/>
		[XmlElement("CalendarItem", typeof(CalendarItemType))]
		[XmlElement("Contact", typeof(ContactItemType))]
		[XmlElement("DistributionList", typeof(DistributionListType))]
		[XmlElement("Item", typeof(ItemType))]
		[XmlElement("MeetingCancellation", typeof(MeetingCancellationMessageType))]
		[XmlElement("MeetingMessage", typeof(MeetingMessageType))]
		[XmlElement("MeetingRequest", typeof(MeetingRequestMessageType))]
		[XmlElement("MeetingResponse", typeof(MeetingResponseMessageType))]
		[XmlElement("Message", typeof(MessageType))]
		[XmlElement("PostItem", typeof(PostItemType))]
		[XmlElement("Task", typeof(TaskType))]
		public ItemType Item1
		{
			get { return item1Field; }
			set { item1Field = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class ItemResponseShapeType
	{
		private DefaultShapeNamesType baseShapeField;

		private bool includeMimeContentField;

		private bool includeMimeContentFieldSpecified;

		private BodyTypeResponseType bodyTypeField;

		private bool bodyTypeFieldSpecified;

		private BasePathToElementType[] additionalPropertiesField;

		/// <remarks/>
		public DefaultShapeNamesType BaseShape
		{
			get { return baseShapeField; }
			set { baseShapeField = value; }
		}

		/// <remarks/>
		public bool IncludeMimeContent
		{
			get { return includeMimeContentField; }
			set { includeMimeContentField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool IncludeMimeContentSpecified
		{
			get { return includeMimeContentFieldSpecified; }
			set { includeMimeContentFieldSpecified = value; }
		}

		/// <remarks/>
		public BodyTypeResponseType BodyType
		{
			get { return bodyTypeField; }
			set { bodyTypeField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool BodyTypeSpecified
		{
			get { return bodyTypeFieldSpecified; }
			set { bodyTypeFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlArrayItem("ExtendedFieldURI", typeof(PathToExtendedFieldType), IsNullable = false)]
		[XmlArrayItem("FieldURI", typeof(PathToUnindexedFieldType), IsNullable = false)]
		[XmlArrayItem("IndexedFieldURI", typeof(PathToIndexedFieldType), IsNullable = false)]
		[XmlArrayItem("Path", IsNullable = false)]
		public BasePathToElementType[] AdditionalProperties
		{
			get { return additionalPropertiesField; }
			set { additionalPropertiesField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum DefaultShapeNamesType
	{
		/// <remarks/>
		IdOnly,

		/// <remarks/>
		Default,

		/// <remarks/>
		AllProperties,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class FolderChangeType
	{
		private BaseFolderIdType itemField;

		private FolderChangeDescriptionType[] updatesField;

		/// <remarks/>
		[XmlElement("DistinguishedFolderId", typeof(DistinguishedFolderIdType))]
		[XmlElement("FolderId", typeof(FolderIdType))]
		public BaseFolderIdType Item
		{
			get { return itemField; }
			set { itemField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("AppendToFolderField", typeof(AppendToFolderFieldType), IsNullable = false)]
		[XmlArrayItem("DeleteFolderField", typeof(DeleteFolderFieldType), IsNullable = false)]
		[XmlArrayItem("SetFolderField", typeof(SetFolderFieldType), IsNullable = false)]
		public FolderChangeDescriptionType[] Updates
		{
			get { return updatesField; }
			set { updatesField = value; }
		}
	}

	/// <remarks/>
	[XmlInclude(typeof(ContactsViewType))]
	[XmlInclude(typeof(CalendarViewType))]
	[XmlInclude(typeof(FractionalPageViewType))]
	[XmlInclude(typeof(IndexedPageViewType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public abstract partial class BasePagingType
	{
		private int maxEntriesReturnedField;

		private bool maxEntriesReturnedFieldSpecified;

		/// <remarks/>
		[XmlAttribute()]
		public int MaxEntriesReturned
		{
			get { return maxEntriesReturnedField; }
			set { maxEntriesReturnedField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool MaxEntriesReturnedSpecified
		{
			get { return maxEntriesReturnedFieldSpecified; }
			set { maxEntriesReturnedFieldSpecified = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class ContactsViewType : BasePagingType
	{
		private string initialNameField;

		private string finalNameField;

		/// <remarks/>
		[XmlAttribute()]
		public string InitialName
		{
			get { return initialNameField; }
			set { initialNameField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public string FinalName
		{
			get { return finalNameField; }
			set { finalNameField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class CalendarViewType : BasePagingType
	{
		private DateTime startDateField;

		private DateTime endDateField;

		/// <remarks/>
		[XmlAttribute()]
		public DateTime StartDate
		{
			get { return startDateField; }
			set { startDateField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public DateTime EndDate
		{
			get { return endDateField; }
			set { endDateField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class FractionalPageViewType : BasePagingType
	{
		private int numeratorField;

		private int denominatorField;

		/// <remarks/>
		[XmlAttribute()]
		public int Numerator
		{
			get { return numeratorField; }
			set { numeratorField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public int Denominator
		{
			get { return denominatorField; }
			set { denominatorField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class IndexedPageViewType : BasePagingType
	{
		private int offsetField;

		private IndexBasePointType basePointField;

		/// <remarks/>
		[XmlAttribute()]
		public int Offset
		{
			get { return offsetField; }
			set { offsetField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public IndexBasePointType BasePoint
		{
			get { return basePointField; }
			set { basePointField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum IndexBasePointType
	{
		/// <remarks/>
		Beginning,

		/// <remarks/>
		End,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class TargetFolderIdType
	{
		private BaseFolderIdType itemField;

		/// <remarks/>
		[XmlElement("DistinguishedFolderId", typeof(DistinguishedFolderIdType))]
		[XmlElement("FolderId", typeof(FolderIdType))]
		public BaseFolderIdType Item
		{
			get { return itemField; }
			set { itemField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class FolderResponseShapeType
	{
		private DefaultShapeNamesType baseShapeField;

		private BasePathToElementType[] additionalPropertiesField;

		/// <remarks/>
		public DefaultShapeNamesType BaseShape
		{
			get { return baseShapeField; }
			set { baseShapeField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("ExtendedFieldURI", typeof(PathToExtendedFieldType), IsNullable = false)]
		[XmlArrayItem("FieldURI", typeof(PathToUnindexedFieldType), IsNullable = false)]
		[XmlArrayItem("IndexedFieldURI", typeof(PathToIndexedFieldType), IsNullable = false)]
		[XmlArrayItem("Path", IsNullable = false)]
		public BasePathToElementType[] AdditionalProperties
		{
			get { return additionalPropertiesField; }
			set { additionalPropertiesField = value; }
		}
	}

	/// <remarks/>
	[XmlInclude(typeof(BaseDelegateType))]
	[XmlInclude(typeof(UpdateDelegateType))]
	[XmlInclude(typeof(RemoveDelegateType))]
	[XmlInclude(typeof(AddDelegateType))]
	[XmlInclude(typeof(GetDelegateType))]
	[XmlInclude(typeof(ConvertIdType))]
	[XmlInclude(typeof(SetUserOofSettingsRequest))]
	[XmlInclude(typeof(GetUserOofSettingsRequest))]
	[XmlInclude(typeof(GetUserAvailabilityRequestType))]
	[XmlInclude(typeof(SyncFolderItemsType))]
	[XmlInclude(typeof(SyncFolderHierarchyType))]
	[XmlInclude(typeof(GetEventsType))]
	[XmlInclude(typeof(UnsubscribeType))]
	[XmlInclude(typeof(SubscribeType))]
	[XmlInclude(typeof(CreateManagedFolderRequestType))]
	[XmlInclude(typeof(ExpandDLType))]
	[XmlInclude(typeof(ResolveNamesType))]
	[XmlInclude(typeof(GetAttachmentType))]
	[XmlInclude(typeof(DeleteAttachmentType))]
	[XmlInclude(typeof(CreateAttachmentType))]
	[XmlInclude(typeof(FindItemType))]
	[XmlInclude(typeof(SendItemType))]
	[XmlInclude(typeof(BaseMoveCopyItemType))]
	[XmlInclude(typeof(CopyItemType))]
	[XmlInclude(typeof(MoveItemType))]
	[XmlInclude(typeof(DeleteItemType))]
	[XmlInclude(typeof(UpdateItemType))]
	[XmlInclude(typeof(CreateItemType))]
	[XmlInclude(typeof(GetItemType))]
	[XmlInclude(typeof(UpdateFolderType))]
	[XmlInclude(typeof(BaseMoveCopyFolderType))]
	[XmlInclude(typeof(CopyFolderType))]
	[XmlInclude(typeof(MoveFolderType))]
	[XmlInclude(typeof(DeleteFolderType))]
	[XmlInclude(typeof(FindFolderType))]
	[XmlInclude(typeof(CreateFolderType))]
	[XmlInclude(typeof(GetFolderType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public abstract partial class BaseRequestType
	{
	}

	/// <remarks/>
	[XmlInclude(typeof(UpdateDelegateType))]
	[XmlInclude(typeof(RemoveDelegateType))]
	[XmlInclude(typeof(AddDelegateType))]
	[XmlInclude(typeof(GetDelegateType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public abstract partial class BaseDelegateType : BaseRequestType
	{
		private EmailAddressType mailboxField;

		/// <remarks/>
		public EmailAddressType Mailbox
		{
			get { return mailboxField; }
			set { mailboxField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class UpdateDelegateType : BaseDelegateType
	{
		private DelegateUserType[] delegateUsersField;

		private DeliverMeetingRequestsType deliverMeetingRequestsField;

		private bool deliverMeetingRequestsFieldSpecified;

		/// <remarks/>
		[XmlArrayItem("DelegateUser", Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)
		]
		public DelegateUserType[] DelegateUsers
		{
			get { return delegateUsersField; }
			set { delegateUsersField = value; }
		}

		/// <remarks/>
		public DeliverMeetingRequestsType DeliverMeetingRequests
		{
			get { return deliverMeetingRequestsField; }
			set { deliverMeetingRequestsField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool DeliverMeetingRequestsSpecified
		{
			get { return deliverMeetingRequestsFieldSpecified; }
			set { deliverMeetingRequestsFieldSpecified = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class RemoveDelegateType : BaseDelegateType
	{
		private UserIdType[] userIdsField;

		/// <remarks/>
		[XmlArrayItem("UserId", Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		public UserIdType[] UserIds
		{
			get { return userIdsField; }
			set { userIdsField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class AddDelegateType : BaseDelegateType
	{
		private DelegateUserType[] delegateUsersField;

		private DeliverMeetingRequestsType deliverMeetingRequestsField;

		private bool deliverMeetingRequestsFieldSpecified;

		/// <remarks/>
		[XmlArrayItem("DelegateUser", Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)
		]
		public DelegateUserType[] DelegateUsers
		{
			get { return delegateUsersField; }
			set { delegateUsersField = value; }
		}

		/// <remarks/>
		public DeliverMeetingRequestsType DeliverMeetingRequests
		{
			get { return deliverMeetingRequestsField; }
			set { deliverMeetingRequestsField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool DeliverMeetingRequestsSpecified
		{
			get { return deliverMeetingRequestsFieldSpecified; }
			set { deliverMeetingRequestsFieldSpecified = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class GetDelegateType : BaseDelegateType
	{
		private UserIdType[] userIdsField;

		private bool includePermissionsField;

		/// <remarks/>
		[XmlArrayItem("UserId", Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		public UserIdType[] UserIds
		{
			get { return userIdsField; }
			set { userIdsField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public bool IncludePermissions
		{
			get { return includePermissionsField; }
			set { includePermissionsField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class ConvertIdType : BaseRequestType
	{
		private AlternateIdBaseType[] sourceIdsField;

		private IdFormatType destinationFormatField;

		/// <remarks/>
		[XmlArrayItem("AlternateId", typeof(AlternateIdType),
			Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		[XmlArrayItem("AlternatePublicFolderId", typeof(AlternatePublicFolderIdType),
			Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		[XmlArrayItem("AlternatePublicFolderItemId", typeof(AlternatePublicFolderItemIdType),
			Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		public AlternateIdBaseType[] SourceIds
		{
			get { return sourceIdsField; }
			set { sourceIdsField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public IdFormatType DestinationFormat
		{
			get { return destinationFormatField; }
			set { destinationFormatField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class SetUserOofSettingsRequest : BaseRequestType
	{
		private EmailAddress mailboxField;

		private UserOofSettings userOofSettingsField;

		/// <remarks/>
		[XmlElement(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
		public EmailAddress Mailbox
		{
			get { return mailboxField; }
			set { mailboxField = value; }
		}

		/// <remarks/>
		[XmlElement(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
		public UserOofSettings UserOofSettings
		{
			get { return userOofSettingsField; }
			set { userOofSettingsField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class GetUserOofSettingsRequest : BaseRequestType
	{
		private EmailAddress mailboxField;

		/// <remarks/>
		[XmlElement(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
		public EmailAddress Mailbox
		{
			get { return mailboxField; }
			set { mailboxField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class GetUserAvailabilityRequestType : BaseRequestType
	{
		private SerializableTimeZone timeZoneField;

		private MailboxData[] mailboxDataArrayField;

		private FreeBusyViewOptionsType freeBusyViewOptionsField;

		private SuggestionsViewOptionsType suggestionsViewOptionsField;

		/// <remarks/>
		[XmlElement(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
		public SerializableTimeZone TimeZone
		{
			get { return timeZoneField; }
			set { timeZoneField = value; }
		}

		/// <remarks/>
		[XmlArrayItem(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
		public MailboxData[] MailboxDataArray
		{
			get { return mailboxDataArrayField; }
			set { mailboxDataArrayField = value; }
		}

		/// <remarks/>
		[XmlElement(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
		public FreeBusyViewOptionsType FreeBusyViewOptions
		{
			get { return freeBusyViewOptionsField; }
			set { freeBusyViewOptionsField = value; }
		}

		/// <remarks/>
		[XmlElement(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
		public SuggestionsViewOptionsType SuggestionsViewOptions
		{
			get { return suggestionsViewOptionsField; }
			set { suggestionsViewOptionsField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class SyncFolderItemsType : BaseRequestType
	{
		private ItemResponseShapeType itemShapeField;

		private TargetFolderIdType syncFolderIdField;

		private string syncStateField;

		private ItemIdType[] ignoreField;

		private int maxChangesReturnedField;

		/// <remarks/>
		public ItemResponseShapeType ItemShape
		{
			get { return itemShapeField; }
			set { itemShapeField = value; }
		}

		/// <remarks/>
		public TargetFolderIdType SyncFolderId
		{
			get { return syncFolderIdField; }
			set { syncFolderIdField = value; }
		}

		/// <remarks/>
		public string SyncState
		{
			get { return syncStateField; }
			set { syncStateField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("ItemId", Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		public ItemIdType[] Ignore
		{
			get { return ignoreField; }
			set { ignoreField = value; }
		}

		/// <remarks/>
		public int MaxChangesReturned
		{
			get { return maxChangesReturnedField; }
			set { maxChangesReturnedField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class SyncFolderHierarchyType : BaseRequestType
	{
		private FolderResponseShapeType folderShapeField;

		private TargetFolderIdType syncFolderIdField;

		private string syncStateField;

		/// <remarks/>
		public FolderResponseShapeType FolderShape
		{
			get { return folderShapeField; }
			set { folderShapeField = value; }
		}

		/// <remarks/>
		public TargetFolderIdType SyncFolderId
		{
			get { return syncFolderIdField; }
			set { syncFolderIdField = value; }
		}

		/// <remarks/>
		public string SyncState
		{
			get { return syncStateField; }
			set { syncStateField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class GetEventsType : BaseRequestType
	{
		private string subscriptionIdField;

		private string watermarkField;

		/// <remarks/>
		public string SubscriptionId
		{
			get { return subscriptionIdField; }
			set { subscriptionIdField = value; }
		}

		/// <remarks/>
		public string Watermark
		{
			get { return watermarkField; }
			set { watermarkField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class UnsubscribeType : BaseRequestType
	{
		private string subscriptionIdField;

		/// <remarks/>
		public string SubscriptionId
		{
			get { return subscriptionIdField; }
			set { subscriptionIdField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class SubscribeType : BaseRequestType
	{
		private BaseSubscriptionRequestType itemField;

		/// <remarks/>
		[XmlElement("PullSubscriptionRequest", typeof(PullSubscriptionRequestType))]
		[XmlElement("PushSubscriptionRequest", typeof(PushSubscriptionRequestType))]
		public BaseSubscriptionRequestType Item
		{
			get { return itemField; }
			set { itemField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class CreateManagedFolderRequestType : BaseRequestType
	{
		private string[] folderNamesField;

		private EmailAddressType mailboxField;

		/// <remarks/>
		[XmlArrayItem("FolderName", Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		public string[] FolderNames
		{
			get { return folderNamesField; }
			set { folderNamesField = value; }
		}

		/// <remarks/>
		public EmailAddressType Mailbox
		{
			get { return mailboxField; }
			set { mailboxField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class ExpandDLType : BaseRequestType
	{
		private EmailAddressType mailboxField;

		/// <remarks/>
		public EmailAddressType Mailbox
		{
			get { return mailboxField; }
			set { mailboxField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class ResolveNamesType : BaseRequestType
	{
		private BaseFolderIdType[] parentFolderIdsField;

		private string unresolvedEntryField;

		private bool returnFullContactDataField;

		private ResolveNamesSearchScopeType searchScopeField;

		public ResolveNamesType()
		{
			searchScopeField = ResolveNamesSearchScopeType.ActiveDirectoryContacts;
		}

		/// <remarks/>
		[XmlArrayItem("DistinguishedFolderId", typeof(DistinguishedFolderIdType),
			Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		[XmlArrayItem("FolderId", typeof(FolderIdType), Namespace = "http://schemas.microsoft.com/exchange/services/2006/types"
			, IsNullable = false)]
		public BaseFolderIdType[] ParentFolderIds
		{
			get { return parentFolderIdsField; }
			set { parentFolderIdsField = value; }
		}

		/// <remarks/>
		public string UnresolvedEntry
		{
			get { return unresolvedEntryField; }
			set { unresolvedEntryField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public bool ReturnFullContactData
		{
			get { return returnFullContactDataField; }
			set { returnFullContactDataField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		[DefaultValue(ResolveNamesSearchScopeType.ActiveDirectoryContacts)]
		public ResolveNamesSearchScopeType SearchScope
		{
			get { return searchScopeField; }
			set { searchScopeField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum ResolveNamesSearchScopeType
	{
		/// <remarks/>
		ActiveDirectory,

		/// <remarks/>
		ActiveDirectoryContacts,

		/// <remarks/>
		Contacts,

		/// <remarks/>
		ContactsActiveDirectory,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class GetAttachmentType : BaseRequestType
	{
		private AttachmentResponseShapeType attachmentShapeField;

		private RequestAttachmentIdType[] attachmentIdsField;

		/// <remarks/>
		public AttachmentResponseShapeType AttachmentShape
		{
			get { return attachmentShapeField; }
			set { attachmentShapeField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("AttachmentId", Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)
		]
		public RequestAttachmentIdType[] AttachmentIds
		{
			get { return attachmentIdsField; }
			set { attachmentIdsField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class DeleteAttachmentType : BaseRequestType
	{
		private RequestAttachmentIdType[] attachmentIdsField;

		/// <remarks/>
		[XmlArrayItem("AttachmentId", Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)
		]
		public RequestAttachmentIdType[] AttachmentIds
		{
			get { return attachmentIdsField; }
			set { attachmentIdsField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class CreateAttachmentType : BaseRequestType
	{
		private ItemIdType parentItemIdField;

		private AttachmentType[] attachmentsField;

		/// <remarks/>
		public ItemIdType ParentItemId
		{
			get { return parentItemIdField; }
			set { parentItemIdField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("FileAttachment", typeof(FileAttachmentType),
			Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		[XmlArrayItem("ItemAttachment", typeof(ItemAttachmentType),
			Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		public AttachmentType[] Attachments
		{
			get { return attachmentsField; }
			set { attachmentsField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class FindItemType : BaseRequestType
	{
		private ItemResponseShapeType itemShapeField;

		private BasePagingType itemField;

		private BaseGroupByType item1Field;

		private RestrictionType restrictionField;

		private FieldOrderType[] sortOrderField;

		private BaseFolderIdType[] parentFolderIdsField;

		private ItemQueryTraversalType traversalField;

		/// <remarks/>
		public ItemResponseShapeType ItemShape
		{
			get { return itemShapeField; }
			set { itemShapeField = value; }
		}

		/// <remarks/>
		[XmlElement("CalendarView", typeof(CalendarViewType))]
		[XmlElement("ContactsView", typeof(ContactsViewType))]
		[XmlElement("FractionalPageItemView", typeof(FractionalPageViewType))]
		[XmlElement("IndexedPageItemView", typeof(IndexedPageViewType))]
		public BasePagingType Item
		{
			get { return itemField; }
			set { itemField = value; }
		}

		/// <remarks/>
		[XmlElement("DistinguishedGroupBy", typeof(DistinguishedGroupByType))]
		[XmlElement("GroupBy", typeof(GroupByType))]
		public BaseGroupByType Item1
		{
			get { return item1Field; }
			set { item1Field = value; }
		}

		/// <remarks/>
		public RestrictionType Restriction
		{
			get { return restrictionField; }
			set { restrictionField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("FieldOrder", Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		public FieldOrderType[] SortOrder
		{
			get { return sortOrderField; }
			set { sortOrderField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("DistinguishedFolderId", typeof(DistinguishedFolderIdType),
			Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		[XmlArrayItem("FolderId", typeof(FolderIdType), Namespace = "http://schemas.microsoft.com/exchange/services/2006/types"
			, IsNullable = false)]
		public BaseFolderIdType[] ParentFolderIds
		{
			get { return parentFolderIdsField; }
			set { parentFolderIdsField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public ItemQueryTraversalType Traversal
		{
			get { return traversalField; }
			set { traversalField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum ItemQueryTraversalType
	{
		/// <remarks/>
		Shallow,

		/// <remarks/>
		SoftDeleted,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class SendItemType : BaseRequestType
	{
		private BaseItemIdType[] itemIdsField;

		private TargetFolderIdType savedItemFolderIdField;

		private bool saveItemToFolderField;

		/// <remarks/>
		[XmlArrayItem("ItemId", typeof(ItemIdType), Namespace = "http://schemas.microsoft.com/exchange/services/2006/types",
			IsNullable = false)]
		[XmlArrayItem("OccurrenceItemId", typeof(OccurrenceItemIdType),
			Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		[XmlArrayItem("RecurringMasterItemId", typeof(RecurringMasterItemIdType),
			Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		public BaseItemIdType[] ItemIds
		{
			get { return itemIdsField; }
			set { itemIdsField = value; }
		}

		/// <remarks/>
		public TargetFolderIdType SavedItemFolderId
		{
			get { return savedItemFolderIdField; }
			set { savedItemFolderIdField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public bool SaveItemToFolder
		{
			get { return saveItemToFolderField; }
			set { saveItemToFolderField = value; }
		}
	}

	/// <remarks/>
	[XmlInclude(typeof(CopyItemType))]
	[XmlInclude(typeof(MoveItemType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class BaseMoveCopyItemType : BaseRequestType
	{
		private TargetFolderIdType toFolderIdField;

		private BaseItemIdType[] itemIdsField;

		/// <remarks/>
		public TargetFolderIdType ToFolderId
		{
			get { return toFolderIdField; }
			set { toFolderIdField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("ItemId", typeof(ItemIdType), Namespace = "http://schemas.microsoft.com/exchange/services/2006/types",
			IsNullable = false)]
		[XmlArrayItem("OccurrenceItemId", typeof(OccurrenceItemIdType),
			Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		[XmlArrayItem("RecurringMasterItemId", typeof(RecurringMasterItemIdType),
			Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		public BaseItemIdType[] ItemIds
		{
			get { return itemIdsField; }
			set { itemIdsField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class CopyItemType : BaseMoveCopyItemType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class MoveItemType : BaseMoveCopyItemType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class DeleteItemType : BaseRequestType
	{
		private BaseItemIdType[] itemIdsField;

		private DisposalType deleteTypeField;

		private CalendarItemCreateOrDeleteOperationType sendMeetingCancellationsField;

		private bool sendMeetingCancellationsFieldSpecified;

		private AffectedTaskOccurrencesType affectedTaskOccurrencesField;

		private bool affectedTaskOccurrencesFieldSpecified;

		/// <remarks/>
		[XmlArrayItem("ItemId", typeof(ItemIdType), Namespace = "http://schemas.microsoft.com/exchange/services/2006/types",
			IsNullable = false)]
		[XmlArrayItem("OccurrenceItemId", typeof(OccurrenceItemIdType),
			Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		[XmlArrayItem("RecurringMasterItemId", typeof(RecurringMasterItemIdType),
			Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		public BaseItemIdType[] ItemIds
		{
			get { return itemIdsField; }
			set { itemIdsField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public DisposalType DeleteType
		{
			get { return deleteTypeField; }
			set { deleteTypeField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public CalendarItemCreateOrDeleteOperationType SendMeetingCancellations
		{
			get { return sendMeetingCancellationsField; }
			set { sendMeetingCancellationsField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool SendMeetingCancellationsSpecified
		{
			get { return sendMeetingCancellationsFieldSpecified; }
			set { sendMeetingCancellationsFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public AffectedTaskOccurrencesType AffectedTaskOccurrences
		{
			get { return affectedTaskOccurrencesField; }
			set { affectedTaskOccurrencesField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool AffectedTaskOccurrencesSpecified
		{
			get { return affectedTaskOccurrencesFieldSpecified; }
			set { affectedTaskOccurrencesFieldSpecified = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum DisposalType
	{
		/// <remarks/>
		HardDelete,

		/// <remarks/>
		SoftDelete,

		/// <remarks/>
		MoveToDeletedItems,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum CalendarItemCreateOrDeleteOperationType
	{
		/// <remarks/>
		SendToNone,

		/// <remarks/>
		SendOnlyToAll,

		/// <remarks/>
		SendToAllAndSaveCopy,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum AffectedTaskOccurrencesType
	{
		/// <remarks/>
		AllOccurrences,

		/// <remarks/>
		SpecifiedOccurrenceOnly,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class UpdateItemType : BaseRequestType
	{
		private TargetFolderIdType savedItemFolderIdField;

		private ItemChangeType[] itemChangesField;

		private ConflictResolutionType conflictResolutionField;

		private MessageDispositionType messageDispositionField;

		private bool messageDispositionFieldSpecified;

		private CalendarItemUpdateOperationType sendMeetingInvitationsOrCancellationsField;

		private bool sendMeetingInvitationsOrCancellationsFieldSpecified;

		/// <remarks/>
		public TargetFolderIdType SavedItemFolderId
		{
			get { return savedItemFolderIdField; }
			set { savedItemFolderIdField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("ItemChange", Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		public ItemChangeType[] ItemChanges
		{
			get { return itemChangesField; }
			set { itemChangesField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public ConflictResolutionType ConflictResolution
		{
			get { return conflictResolutionField; }
			set { conflictResolutionField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public MessageDispositionType MessageDisposition
		{
			get { return messageDispositionField; }
			set { messageDispositionField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool MessageDispositionSpecified
		{
			get { return messageDispositionFieldSpecified; }
			set { messageDispositionFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public CalendarItemUpdateOperationType SendMeetingInvitationsOrCancellations
		{
			get { return sendMeetingInvitationsOrCancellationsField; }
			set { sendMeetingInvitationsOrCancellationsField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool SendMeetingInvitationsOrCancellationsSpecified
		{
			get { return sendMeetingInvitationsOrCancellationsFieldSpecified; }
			set { sendMeetingInvitationsOrCancellationsFieldSpecified = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum ConflictResolutionType
	{
		/// <remarks/>
		NeverOverwrite,

		/// <remarks/>
		AutoResolve,

		/// <remarks/>
		AlwaysOverwrite,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum MessageDispositionType
	{
		/// <remarks/>
		SaveOnly,

		/// <remarks/>
		SendOnly,

		/// <remarks/>
		SendAndSaveCopy,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum CalendarItemUpdateOperationType
	{
		/// <remarks/>
		SendToNone,

		/// <remarks/>
		SendOnlyToAll,

		/// <remarks/>
		SendOnlyToChanged,

		/// <remarks/>
		SendToAllAndSaveCopy,

		/// <remarks/>
		SendToChangedAndSaveCopy,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class CreateItemType : BaseRequestType
	{
		private TargetFolderIdType savedItemFolderIdField;

		private NonEmptyArrayOfAllItemsType itemsField;

		private MessageDispositionType messageDispositionField;

		private bool messageDispositionFieldSpecified;

		private CalendarItemCreateOrDeleteOperationType sendMeetingInvitationsField;

		private bool sendMeetingInvitationsFieldSpecified;

		/// <remarks/>
		public TargetFolderIdType SavedItemFolderId
		{
			get { return savedItemFolderIdField; }
			set { savedItemFolderIdField = value; }
		}

		/// <remarks/>
		public NonEmptyArrayOfAllItemsType Items
		{
			get { return itemsField; }
			set { itemsField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public MessageDispositionType MessageDisposition
		{
			get { return messageDispositionField; }
			set { messageDispositionField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool MessageDispositionSpecified
		{
			get { return messageDispositionFieldSpecified; }
			set { messageDispositionFieldSpecified = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public CalendarItemCreateOrDeleteOperationType SendMeetingInvitations
		{
			get { return sendMeetingInvitationsField; }
			set { sendMeetingInvitationsField = value; }
		}

		/// <remarks/>
		[XmlIgnore()]
		public bool SendMeetingInvitationsSpecified
		{
			get { return sendMeetingInvitationsFieldSpecified; }
			set { sendMeetingInvitationsFieldSpecified = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class GetItemType : BaseRequestType
	{
		private ItemResponseShapeType itemShapeField;

		private BaseItemIdType[] itemIdsField;

		/// <remarks/>
		public ItemResponseShapeType ItemShape
		{
			get { return itemShapeField; }
			set { itemShapeField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("ItemId", typeof(ItemIdType), Namespace = "http://schemas.microsoft.com/exchange/services/2006/types",
			IsNullable = false)]
		[XmlArrayItem("OccurrenceItemId", typeof(OccurrenceItemIdType),
			Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		[XmlArrayItem("RecurringMasterItemId", typeof(RecurringMasterItemIdType),
			Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		public BaseItemIdType[] ItemIds
		{
			get { return itemIdsField; }
			set { itemIdsField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class UpdateFolderType : BaseRequestType
	{
		private FolderChangeType[] folderChangesField;

		/// <remarks/>
		[XmlArrayItem("FolderChange", Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)
		]
		public FolderChangeType[] FolderChanges
		{
			get { return folderChangesField; }
			set { folderChangesField = value; }
		}
	}

	/// <remarks/>
	[XmlInclude(typeof(CopyFolderType))]
	[XmlInclude(typeof(MoveFolderType))]
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class BaseMoveCopyFolderType : BaseRequestType
	{
		private TargetFolderIdType toFolderIdField;

		private BaseFolderIdType[] folderIdsField;

		/// <remarks/>
		public TargetFolderIdType ToFolderId
		{
			get { return toFolderIdField; }
			set { toFolderIdField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("DistinguishedFolderId", typeof(DistinguishedFolderIdType),
			Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		[XmlArrayItem("FolderId", typeof(FolderIdType), Namespace = "http://schemas.microsoft.com/exchange/services/2006/types"
			, IsNullable = false)]
		public BaseFolderIdType[] FolderIds
		{
			get { return folderIdsField; }
			set { folderIdsField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class CopyFolderType : BaseMoveCopyFolderType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class MoveFolderType : BaseMoveCopyFolderType
	{
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class DeleteFolderType : BaseRequestType
	{
		private BaseFolderIdType[] folderIdsField;

		private DisposalType deleteTypeField;

		/// <remarks/>
		[XmlArrayItem("DistinguishedFolderId", typeof(DistinguishedFolderIdType),
			Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		[XmlArrayItem("FolderId", typeof(FolderIdType), Namespace = "http://schemas.microsoft.com/exchange/services/2006/types"
			, IsNullable = false)]
		public BaseFolderIdType[] FolderIds
		{
			get { return folderIdsField; }
			set { folderIdsField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public DisposalType DeleteType
		{
			get { return deleteTypeField; }
			set { deleteTypeField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class FindFolderType : BaseRequestType
	{
		private FolderResponseShapeType folderShapeField;

		private BasePagingType itemField;

		private RestrictionType restrictionField;

		private BaseFolderIdType[] parentFolderIdsField;

		private FolderQueryTraversalType traversalField;

		/// <remarks/>
		public FolderResponseShapeType FolderShape
		{
			get { return folderShapeField; }
			set { folderShapeField = value; }
		}

		/// <remarks/>
		[XmlElement("FractionalPageFolderView", typeof(FractionalPageViewType))]
		[XmlElement("IndexedPageFolderView", typeof(IndexedPageViewType))]
		public BasePagingType Item
		{
			get { return itemField; }
			set { itemField = value; }
		}

		/// <remarks/>
		public RestrictionType Restriction
		{
			get { return restrictionField; }
			set { restrictionField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("DistinguishedFolderId", typeof(DistinguishedFolderIdType),
			Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		[XmlArrayItem("FolderId", typeof(FolderIdType), Namespace = "http://schemas.microsoft.com/exchange/services/2006/types"
			, IsNullable = false)]
		public BaseFolderIdType[] ParentFolderIds
		{
			get { return parentFolderIdsField; }
			set { parentFolderIdsField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public FolderQueryTraversalType Traversal
		{
			get { return traversalField; }
			set { traversalField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum FolderQueryTraversalType
	{
		/// <remarks/>
		Shallow,

		/// <remarks/>
		Deep,

		/// <remarks/>
		SoftDeleted,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class CreateFolderType : BaseRequestType
	{
		private TargetFolderIdType parentFolderIdField;

		private BaseFolderType[] foldersField;

		/// <remarks/>
		public TargetFolderIdType ParentFolderId
		{
			get { return parentFolderIdField; }
			set { parentFolderIdField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("CalendarFolder", typeof(CalendarFolderType),
			Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		[XmlArrayItem("ContactsFolder", typeof(ContactsFolderType),
			Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		[XmlArrayItem("Folder", typeof(FolderType), Namespace = "http://schemas.microsoft.com/exchange/services/2006/types",
			IsNullable = false)]
		[XmlArrayItem("SearchFolder", typeof(SearchFolderType),
			Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		[XmlArrayItem("TasksFolder", typeof(TasksFolderType),
			Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		public BaseFolderType[] Folders
		{
			get { return foldersField; }
			set { foldersField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/messages")]
	public partial class GetFolderType : BaseRequestType
	{
		private FolderResponseShapeType folderShapeField;

		private BaseFolderIdType[] folderIdsField;

		/// <remarks/>
		public FolderResponseShapeType FolderShape
		{
			get { return folderShapeField; }
			set { folderShapeField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("DistinguishedFolderId", typeof(DistinguishedFolderIdType),
			Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
		[XmlArrayItem("FolderId", typeof(FolderIdType), Namespace = "http://schemas.microsoft.com/exchange/services/2006/types"
			, IsNullable = false)]
		public BaseFolderIdType[] FolderIds
		{
			get { return folderIdsField; }
			set { folderIdsField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class SidAndAttributesType
	{
		private string securityIdentifierField;

		private uint attributesField;

		/// <remarks/>
		public string SecurityIdentifier
		{
			get { return securityIdentifierField; }
			set { securityIdentifierField = value; }
		}

		/// <remarks/>
		[XmlAttribute()]
		public uint Attributes
		{
			get { return attributesField; }
			set { attributesField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public partial class ConnectingSIDType
	{
		private string principalNameField;

		private string sIDField;

		private string primarySmtpAddressField;

		/// <remarks/>
		public string PrincipalName
		{
			get { return principalNameField; }
			set { principalNameField = value; }
		}

		/// <remarks/>
		public string SID
		{
			get { return sIDField; }
			set { sIDField = value; }
		}

		/// <remarks/>
		public string PrimarySmtpAddress
		{
			get { return primarySmtpAddressField; }
			set { primarySmtpAddressField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://www.w3.org/2001/XMLSchema")]
	[XmlRoot("MailboxCulture", Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
	public partial class language : SoapHeader
	{
		private string[] textField;

		/// <remarks/>
		[XmlText()]
		public string[] Text
		{
			get { return textField; }
			set { textField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	[XmlRoot("SerializedSecurityContext", Namespace = "http://schemas.microsoft.com/exchange/services/2006/types",
		IsNullable = false)]
	public partial class SerializedSecurityContextType : SoapHeader
	{
		private string userSidField;

		private SidAndAttributesType[] groupSidsField;

		private SidAndAttributesType[] restrictedGroupSidsField;

		private string primarySmtpAddressField;

		/// <remarks/>
		public string UserSid
		{
			get { return userSidField; }
			set { userSidField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("GroupIdentifier", IsNullable = false)]
		public SidAndAttributesType[] GroupSids
		{
			get { return groupSidsField; }
			set { groupSidsField = value; }
		}

		/// <remarks/>
		[XmlArrayItem("RestrictedGroupIdentifier", IsNullable = false)]
		public SidAndAttributesType[] RestrictedGroupSids
		{
			get { return restrictedGroupSidsField; }
			set { restrictedGroupSidsField = value; }
		}

		/// <remarks/>
		public string PrimarySmtpAddress
		{
			get { return primarySmtpAddressField; }
			set { primarySmtpAddressField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	[XmlRoot("ProxyRequestTypeHeader", Namespace = "http://schemas.microsoft.com/exchange/services/2006/types",
		IsNullable = false)]
	public partial class AvailabilityProxyRequestType : SoapHeader
	{
		private string[] textField;

		/// <remarks/>
		[XmlText()]
		public string[] Text
		{
			get { return textField; }
			set { textField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	[XmlRoot("ExchangeImpersonation", Namespace = "http://schemas.microsoft.com/exchange/services/2006/types",
		IsNullable = false)]
	public partial class ExchangeImpersonationType : SoapHeader
	{
		private ConnectingSIDType connectingSIDField;

		/// <remarks/>
		public ConnectingSIDType ConnectingSID
		{
			get { return connectingSIDField; }
			set { connectingSIDField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[XmlType(AnonymousType = true, Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	[XmlRoot(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types", IsNullable = false)]
	public partial class RequestServerVersion : SoapHeader
	{
		private ExchangeVersionType versionField;

		private XmlAttribute[] anyAttrField;

		public RequestServerVersion()
		{
			versionField = ExchangeVersionType.Exchange2007_SP1;
		}

		/// <remarks/>
		[XmlAttribute()]
		public ExchangeVersionType Version
		{
			get { return versionField; }
			set { versionField = value; }
		}

		/// <remarks/>
		[XmlAnyAttribute()]
		public XmlAttribute[] AnyAttr
		{
			get { return anyAttrField; }
			set { anyAttrField = value; }
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[Serializable()]
	[XmlType(Namespace = "http://schemas.microsoft.com/exchange/services/2006/types")]
	public enum ExchangeVersionType
	{
		/// <remarks/>
		Exchange2007,

		/// <remarks/>
		Exchange2007_SP1,
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void ResolveNamesCompletedEventHandler(object sender, ResolveNamesCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class ResolveNamesCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal ResolveNamesCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
			base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public ResolveNamesResponseType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((ResolveNamesResponseType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void ExpandDLCompletedEventHandler(object sender, ExpandDLCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class ExpandDLCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal ExpandDLCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
			base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public ExpandDLResponseType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((ExpandDLResponseType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void FindFolderCompletedEventHandler(object sender, FindFolderCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class FindFolderCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal FindFolderCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
			base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public FindFolderResponseType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((FindFolderResponseType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void FindItemCompletedEventHandler(object sender, FindItemCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class FindItemCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal FindItemCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
			base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public FindItemResponseType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((FindItemResponseType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void GetFolderCompletedEventHandler(object sender, GetFolderCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class GetFolderCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal GetFolderCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
			base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public GetFolderResponseType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((GetFolderResponseType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void ConvertIdCompletedEventHandler(object sender, ConvertIdCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class ConvertIdCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal ConvertIdCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
			base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public ConvertIdResponseType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((ConvertIdResponseType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void CreateFolderCompletedEventHandler(object sender, CreateFolderCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class CreateFolderCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal CreateFolderCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
			base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public CreateFolderResponseType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((CreateFolderResponseType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void DeleteFolderCompletedEventHandler(object sender, DeleteFolderCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class DeleteFolderCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal DeleteFolderCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
			base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public DeleteFolderResponseType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((DeleteFolderResponseType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void UpdateFolderCompletedEventHandler(object sender, UpdateFolderCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class UpdateFolderCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal UpdateFolderCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
			base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public UpdateFolderResponseType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((UpdateFolderResponseType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void MoveFolderCompletedEventHandler(object sender, MoveFolderCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class MoveFolderCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal MoveFolderCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
			base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public MoveFolderResponseType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((MoveFolderResponseType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void CopyFolderCompletedEventHandler(object sender, CopyFolderCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class CopyFolderCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal CopyFolderCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
			base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public CopyFolderResponseType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((CopyFolderResponseType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void SubscribeCompletedEventHandler(object sender, SubscribeCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class SubscribeCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal SubscribeCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
			base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public SubscribeResponseType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((SubscribeResponseType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void UnsubscribeCompletedEventHandler(object sender, UnsubscribeCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class UnsubscribeCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal UnsubscribeCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
			base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public UnsubscribeResponseType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((UnsubscribeResponseType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void GetEventsCompletedEventHandler(object sender, GetEventsCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class GetEventsCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal GetEventsCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
			base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public GetEventsResponseType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((GetEventsResponseType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void SyncFolderHierarchyCompletedEventHandler(object sender, SyncFolderHierarchyCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class SyncFolderHierarchyCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal SyncFolderHierarchyCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public SyncFolderHierarchyResponseType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((SyncFolderHierarchyResponseType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void SyncFolderItemsCompletedEventHandler(object sender, SyncFolderItemsCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class SyncFolderItemsCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal SyncFolderItemsCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
			base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public SyncFolderItemsResponseType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((SyncFolderItemsResponseType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void CreateManagedFolderCompletedEventHandler(object sender, CreateManagedFolderCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class CreateManagedFolderCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal CreateManagedFolderCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public CreateManagedFolderResponseType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((CreateManagedFolderResponseType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void GetItemCompletedEventHandler(object sender, GetItemCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class GetItemCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal GetItemCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
			base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public GetItemResponseType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((GetItemResponseType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void CreateItemCompletedEventHandler(object sender, CreateItemCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class CreateItemCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal CreateItemCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
			base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public CreateItemResponseType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((CreateItemResponseType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void DeleteItemCompletedEventHandler(object sender, DeleteItemCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class DeleteItemCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal DeleteItemCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
			base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public DeleteItemResponseType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((DeleteItemResponseType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void UpdateItemCompletedEventHandler(object sender, UpdateItemCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class UpdateItemCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal UpdateItemCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
			base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public UpdateItemResponseType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((UpdateItemResponseType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void SendItemCompletedEventHandler(object sender, SendItemCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class SendItemCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal SendItemCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
			base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public SendItemResponseType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((SendItemResponseType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void MoveItemCompletedEventHandler(object sender, MoveItemCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class MoveItemCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal MoveItemCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
			base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public MoveItemResponseType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((MoveItemResponseType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void CopyItemCompletedEventHandler(object sender, CopyItemCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class CopyItemCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal CopyItemCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
			base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public CopyItemResponseType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((CopyItemResponseType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void CreateAttachmentCompletedEventHandler(object sender, CreateAttachmentCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class CreateAttachmentCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal CreateAttachmentCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
			base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public CreateAttachmentResponseType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((CreateAttachmentResponseType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void DeleteAttachmentCompletedEventHandler(object sender, DeleteAttachmentCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class DeleteAttachmentCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal DeleteAttachmentCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
			base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public DeleteAttachmentResponseType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((DeleteAttachmentResponseType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void GetAttachmentCompletedEventHandler(object sender, GetAttachmentCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class GetAttachmentCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal GetAttachmentCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
			base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public GetAttachmentResponseType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((GetAttachmentResponseType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void GetDelegateCompletedEventHandler(object sender, GetDelegateCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class GetDelegateCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal GetDelegateCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
			base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public GetDelegateResponseMessageType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((GetDelegateResponseMessageType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void AddDelegateCompletedEventHandler(object sender, AddDelegateCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class AddDelegateCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal AddDelegateCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
			base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public AddDelegateResponseMessageType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((AddDelegateResponseMessageType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void RemoveDelegateCompletedEventHandler(object sender, RemoveDelegateCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class RemoveDelegateCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal RemoveDelegateCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
			base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public RemoveDelegateResponseMessageType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((RemoveDelegateResponseMessageType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void UpdateDelegateCompletedEventHandler(object sender, UpdateDelegateCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class UpdateDelegateCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal UpdateDelegateCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
			base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public UpdateDelegateResponseMessageType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((UpdateDelegateResponseMessageType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void GetUserAvailabilityCompletedEventHandler(object sender, GetUserAvailabilityCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class GetUserAvailabilityCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal GetUserAvailabilityCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public GetUserAvailabilityResponseType Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((GetUserAvailabilityResponseType) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void GetUserOofSettingsCompletedEventHandler(object sender, GetUserOofSettingsCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class GetUserOofSettingsCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal GetUserOofSettingsCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public GetUserOofSettingsResponse Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((GetUserOofSettingsResponse) (results[0]));
			}
		}
	}

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	public delegate void SetUserOofSettingsCompletedEventHandler(object sender, SetUserOofSettingsCompletedEventArgs e);

	/// <remarks/>
	[GeneratedCode("wsdl", "2.0.50727.42")]
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	public partial class SetUserOofSettingsCompletedEventArgs : AsyncCompletedEventArgs
	{
		private object[] results;

		internal SetUserOofSettingsCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
			:
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public SetUserOofSettingsResponse Result
		{
			get
			{
				RaiseExceptionIfNecessary();
				return ((SetUserOofSettingsResponse) (results[0]));
			}
		}
	}
